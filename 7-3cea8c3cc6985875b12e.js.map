{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/property-information/lib/util/create.js","webpack:///./node_modules/refractor/lang/c.js","webpack:///./node_modules/property-information/lib/util/types.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/property-information/normalize.js","webpack:///./node_modules/refractor/lang/cpp.js","webpack:///./node_modules/refractor/lang/ruby.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/property-information/html.js","webpack:///./node_modules/property-information/lib/util/merge.js","webpack:///./node_modules/property-information/lib/util/schema.js","webpack:///./node_modules/property-information/lib/xlink.js","webpack:///./node_modules/property-information/lib/util/defined-info.js","webpack:///./node_modules/property-information/lib/util/info.js","webpack:///./node_modules/property-information/lib/xml.js","webpack:///./node_modules/property-information/lib/xmlns.js","webpack:///./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack:///./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack:///./node_modules/property-information/lib/aria.js","webpack:///./node_modules/property-information/find.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/is-decimal/index.js","webpack:///./node_modules/refractor/lang/basic.js","webpack:///./node_modules/refractor/lang/java.js","webpack:///./node_modules/refractor/lang/jsx.js","webpack:///./node_modules/refractor/lang/php.js","webpack:///./node_modules/refractor/lang/sql.js","webpack:///./node_modules/refractor/lang/typescript.js","webpack:///./node_modules/rehype-sectionize-headings/lib/hast_helpers.js","webpack:///./node_modules/react-waypoint/es/index.js","webpack:///./node_modules/consolidated-events/lib/index.esm.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/github-slugger/index.js","webpack:///./node_modules/emoji-regex/index.js","webpack:///./node_modules/hast-to-hyperscript/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/property-information/lib/html.js","webpack:///./node_modules/property-information/svg.js","webpack:///./node_modules/property-information/lib/svg.js","webpack:///./node_modules/style-to-object/index.js","webpack:///./node_modules/css/lib/parse/index.js","webpack:///./node_modules/unist-util-is/index.js","webpack:///./node_modules/refractor/index.js","webpack:///./node_modules/refractor/core.js","webpack:///./node_modules/hastscript/index.js","webpack:///./node_modules/hastscript/html.js","webpack:///./node_modules/hastscript/factory.js","webpack:///./node_modules/hast-util-parse-selector/index.js","webpack:///./node_modules/parse-entities/index.js","webpack:///./node_modules/is-hexadecimal/index.js","webpack:///./node_modules/is-alphanumerical/index.js","webpack:///./node_modules/is-alphabetical/index.js","webpack:///./node_modules/parse-entities/decode-entity.browser.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/refractor/lang/markup.js","webpack:///./node_modules/refractor/lang/css.js","webpack:///./node_modules/refractor/lang/clike.js","webpack:///./node_modules/refractor/lang/javascript.js","webpack:///./node_modules/refractor/lang/abap.js","webpack:///./node_modules/refractor/lang/actionscript.js","webpack:///./node_modules/refractor/lang/ada.js","webpack:///./node_modules/refractor/lang/apacheconf.js","webpack:///./node_modules/refractor/lang/apl.js","webpack:///./node_modules/refractor/lang/applescript.js","webpack:///./node_modules/refractor/lang/arduino.js","webpack:///./node_modules/refractor/lang/arff.js","webpack:///./node_modules/refractor/lang/asciidoc.js","webpack:///./node_modules/refractor/lang/asm6502.js","webpack:///./node_modules/refractor/lang/aspnet.js","webpack:///./node_modules/refractor/lang/autohotkey.js","webpack:///./node_modules/refractor/lang/autoit.js","webpack:///./node_modules/refractor/lang/bash.js","webpack:///./node_modules/refractor/lang/batch.js","webpack:///./node_modules/refractor/lang/bison.js","webpack:///./node_modules/refractor/lang/brainfuck.js","webpack:///./node_modules/refractor/lang/bro.js","webpack:///./node_modules/refractor/lang/clojure.js","webpack:///./node_modules/refractor/lang/coffeescript.js","webpack:///./node_modules/refractor/lang/crystal.js","webpack:///./node_modules/refractor/lang/csharp.js","webpack:///./node_modules/refractor/lang/csp.js","webpack:///./node_modules/refractor/lang/css-extras.js","webpack:///./node_modules/refractor/lang/d.js","webpack:///./node_modules/refractor/lang/dart.js","webpack:///./node_modules/refractor/lang/diff.js","webpack:///./node_modules/refractor/lang/django.js","webpack:///./node_modules/refractor/lang/docker.js","webpack:///./node_modules/refractor/lang/eiffel.js","webpack:///./node_modules/refractor/lang/elixir.js","webpack:///./node_modules/refractor/lang/elm.js","webpack:///./node_modules/refractor/lang/erb.js","webpack:///./node_modules/refractor/lang/erlang.js","webpack:///./node_modules/refractor/lang/flow.js","webpack:///./node_modules/refractor/lang/fortran.js","webpack:///./node_modules/refractor/lang/fsharp.js","webpack:///./node_modules/refractor/lang/gedcom.js","webpack:///./node_modules/refractor/lang/gherkin.js","webpack:///./node_modules/refractor/lang/git.js","webpack:///./node_modules/refractor/lang/glsl.js","webpack:///./node_modules/refractor/lang/go.js","webpack:///./node_modules/refractor/lang/graphql.js","webpack:///./node_modules/refractor/lang/groovy.js","webpack:///./node_modules/refractor/lang/haml.js","webpack:///./node_modules/refractor/lang/handlebars.js","webpack:///./node_modules/refractor/lang/haskell.js","webpack:///./node_modules/refractor/lang/haxe.js","webpack:///./node_modules/refractor/lang/hpkp.js","webpack:///./node_modules/refractor/lang/hsts.js","webpack:///./node_modules/refractor/lang/http.js","webpack:///./node_modules/refractor/lang/ichigojam.js","webpack:///./node_modules/refractor/lang/icon.js","webpack:///./node_modules/refractor/lang/inform7.js","webpack:///./node_modules/refractor/lang/ini.js","webpack:///./node_modules/refractor/lang/io.js","webpack:///./node_modules/refractor/lang/j.js","webpack:///./node_modules/refractor/lang/jolie.js","webpack:///./node_modules/refractor/lang/json.js","webpack:///./node_modules/refractor/lang/julia.js","webpack:///./node_modules/refractor/lang/keyman.js","webpack:///./node_modules/refractor/lang/kotlin.js","webpack:///./node_modules/refractor/lang/latex.js","webpack:///./node_modules/refractor/lang/less.js","webpack:///./node_modules/refractor/lang/liquid.js","webpack:///./node_modules/refractor/lang/lisp.js","webpack:///./node_modules/refractor/lang/livescript.js","webpack:///./node_modules/refractor/lang/lolcode.js","webpack:///./node_modules/refractor/lang/lua.js","webpack:///./node_modules/refractor/lang/makefile.js","webpack:///./node_modules/refractor/lang/markdown.js","webpack:///./node_modules/refractor/lang/markup-templating.js","webpack:///./node_modules/refractor/lang/matlab.js","webpack:///./node_modules/refractor/lang/mel.js","webpack:///./node_modules/refractor/lang/mizar.js","webpack:///./node_modules/refractor/lang/monkey.js","webpack:///./node_modules/refractor/lang/n4js.js","webpack:///./node_modules/refractor/lang/nasm.js","webpack:///./node_modules/refractor/lang/nginx.js","webpack:///./node_modules/refractor/lang/nim.js","webpack:///./node_modules/refractor/lang/nix.js","webpack:///./node_modules/refractor/lang/nsis.js","webpack:///./node_modules/refractor/lang/objectivec.js","webpack:///./node_modules/refractor/lang/ocaml.js","webpack:///./node_modules/refractor/lang/opencl.js","webpack:///./node_modules/refractor/lang/oz.js","webpack:///./node_modules/refractor/lang/parigp.js","webpack:///./node_modules/refractor/lang/parser.js","webpack:///./node_modules/refractor/lang/pascal.js","webpack:///./node_modules/refractor/lang/perl.js","webpack:///./node_modules/refractor/lang/php-extras.js","webpack:///./node_modules/refractor/lang/plsql.js","webpack:///./node_modules/refractor/lang/powershell.js","webpack:///./node_modules/refractor/lang/processing.js","webpack:///./node_modules/refractor/lang/prolog.js","webpack:///./node_modules/refractor/lang/properties.js","webpack:///./node_modules/refractor/lang/protobuf.js","webpack:///./node_modules/refractor/lang/pug.js","webpack:///./node_modules/refractor/lang/puppet.js","webpack:///./node_modules/refractor/lang/pure.js","webpack:///./node_modules/refractor/lang/python.js","webpack:///./node_modules/refractor/lang/q.js","webpack:///./node_modules/refractor/lang/qore.js","webpack:///./node_modules/refractor/lang/r.js","webpack:///./node_modules/refractor/lang/reason.js","webpack:///./node_modules/refractor/lang/renpy.js","webpack:///./node_modules/refractor/lang/rest.js","webpack:///./node_modules/refractor/lang/rip.js","webpack:///./node_modules/refractor/lang/roboconf.js","webpack:///./node_modules/refractor/lang/rust.js","webpack:///./node_modules/refractor/lang/sas.js","webpack:///./node_modules/refractor/lang/sass.js","webpack:///./node_modules/refractor/lang/scala.js","webpack:///./node_modules/refractor/lang/scheme.js","webpack:///./node_modules/refractor/lang/scss.js","webpack:///./node_modules/refractor/lang/smalltalk.js","webpack:///./node_modules/refractor/lang/smarty.js","webpack:///./node_modules/refractor/lang/soy.js","webpack:///./node_modules/refractor/lang/stylus.js","webpack:///./node_modules/refractor/lang/swift.js","webpack:///./node_modules/refractor/lang/tap.js","webpack:///./node_modules/refractor/lang/tcl.js","webpack:///./node_modules/refractor/lang/textile.js","webpack:///./node_modules/refractor/lang/tsx.js","webpack:///./node_modules/refractor/lang/tt2.js","webpack:///./node_modules/refractor/lang/twig.js","webpack:///./node_modules/refractor/lang/vbnet.js","webpack:///./node_modules/refractor/lang/velocity.js","webpack:///./node_modules/refractor/lang/verilog.js","webpack:///./node_modules/refractor/lang/vhdl.js","webpack:///./node_modules/refractor/lang/vim.js","webpack:///./node_modules/refractor/lang/visual-basic.js","webpack:///./node_modules/refractor/lang/wasm.js","webpack:///./node_modules/refractor/lang/wiki.js","webpack:///./node_modules/refractor/lang/xeora.js","webpack:///./node_modules/refractor/lang/xojo.js","webpack:///./node_modules/refractor/lang/xquery.js","webpack:///./node_modules/refractor/lang/yaml.js","webpack:///./node_modules/rehype-decorate/lib/index.js","webpack:///./node_modules/rehype-decorate/lib/get_props.js","webpack:///./node_modules/rehype-sectionize-headings/lib/index.js","webpack:///./node_modules/rehype-sectionize-headings/lib/wrap_headings.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","normalize","__webpack_require__","Schema","DefinedInfo","definition","prop","info","space","mustUseProperty","attributes","props","properties","transform","property","normal","indexOf","attribute","c","Prism","languages","extend","keyword","operator","number","insertBefore","macro","pattern","lookbehind","alias","inside","string","directive","constant","displayName","aliases","powers","increment","Math","pow","boolean","booleanish","overloadedBoolean","spaceSeparated","commaSeparated","commaOrSpaceSeparated","$export","fails","defined","quot","createHTML","tag","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split","refractorC","cpp","register","class-name","raw-string","greedy","ruby","comment","interpolation","delimiter","rest","regex","variable","symbol","builtin","url","this","merge","xlink","xml","xmlns","aria","html","xtend","definitions","index","proto","prototype","create","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","Info","types","mask","mark","check","values","xmlLang","xmlBase","xmlSpace","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","caseSensitiveTransform","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","data","schema","Type","valid","charAt","dash","camelcase","toUpperCase","datasetToProperty","cap","kebab","datasetToAttribute","$0","trim","parse","input","empty","whiteSpace","stringify","str","left","right","val","comma","lastIndex","end","options","settings","padLeft","padRight","concat","character","code","charCodeAt","basic","function","punctuation","java","annotation","generics","jsx","javascript","util","clone","spread","attr-value","script","script-punctuation","stringifyToken","token","content","map","walkTokens","tokens","openedTags","notTagNorBrace","type","tagName","pop","openedBraces","plainText","splice","Token","hooks","add","env","language","php","shell-comment","package","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","string_interpolation","buildPlaceholders","tokenizePlaceholders","sql","typescript","ts","_toConsumableArray","arr","arr2","_arrayWithoutHoles","iter","Symbol","iterator","Object","toString","from","_iterableToArray","TypeError","_nonIterableSpread","_objectSpread","target","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","obj","defineProperty","configurable","writable","updateLast","list","fn","head","item","getClassName","node","className","updateLastChild","children","updateChildren","appendChild","toClassList","assign","Error","JSON","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","consolidated_events__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","react_is__WEBPACK_IMPORTED_MODULE_3__","computeOffsetPixels","offset","contextHeight","pixelOffset","isNaN","parseFloat","isFinite","percentOffset","parseOffsetAsPercentage","constants","above","below","invisible","errorMessage","ensureChildrenIsValid","a","Children","only","e","isDOMElement","Component","errorMessage$1","timeout","timeoutQueue","onNextTick","cb","setTimeout","shift","isSubscribed","clearTimeout","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","defaultProps","topOffset","bottomOffset","horizontal","onEnter","onLeave","onPositionChange","fireOnRapidScroll","BaseClass","PureComponent","Waypoint","_BaseClass","instance","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","refElement","_ref","subClass","superClass","constructor","setPrototypeOf","_inherits","_this2","getWindow","cancelOnNextTick","ref","ensureRefIsProvidedByChild","_handleScroll","bind","scrollableAncestor","_findScrollableAncestor","scrollEventListenerUnsubscribe","passive","resizeEventListenerUnsubscribe","window","newProps","_this3","_props","resolveScrollableAncestorProp","parentNode","document","body","style","getComputedStyle","overflow","getPropertyValue","event","bounds","_getBounds","currentPosition","viewportBottom","viewportTop","waypointTop","waypointBottom","getCurrentPosition","previousPosition","_previousPosition","callbackArg","isRapidScrollDown","isRapidScrollUp","_ref$getBoundingClien","getBoundingClientRect","top","bottom","contextScrollTop","innerWidth","innerHeight","offsetWidth","offsetHeight","_props2","_this4","createElement","fontSize","current","cloneElement","innerRef","propTypes","debug","bool","func","any","oneOfType","d","addEventListener","CAN_USE_DOM","memoized","canUsePassiveEventListeners","removeEventListener","supportsPassiveOption","opts","get","noop","testPassiveEventListeners","ensureCanMutateNextEventHandlers","eventHandlers","handlers","nextHandlers","TargetEventHandlers","events","getEventHandlers","eventName","normalizedEventOptions","capture","once","handleEvent","handler","listener","EVENT_HANDLERS_KEY","eventOptions","normalizeEventOptions","b","for","f","g","h","k","l","m","p","t","u","q","$$typeof","v","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Profiler","Portal","StrictMode","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isProfiler","isPortal","isStrictMode","emoji","BananaSlug","reset","slug","maintainCase","lower","whitespace","slugger","occurrences","svg","find","spaces","commas","ns","is","dashes","addAttribute","ctx","subprop","hyperscript","vdom","react","styleReplacer","$1","prefix","Boolean","toH","parentSchema","name","elements","result","styleCase","error","message","parseStyle","namespace","context","cleanup","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","open","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","results","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","order","orient","orientation","origin","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","declaration","declarations","stylesheet","output","hasIterator","len","commentre","css","lineno","column","updatePosition","lines","match","lastIndexOf","position","line","Position","errorsList","msg","err","reason","filename","silent","close","comments","atrule","rule","re","pos","selector","s","ret","decl","decls","keyframe","vals","rulesList","atimport","_compileAtrule","atcharset","atnamespace","RegExp","vendor","frames","keyframes","atkeyframes","atmedia","atcustommedia","supports","atsupports","doc","atdocument","sel","selectors","atpage","athost","atfontface","addParent","parent","isNode","childParent","parsingErrors","convert","typeFactory","ok","tests","checks","convertAll","hasParent","hasIndex","Infinity","refractor","restore","manual","disableWorkerMessageHandler","decode","markup","clike","js","own","Refractor","refract","grammar","highlight","sup","registered","encode","stringifyAll","run","attrs","factory","parseSelector","parsePrimitive","positiveNumber","Number","defaultTagName","isChildren","unshift","addProperty","addChild","nodes","parsePrimitives","subvalue","dot","hash","legacy","invalid","decimal","hexadecimal","alphanumerical","decodeEntity","option","defaults","indent","entityCharacters","namedEntity","terminated","characters","reference","following","warning","entity","prev","next","diff","additional","nonTerminated","handleText","handleReference","handleWarning","textContext","referenceContext","warningContext","queue","now","MESSAGES","at","flush","NAMED","HEXADECIMAL","DECIMAL","TESTS","NAMED_UNKNOWN","NAMED_NOT_TERMINATED","NAMED_EMPTY","NUMERIC_NOT_TERMINATED","parseInt","BASE","NUMERIC_PROHIBITED","NUMERIC_DISALLOWED","disallowed","fromCharCode","NUMERIC_EMPTY","Function","alphabetical","el","innerHTML","textContent","_self","WorkerGlobalScope","uniqueId","o","objId","visited","redef","before","insert","root","newToken","DFS","callback","plugins","highlightAll","highlightAllUnder","container","element","querySelectorAll","highlightElement","nodeName","Worker","worker","onmessage","evt","highlightedCode","postMessage","immediateClose","tokenize","matchGrammar","strarr","startPos","oneshot","patterns","j","lookbehindLength","flags","delNum","after","args","wrapped","all","callbacks","matchedStr","currentScript","getElementsByTagName","hasAttribute","readyState","requestAnimationFrame","prolog","doctype","cdata","attr-name","mathml","important","style-attr","function-variable","template-string","interpolation-punctuation","abap","string-template","eol-comment","string-operator","token-operator","actionscript","ada","apacheconf","directive-inline","directive-block","directive-block-parameter","directive-flags","apl","statement","system-function","monadic-operator","dyadic-operator","assignment","dfn","applescript","class","refractorCpp","arduino","arff","asciidoc","quoted","interpreted","comment-block","table","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","attribute-entry","hr","page-break","admonition","callout","inline","attribute-ref","italic","bold","replacement","line-continuation","asm6502","opcode","hexnumber","binarynumber","decimalnumber","aspnet","page-directive tag","directive tag","csharp","asp comment","asp script","autohotkey","autoit","bash","insideString","shebang","shell","batch","parameter","command","bison","bison-variable","brainfuck","pointer","decrement","branching","bro","clojure","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","multiline-string","refractorRuby","crystal","expansion","generic-method","preprocessor","dotnet","csp","safe","unsafe","cssExtras","pseudo-element","pseudo-class","hexcode","token-string","dart","metadata","coord","deleted","inserted","django","_django_template","jinja2","docker","dockerfile","eiffel","elixir","atom","argument","elm","import_statement","hvariable","erb","erlang","quoted-function","quoted-atom","flow","flow-punctuation","fortran","quoted-number","fsharp","gedcom","line-value","level","gherkin","pystring","feature","scenario","table-body","outline","td","table-head","th","git","commit_sha1","glsl","go","graphql","groovy","spock-block","expression","haml","multiline-code","filter-name","filters","all_filters","handlebars","block","brackets","haskell","haxe","reification","hpkp","hsts","http","request-line","response-status","header-name","httpLanguages","application/json","application/xml","text/xml","text/html","contentType","ichigojam","icon","builtin-keyword","inform7","substitution","verb","ini","io","triple-quoted-string","adverb","conjunction","jolie","aggregates","withExtension","redirects","json","null","jsonp","julia","keyman","kotlin","latex","funcPattern","insideEqu","equation-command","equation","headline","less","mixin-usage","liquid","lisp","simple_form","primitive","par","heading","quoted-symbol","lisp-property","interactive","defvar","defun","lambda","car","lisp-marker","varform","forms","arglist","rest-vars","other-marker-vars","sublist","elisp","emacs","livescript","interpolated-string","keyword-operator","identifier","lolcode","lua","makefile","markdown","blockquote","url-reference","markupTemplating","placeholderPattern","replaceFilter","tokenStack","substring","middle","matlab","mel","flag","mizar","monkey","type-char","n4js","n4jsd","nasm","nginx","nim","ignore","nix","antiquotation","nsis","objectivec","ocaml","opencl","function-opencl-kernel","constant-opencl-kernel","type-opencl-host","boolean-opencl-host","constant-opencl-host","function-opencl-host","oz","parigp","keywords","parser","escape","parser-comment","parser-punctuation","pascal","objectpascal","perl","filehandle","vstring","refractorPhp","phpExtras","refractorSql","plsql","powershell","processing","protobuf","pug","multiline-script","multiline-plain-text","flow-control","each","branch","mixin","plain-text","puppet","heredoc","extended-regex","double-quoted","datatype","short-variable","pure","inline-lang","special","python","datetime","qore","percent-operator","ellipsis","renpy","substitution-def","link-target","field","command-line-option","literal-block-punctuation","quoted-literal-block","list-bullet","doctest-block","inline-literal","interpreted-text","rip","date","time","roboconf","component","optional","wildcard","rust","lifetime-annotation","macro-rules","closure-params","sas","datalines","sass","atrule-line","variable-line","property-line","refractorJava","scala","scss","smalltalk","block-arguments","temporary-variables","smarty","smarty-comment","smartyLitteralMode","soy","stringPattern","numberPattern","command-arg","soyLitteralMode","stylus","atrule-declaration","variable-declaration","property-declaration","swift","tap","fail","pass","pragma","bailout","plan","subtest","yamlish","yaml","tcl","textile","modifierRegex","modifierTokens","class-id","phrase","block-tag","modifier","link-ref","image","footnote","acronym","nestedPatterns","refractorJsx","refractorTypescript","tsx","tt2","twig","ld","rd","other","refractorBasic","vbnet","velocity","unparsed","velocity-comment","verilog","vhdl","vhdl-vectors","vim","visualBasic","vb","wasm","wiki","block-comment","emphasis","bold italic","table-tag","table-bar","nowiki","xeora","function-inline","function-block","directive-block-open","directive-block-separator","directive-block-close","xeoracube","xojo","xquery","xquery-comment","extension","xquery-element","xquery-attribute","scalar","decorate","decorateFragment","reduceNodes","parseComment","COMMENT","_get_props","__esModule","reduce","commentProps","trimEnd","tail","last","prevProps","applyProps","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","done","_iterableToArrayLimit","_nonIterableRest","substr","state","_fn","_fn2","_match","_match2","addClassName","_match3","_match4","_match5","_match6","_match7","_match8","_match9","_match10","_match11","_match12","_match13","_match14","wrapH2","h2","_hast_helpers","section","wrapH3","h3","_wrap_headings","DEFAULTS","sectionTag","sectionClass","bodyTag","bodyClass","_DEFAULTS$h2$options","_DEFAULTS$h3$options","_ref$tagName","_ref$sectionTag","_ref$sectionClass","_ref$bodyTag","_ref$bodyClass","extraClass","wrapper","_body"],"mappings":"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C3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MAC3B0/B,EAAAz7B,SAAmBjE,EAAQ,MA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","file":"7-3cea8c3cc6985875b12e.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n","'use strict'\n\nmodule.exports = c\nc.displayName = 'c'\nc.aliases = []\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    operator: /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n    number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight the path of the include statement as a string\n        string: {\n          pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n          lookbehind: true\n        },\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  })\n  delete Prism.languages.c['class-name']\n  delete Prism.languages.c['boolean']\n}\n","'use strict'\n\nvar powers = 0\n\nexports.boolean = increment()\nexports.booleanish = increment()\nexports.overloadedBoolean = increment()\nexports.number = increment()\nexports.spaceSeparated = increment()\nexports.commaSeparated = increment()\nexports.commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return Math.pow(2, ++powers)\n}\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict'\n\nmodule.exports = normalize\n\nfunction normalize(value) {\n  return value.toLowerCase().replace(/\\b[:-]\\b/g, '')\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n  })\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'class-name': {\n      pattern: /(class\\s+)\\w+/i,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = []\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */\n  ;(function(Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [\n        /#.*/,\n        {\n          pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n          greedy: true\n        }\n      ],\n      keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    })\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    }\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [\n        {\n          pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          // Here we need to specifically allow interpolation\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    })\n    Prism.languages.ruby.string = [\n      {\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        // Here we need to specifically allow interpolation\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }\n    ]\n  })(Prism)\n}\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar html = require('./lib/html')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html])\n","'use strict'\n\nvar xtend = require('xtend')\nvar Schema = require('./schema')\n\nmodule.exports = merge\n\nfunction merge(definitions) {\n  var length = definitions.length\n  var property = []\n  var normal = []\n  var index = -1\n  var info\n  var space\n\n  while (++index < length) {\n    info = definitions[index]\n    property.push(info.property)\n    normal.push(info.normal)\n    space = info.space\n  }\n\n  return new Schema(\n    xtend.apply(null, property),\n    xtend.apply(null, normal),\n    space\n  )\n}\n","'use strict'\n\nmodule.exports = Schema\n\nvar proto = Schema.prototype\n\nproto.space = null\nproto.normal = {}\nproto.property = {}\n\nfunction Schema(property, normal, space) {\n  this.property = property\n  this.normal = normal\n\n  if (space) {\n    this.space = space\n  }\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  mark(this, 'space', space)\n  Info.call(this, property, attribute)\n  mark(this, 'boolean', check(mask, types.boolean))\n  mark(this, 'booleanish', check(mask, types.booleanish))\n  mark(this, 'overloadedBoolean', check(mask, types.overloadedBoolean))\n  mark(this, 'number', check(mask, types.number))\n  mark(this, 'commaSeparated', check(mask, types.commaSeparated))\n  mark(this, 'spaceSeparated', check(mask, types.spaceSeparated))\n  mark(this, 'commaOrSpaceSeparated', check(mask, types.commaOrSpaceSeparated))\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n\nfunction check(value, mask) {\n  return (value & mask) === mask\n}\n","'use strict'\n\nmodule.exports = Info\n\nvar proto = Info.prototype\n\nproto.space = null\nproto.attribute = null\nproto.property = null\nproto.boolean = false\nproto.booleanish = false\nproto.overloadedBoolean = false\nproto.number = false\nproto.commaSeparated = false\nproto.spaceSeparated = false\nproto.commaOrSpaceSeparated = false\nproto.mustUseProperty = false\nproto.defined = false\n\nfunction Info(property, attribute) {\n  this.property = property\n  this.attribute = attribute\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n})\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n})\n","'use strict'\n\nvar caseSensitiveTransform = require('./case-sensitive-transform')\n\nmodule.exports = caseInsensitiveTransform\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","'use strict'\n\nmodule.exports = caseSensitiveTransform\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\n\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\n\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-a-z0-9.:_]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","'use strict'\n\nvar trim = require('trim')\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = trim(String(value || empty))\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return trim(values.join(space))\n}\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar trim = require('trim')\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n/* Parse comma-separated tokens to an array. */\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = trim(input.slice(lastIndex, index))\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n/* Compile an array to comma-separated tokens.\n * `options.padLeft` (default: `true`) pads a space left of each\n * token, and `options.padRight` (default: `false`) pads a space\n * to the right of each token. */\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  /* Ensure the last empty entry is seen. */\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return trim(values.join(right + comma + left))\n}\n","'use strict'\n\nmodule.exports = decimal\n\n/* Check if the given character code, or the character\n * code at the first character, is decimal. */\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nmodule.exports = basic\nbasic.displayName = 'basic'\nbasic.aliases = []\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n      greedy: true\n    },\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  Prism.languages.java = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n    number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('java', 'function', {\n    annotation: {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('java', 'class-name', {\n    generics: {\n      pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n      alias: 'function',\n      inside: {\n        keyword: Prism.languages.java.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function(Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i\n    Prism.languages.jsx.tag.inside[\n      'attr-value'\n    ].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n          inside: {\n            punctuation: /\\.{3}|[{}.]/,\n            'attr-value': /\\w+/\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?={)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          },\n          alias: 'language-javascript'\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    // The following will handle plain text inside tags\n    var stringifyToken = function(token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function(tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function(env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   *\n   * Supports the following:\n   *      - Extends clike syntax\n   *      - Support for PHP 5.3+ (namespaces, traits, generators, etc)\n   *      - Smarter constant and function matching\n   *\n   * Adds the following new token classes:\n   *      constant, delimiter, variable, function, package\n   */\n  ;(function(Prism) {\n    Prism.languages.php = Prism.languages.extend('clike', {\n      keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n      constant: /\\b[A-Z0-9_]{2,}\\b/,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('php', 'string', {\n      'shell-comment': {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      }\n    })\n    Prism.languages.insertBefore('php', 'keyword', {\n      delimiter: {\n        pattern: /\\?>|<\\?(?:php|=)?/i,\n        alias: 'important'\n      },\n      variable: /\\$+(?:\\w+\\b|(?={))/i,\n      package: {\n        pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      }\n    })\n    // Must be defined after the function pattern\n    Prism.languages.insertBefore('php', 'operator', {\n      property: {\n        pattern: /(->)[\\w]+/,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('php', 'string', {\n      'nowdoc-string': {\n        pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      'heredoc-string': {\n        pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: null // See below\n        }\n      },\n      'single-quoted-string': {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          interpolation: null // See below\n        }\n      }\n    })\n    // The different types of PHP strings \"replace\" the C-like standard string\n    delete Prism.languages.php['string']\n    var string_interpolation = {\n      pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.php\n      }\n    }\n    Prism.languages.php['heredoc-string'].inside[\n      'interpolation'\n    ] = string_interpolation\n    Prism.languages.php['double-quoted-string'].inside[\n      'interpolation'\n    ] = string_interpolation\n    Prism.hooks.add('before-tokenize', function(env) {\n      if (!/(?:<\\?php|<\\?)/gi.test(env.code)) {\n        return\n      }\n      var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sql\nsql.displayName = 'sql'\nsql.aliases = []\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    variable: /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i, // Should we highlight user defined functions too?\n    keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n    operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = typescript\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\nfunction typescript(Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n    builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n  })\n  Prism.languages.ts = Prism.languages.typescript\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getClassName = getClassName;\nexports.updateLastChild = updateLastChild;\nexports.updateLast = updateLast;\nexports.updateChildren = updateChildren;\nexports.appendChild = appendChild;\nexports.toClassList = toClassList;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Hast helpers\n * ============\n *\n * These are some utility functions that deal with Hast nodes.\n *\n * \n */\n\n/**\n * Returns the class name of a HAST node.\n */\nfunction getClassName(node\n/*: HastNode */\n) {\n  return node && (node.properties || {}).className;\n}\n/**\n * Updates the last child of a HAST node.\n */\n\n\nfunction updateLastChild(node\n/*: HastNode */\n, fn\n/*: HastNode => HastNode */\n) {\n  var children\n  /*: HastNode[] */\n  = node.children || [];\n  return _objectSpread({}, node, {\n    children: updateLast(children, fn)\n  });\n}\n/**\n * Updates the last item on a list with a given `fn` function.\n */\n\n\nfunction updateLast(list\n/*: HastNode[] */\n, fn\n/*: HastNode => HastNode */\n) {\n  if (list.length === 0) return [];\n  var head\n  /*: HastNode[] */\n  = list.slice(0, list.length - 1);\n  var item\n  /*: HastNode */\n  = list[list.length - 1];\n  return _toConsumableArray(head).concat([fn(item)]);\n}\n/**\n * Updates the `children` of a HAST node.\n */\n\n\nfunction updateChildren(node\n/*: HastNode */\n, fn\n/*: HastNode[] => HastNode[] */\n) {\n  var children = fn(node.children || []);\n  return _objectSpread({}, node, {\n    children: children\n  });\n}\n/**\n * Adds a child to a HAST node.\n */\n\n\nfunction appendChild(node\n/*: HastNode */\n, item\n/*: HastNode */\n) {\n  var children = _toConsumableArray(node.children || []).concat([item]);\n\n  return _objectSpread({}, node, {\n    children: children\n  });\n}\n/**\n * Helper to convert to a class list.\n */\n\n\nfunction toClassList(str\n/*: string | string[] */\n)\n/*: string[] */\n{\n  if (typeof str === 'string') return str.split(' ');\n  if (Array.isArray(str)) return str;\n  throw Object.assign(new Error(\"Malformed className '\".concat(JSON.stringify(str), \"'\")), {\n    code: 'MALFORMED_CLASSNAME',\n    input: str\n  });\n}","import React from 'react';\nimport { addEventListener } from 'consolidated-events';\nimport PropTypes from 'prop-types';\nimport { isForwardRef } from 'react-is';\n\n/**\n * Attempts to parse the offset provided as a prop as a percentage. For\n * instance, if the component has been provided with the string \"20%\" as\n * a value of one of the offset props. If the value matches, then it returns\n * a numeric version of the prop. For instance, \"20%\" would become `0.2`.\n * If `str` isn't a percentage, then `undefined` will be returned.\n *\n * @param {string} str The value of an offset prop to be converted to a\n *   number.\n * @return {number|undefined} The numeric version of `str`. Undefined if `str`\n *   was not a percentage.\n */\nfunction parseOffsetAsPercentage(str) {\n  if (str.slice(-1) === '%') {\n    return parseFloat(str.slice(0, -1)) / 100;\n  }\n}\n\n/**\n * Attempts to parse the offset provided as a prop as a pixel value. If\n * parsing fails, then `undefined` is returned. Three examples of values that\n * will be successfully parsed are:\n * `20`\n * \"20px\"\n * \"20\"\n *\n * @param {string|number} str A string of the form \"{number}\" or \"{number}px\",\n *   or just a number.\n * @return {number|undefined} The numeric version of `str`. Undefined if `str`\n *   was neither a number nor string ending in \"px\".\n */\nfunction parseOffsetAsPixels(str) {\n  if (!isNaN(parseFloat(str)) && isFinite(str)) {\n    return parseFloat(str);\n  } else if (str.slice(-2) === 'px') {\n    return parseFloat(str.slice(0, -2));\n  }\n}\n\n/**\n * @param {string|number} offset\n * @param {number} contextHeight\n * @return {number} A number representing `offset` converted into pixels.\n */\nfunction computeOffsetPixels(offset, contextHeight) {\n  var pixelOffset = parseOffsetAsPixels(offset);\n\n  if (typeof pixelOffset === 'number') {\n    return pixelOffset;\n  }\n\n  var percentOffset = parseOffsetAsPercentage(offset);\n  if (typeof percentOffset === 'number') {\n    return percentOffset * contextHeight;\n  }\n}\n\nvar constants = {\n  above: 'above',\n  inside: 'inside',\n  below: 'below',\n  invisible: 'invisible'\n};\n\nfunction debugLog() {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(arguments); // eslint-disable-line no-console\n  }\n}\n\nvar errorMessage = '<Waypoint> expected to receive a single React element child.\\n\\n' + 'See https://goo.gl/LrBNgw for more info.';\n\n/**\n * Raise an error if more that one child was provided to \"children\"\n *\n * @param {?React.element} children\n * @return {undefined}\n */\nfunction ensureChildrenIsValid(children) {\n  if (children) {\n    try {\n      React.Children.only(children);\n    } catch (e) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n\n/**\n * When an element's type is a string, it represents a DOM node with that tag name\n * https://facebook.github.io/react/blog/2015/12/18/react-components-elements-and-instances.html#dom-elements\n *\n * @param {React.element} Component\n * @return {bool} Whether the component is a DOM Element\n */\nfunction isDOMElement(Component) {\n  return typeof Component.type === 'string';\n}\n\nvar errorMessage$1 = '<Waypoint> needs a DOM element to compute boundaries. The child you passed is neither a ' + 'DOM element (e.g. <div>) nor does it use the innerRef prop.\\n\\n' + 'See https://goo.gl/LrBNgw for more info.';\n\n/**\n * Raise an error if \"children\" is not a DOM Element and there is no ref provided to Waypoint\n *\n * @param {?React.element} children\n * @param {?HTMLElement} ref\n * @return {undefined}\n */\nfunction ensureRefIsProvidedByChild(children, ref) {\n  if (children && !isDOMElement(children) && !ref) {\n    throw new Error(errorMessage$1);\n  }\n}\n\n/**\n * @param {object} bounds An object with bounds data for the waypoint and\n *   scrollable parent\n * @return {string} The current position of the waypoint in relation to the\n *   visible portion of the scrollable parent. One of `constants.above`,\n *   `constants.below`, or `constants.inside`.\n */\nfunction getCurrentPosition(bounds) {\n  if (bounds.viewportBottom - bounds.viewportTop === 0) {\n    return constants.invisible;\n  }\n\n  // top is within the viewport\n  if (bounds.viewportTop <= bounds.waypointTop && bounds.waypointTop <= bounds.viewportBottom) {\n    return constants.inside;\n  }\n\n  // bottom is within the viewport\n  if (bounds.viewportTop <= bounds.waypointBottom && bounds.waypointBottom <= bounds.viewportBottom) {\n    return constants.inside;\n  }\n\n  // top is above the viewport and bottom is below the viewport\n  if (bounds.waypointTop <= bounds.viewportTop && bounds.viewportBottom <= bounds.waypointBottom) {\n    return constants.inside;\n  }\n\n  if (bounds.viewportBottom < bounds.waypointTop) {\n    return constants.below;\n  }\n\n  if (bounds.waypointTop < bounds.viewportTop) {\n    return constants.above;\n  }\n\n  return constants.invisible;\n}\n\nvar timeout = void 0;\nvar timeoutQueue = [];\n\nfunction onNextTick(cb) {\n  timeoutQueue.push(cb);\n\n  if (!timeout) {\n    timeout = setTimeout(function () {\n      timeout = null;\n\n      // Drain the timeoutQueue\n      var item = void 0;\n      // eslint-disable-next-line no-cond-assign\n      while (item = timeoutQueue.shift()) {\n        item();\n      }\n    }, 0);\n  }\n\n  var isSubscribed = true;\n\n  return function () {\n    function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      var index = timeoutQueue.indexOf(cb);\n      if (index === -1) {\n        return;\n      }\n\n      timeoutQueue.splice(index, 1);\n\n      if (!timeoutQueue.length && timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n    }\n\n    return unsubscribe;\n  }();\n}\n\nfunction resolveScrollableAncestorProp(scrollableAncestor) {\n  // When Waypoint is rendered on the server, `window` is not available.\n  // To make Waypoint easier to work with, we allow this to be specified in\n  // string form and safely convert to `window` here.\n  if (scrollableAncestor === 'window') {\n    return global.window;\n  }\n\n  return scrollableAncestor;\n}\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  topOffset: '0px',\n  bottomOffset: '0px',\n  horizontal: false,\n  onEnter: function () {\n    function onEnter() {}\n\n    return onEnter;\n  }(),\n  onLeave: function () {\n    function onLeave() {}\n\n    return onLeave;\n  }(),\n  onPositionChange: function () {\n    function onPositionChange() {}\n\n    return onPositionChange;\n  }(),\n\n  fireOnRapidScroll: true\n};\n\n// React.PureComponent was added in React 15.3.0\nvar BaseClass = typeof React.PureComponent !== 'undefined' ? React.PureComponent : React.Component;\n\n// Calls a function when you scroll to the element.\n\nvar Waypoint = function (_BaseClass) {\n  _inherits(Waypoint, _BaseClass);\n\n  function Waypoint(props) {\n    _classCallCheck(this, Waypoint);\n\n    var _this = _possibleConstructorReturn(this, (Waypoint.__proto__ || Object.getPrototypeOf(Waypoint)).call(this, props));\n\n    _this.refElement = function (e) {\n      return _this._ref = e;\n    };\n    return _this;\n  }\n\n  _createClass(Waypoint, [{\n    key: 'componentWillMount',\n    value: function () {\n      function componentWillMount() {\n        ensureChildrenIsValid(this.props.children);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: 'componentDidMount',\n    value: function () {\n      function componentDidMount() {\n        var _this2 = this;\n\n        if (!Waypoint.getWindow()) {\n          return;\n        }\n\n        // this._ref may occasionally not be set at this time. To help ensure that\n        // this works smoothly and to avoid layout thrashing, we want to delay the\n        // initial execution until the next tick.\n        this.cancelOnNextTick = onNextTick(function () {\n          _this2.cancelOnNextTick = null;\n\n          // Berofe doing anything, we want to check that this._ref is avaliable in Waypoint\n          ensureRefIsProvidedByChild(_this2.props.children, _this2._ref);\n\n          _this2._handleScroll = _this2._handleScroll.bind(_this2);\n          _this2.scrollableAncestor = _this2._findScrollableAncestor();\n\n          if (process.env.NODE_ENV !== 'production' && _this2.props.debug) {\n            debugLog('scrollableAncestor', _this2.scrollableAncestor);\n          }\n\n          _this2.scrollEventListenerUnsubscribe = addEventListener(_this2.scrollableAncestor, 'scroll', _this2._handleScroll, { passive: true });\n\n          _this2.resizeEventListenerUnsubscribe = addEventListener(window, 'resize', _this2._handleScroll, { passive: true });\n\n          _this2._handleScroll(null);\n        });\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function () {\n      function componentWillReceiveProps(newProps) {\n        ensureChildrenIsValid(newProps.children);\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: 'componentDidUpdate',\n    value: function () {\n      function componentDidUpdate() {\n        var _this3 = this;\n\n        if (!Waypoint.getWindow()) {\n          return;\n        }\n\n        if (!this.scrollableAncestor) {\n          // The Waypoint has not yet initialized.\n          return;\n        }\n\n        // The element may have moved, so we need to recompute its position on the\n        // page. This happens via handleScroll in a way that forces layout to be\n        // computed.\n        //\n        // We want this to be deferred to avoid forcing layout during render, which\n        // causes layout thrashing. And, if we already have this work enqueued, we\n        // can just wait for that to happen instead of enqueueing again.\n        if (this.cancelOnNextTick) {\n          return;\n        }\n\n        this.cancelOnNextTick = onNextTick(function () {\n          _this3.cancelOnNextTick = null;\n          _this3._handleScroll(null);\n        });\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: 'componentWillUnmount',\n    value: function () {\n      function componentWillUnmount() {\n        if (!Waypoint.getWindow()) {\n          return;\n        }\n\n        if (this.scrollEventListenerUnsubscribe) {\n          this.scrollEventListenerUnsubscribe();\n        }\n        if (this.resizeEventListenerUnsubscribe) {\n          this.resizeEventListenerUnsubscribe();\n        }\n\n        if (this.cancelOnNextTick) {\n          this.cancelOnNextTick();\n        }\n      }\n\n      return componentWillUnmount;\n    }()\n\n    /**\n     * Traverses up the DOM to find an ancestor container which has an overflow\n     * style that allows for scrolling.\n     *\n     * @return {Object} the closest ancestor element with an overflow style that\n     *   allows for scrolling. If none is found, the `window` object is returned\n     *   as a fallback.\n     */\n\n  }, {\n    key: '_findScrollableAncestor',\n    value: function () {\n      function _findScrollableAncestor() {\n        var _props = this.props,\n            horizontal = _props.horizontal,\n            scrollableAncestor = _props.scrollableAncestor;\n\n\n        if (scrollableAncestor) {\n          return resolveScrollableAncestorProp(scrollableAncestor);\n        }\n\n        var node = this._ref;\n\n        while (node.parentNode) {\n          node = node.parentNode;\n\n          if (node === document.body) {\n            // We've reached all the way to the root node.\n            return window;\n          }\n\n          var style = window.getComputedStyle(node);\n          var overflowDirec = horizontal ? style.getPropertyValue('overflow-x') : style.getPropertyValue('overflow-y');\n          var overflow = overflowDirec || style.getPropertyValue('overflow');\n\n          if (overflow === 'auto' || overflow === 'scroll') {\n            return node;\n          }\n        }\n\n        // A scrollable ancestor element was not found, which means that we need to\n        // do stuff on window.\n        return window;\n      }\n\n      return _findScrollableAncestor;\n    }()\n\n    /**\n     * @param {Object} event the native scroll event coming from the scrollable\n     *   ancestor, or resize event coming from the window. Will be undefined if\n     *   called by a React lifecyle method\n     */\n\n  }, {\n    key: '_handleScroll',\n    value: function () {\n      function _handleScroll(event) {\n        if (!this._ref) {\n          // There's a chance we end up here after the component has been unmounted.\n          return;\n        }\n\n        var bounds = this._getBounds();\n        var currentPosition = getCurrentPosition(bounds);\n        var previousPosition = this._previousPosition;\n\n        if (process.env.NODE_ENV !== 'production' && this.props.debug) {\n          debugLog('currentPosition', currentPosition);\n          debugLog('previousPosition', previousPosition);\n        }\n\n        // Save previous position as early as possible to prevent cycles\n        this._previousPosition = currentPosition;\n\n        if (previousPosition === currentPosition) {\n          // No change since last trigger\n          return;\n        }\n\n        var callbackArg = {\n          currentPosition: currentPosition,\n          previousPosition: previousPosition,\n          event: event,\n          waypointTop: bounds.waypointTop,\n          waypointBottom: bounds.waypointBottom,\n          viewportTop: bounds.viewportTop,\n          viewportBottom: bounds.viewportBottom\n        };\n        this.props.onPositionChange.call(this, callbackArg);\n\n        if (currentPosition === constants.inside) {\n          this.props.onEnter.call(this, callbackArg);\n        } else if (previousPosition === constants.inside) {\n          this.props.onLeave.call(this, callbackArg);\n        }\n\n        var isRapidScrollDown = previousPosition === constants.below && currentPosition === constants.above;\n        var isRapidScrollUp = previousPosition === constants.above && currentPosition === constants.below;\n\n        if (this.props.fireOnRapidScroll && (isRapidScrollDown || isRapidScrollUp)) {\n          // If the scroll event isn't fired often enough to occur while the\n          // waypoint was visible, we trigger both callbacks anyway.\n          this.props.onEnter.call(this, {\n            currentPosition: constants.inside,\n            previousPosition: previousPosition,\n            event: event,\n            waypointTop: bounds.waypointTop,\n            waypointBottom: bounds.waypointBottom,\n            viewportTop: bounds.viewportTop,\n            viewportBottom: bounds.viewportBottom\n          });\n          this.props.onLeave.call(this, {\n            currentPosition: currentPosition,\n            previousPosition: constants.inside,\n            event: event,\n            waypointTop: bounds.waypointTop,\n            waypointBottom: bounds.waypointBottom,\n            viewportTop: bounds.viewportTop,\n            viewportBottom: bounds.viewportBottom\n          });\n        }\n      }\n\n      return _handleScroll;\n    }()\n  }, {\n    key: '_getBounds',\n    value: function () {\n      function _getBounds() {\n        var horizontal = this.props.horizontal;\n\n        var _ref$getBoundingClien = this._ref.getBoundingClientRect(),\n            left = _ref$getBoundingClien.left,\n            top = _ref$getBoundingClien.top,\n            right = _ref$getBoundingClien.right,\n            bottom = _ref$getBoundingClien.bottom;\n\n        var waypointTop = horizontal ? left : top;\n        var waypointBottom = horizontal ? right : bottom;\n\n        var contextHeight = void 0;\n        var contextScrollTop = void 0;\n        if (this.scrollableAncestor === window) {\n          contextHeight = horizontal ? window.innerWidth : window.innerHeight;\n          contextScrollTop = 0;\n        } else {\n          contextHeight = horizontal ? this.scrollableAncestor.offsetWidth : this.scrollableAncestor.offsetHeight;\n          contextScrollTop = horizontal ? this.scrollableAncestor.getBoundingClientRect().left : this.scrollableAncestor.getBoundingClientRect().top;\n        }\n\n        if (process.env.NODE_ENV !== 'production' && this.props.debug) {\n          debugLog('waypoint top', waypointTop);\n          debugLog('waypoint bottom', waypointBottom);\n          debugLog('scrollableAncestor height', contextHeight);\n          debugLog('scrollableAncestor scrollTop', contextScrollTop);\n        }\n\n        var _props2 = this.props,\n            bottomOffset = _props2.bottomOffset,\n            topOffset = _props2.topOffset;\n\n        var topOffsetPx = computeOffsetPixels(topOffset, contextHeight);\n        var bottomOffsetPx = computeOffsetPixels(bottomOffset, contextHeight);\n        var contextBottom = contextScrollTop + contextHeight;\n\n        return {\n          waypointTop: waypointTop,\n          waypointBottom: waypointBottom,\n          viewportTop: contextScrollTop + topOffsetPx,\n          viewportBottom: contextBottom - bottomOffsetPx\n        };\n      }\n\n      return _getBounds;\n    }()\n\n    /**\n     * @return {Object}\n     */\n\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _this4 = this;\n\n        var children = this.props.children;\n\n\n        if (!children) {\n          // We need an element that we can locate in the DOM to determine where it is\n          // rendered relative to the top of its context.\n          return React.createElement('span', { ref: this.refElement, style: { fontSize: 0 } });\n        }\n\n        if (isDOMElement(children) || isForwardRef(children.type)) {\n          var ref = function () {\n            function ref(node) {\n              _this4.refElement(node);\n              if (children.ref) {\n                if (typeof children.ref === 'function') {\n                  children.ref(node);\n                } else {\n                  children.ref.current = node;\n                }\n              }\n            }\n\n            return ref;\n          }();\n\n          return React.cloneElement(children, { ref: ref });\n        }\n\n        return React.cloneElement(children, { innerRef: this.refElement });\n      }\n\n      return render;\n    }()\n  }]);\n\n  return Waypoint;\n}(BaseClass);\n\n\nWaypoint.propTypes = {\n  children: PropTypes.node,\n  debug: PropTypes.bool,\n  onEnter: PropTypes.func,\n  onLeave: PropTypes.func,\n  onPositionChange: PropTypes.func,\n  fireOnRapidScroll: PropTypes.bool,\n  scrollableAncestor: PropTypes.any,\n  horizontal: PropTypes.bool,\n\n  // `topOffset` can either be a number, in which case its a distance from the\n  // top of the container in pixels, or a string value. Valid string values are\n  // of the form \"20px\", which is parsed as pixels, or \"20%\", which is parsed\n  // as a percentage of the height of the containing element.\n  // For instance, if you pass \"-20%\", and the containing element is 100px tall,\n  // then the waypoint will be triggered when it has been scrolled 20px beyond\n  // the top of the containing element.\n  topOffset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  // `bottomOffset` is like `topOffset`, but for the bottom of the container.\n  bottomOffset: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nWaypoint.above = constants.above;\nWaypoint.below = constants.below;\nWaypoint.inside = constants.inside;\nWaypoint.invisible = constants.invisible;\nWaypoint.getWindow = function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n};\nWaypoint.defaultProps = defaultProps;\nWaypoint.displayName = 'Waypoint';\n\nexport default Waypoint;\n","var CAN_USE_DOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n// Adapted from Modernizr\n// https://github.com/Modernizr/Modernizr/blob/acb3f0d9/feature-detects/dom/passiveeventlisteners.js#L26-L37\nfunction testPassiveEventListeners() {\n  if (!CAN_USE_DOM) {\n    return false;\n  }\n\n  if (!window.addEventListener || !window.removeEventListener || !Object.defineProperty) {\n    return false;\n  }\n\n  var supportsPassiveOption = false;\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      // eslint-disable-next-line getter-return\n      get: function () {\n        function get() {\n          supportsPassiveOption = true;\n        }\n\n        return get;\n      }()\n    });\n    var noop = function noop() {};\n    window.addEventListener('testPassiveEventSupport', noop, opts);\n    window.removeEventListener('testPassiveEventSupport', noop, opts);\n  } catch (e) {\n    // do nothing\n  }\n\n  return supportsPassiveOption;\n}\n\nvar memoized = void 0;\n\nfunction canUsePassiveEventListeners() {\n  if (memoized === undefined) {\n    memoized = testPassiveEventListeners();\n  }\n  return memoized;\n}\n\nfunction normalizeEventOptions(eventOptions) {\n  if (!eventOptions) {\n    return undefined;\n  }\n\n  if (!canUsePassiveEventListeners()) {\n    // If the browser does not support the passive option, then it is expecting\n    // a boolean for the options argument to specify whether it should use\n    // capture or not. In more modern browsers, this is passed via the `capture`\n    // option, so let's just hoist that value up.\n    return !!eventOptions.capture;\n  }\n\n  return eventOptions;\n}\n\n/* eslint-disable no-bitwise */\n\n/**\n * Generate a unique key for any set of event options\n */\nfunction eventOptionsKey(normalizedEventOptions) {\n  if (!normalizedEventOptions) {\n    return 0;\n  }\n\n  // If the browser does not support passive event listeners, the normalized\n  // event options will be a boolean.\n  if (normalizedEventOptions === true) {\n    return 100;\n  }\n\n  // At this point, the browser supports passive event listeners, so we expect\n  // the event options to be an object with possible properties of capture,\n  // passive, and once.\n  //\n  // We want to consistently return the same value, regardless of the order of\n  // these properties, so let's use binary maths to assign each property to a\n  // bit, and then add those together (with an offset to account for the\n  // booleans at the beginning of this function).\n  var capture = normalizedEventOptions.capture << 0;\n  var passive = normalizedEventOptions.passive << 1;\n  var once = normalizedEventOptions.once << 2;\n  return capture + passive + once;\n}\n\nfunction ensureCanMutateNextEventHandlers(eventHandlers) {\n  if (eventHandlers.handlers === eventHandlers.nextHandlers) {\n    // eslint-disable-next-line no-param-reassign\n    eventHandlers.nextHandlers = eventHandlers.handlers.slice();\n  }\n}\n\nfunction TargetEventHandlers(target) {\n  this.target = target;\n  this.events = {};\n}\n\nTargetEventHandlers.prototype.getEventHandlers = function () {\n  function getEventHandlers(eventName, options) {\n    var key = String(eventName) + ' ' + String(eventOptionsKey(options));\n\n    if (!this.events[key]) {\n      this.events[key] = {\n        handlers: [],\n        handleEvent: undefined\n      };\n      this.events[key].nextHandlers = this.events[key].handlers;\n    }\n\n    return this.events[key];\n  }\n\n  return getEventHandlers;\n}();\n\nTargetEventHandlers.prototype.handleEvent = function () {\n  function handleEvent(eventName, options, event) {\n    var eventHandlers = this.getEventHandlers(eventName, options);\n    eventHandlers.handlers = eventHandlers.nextHandlers;\n    eventHandlers.handlers.forEach(function (handler) {\n      if (handler) {\n        // We need to check for presence here because a handler function may\n        // cause later handlers to get removed. This can happen if you for\n        // instance have a waypoint that unmounts another waypoint as part of an\n        // onEnter/onLeave handler.\n        handler(event);\n      }\n    });\n  }\n\n  return handleEvent;\n}();\n\nTargetEventHandlers.prototype.add = function () {\n  function add(eventName, listener, options) {\n    var _this = this;\n\n    // options has already been normalized at this point.\n    var eventHandlers = this.getEventHandlers(eventName, options);\n\n    ensureCanMutateNextEventHandlers(eventHandlers);\n\n    if (eventHandlers.nextHandlers.length === 0) {\n      eventHandlers.handleEvent = this.handleEvent.bind(this, eventName, options);\n\n      this.target.addEventListener(eventName, eventHandlers.handleEvent, options);\n    }\n\n    eventHandlers.nextHandlers.push(listener);\n\n    var isSubscribed = true;\n    var unsubscribe = function () {\n      function unsubscribe() {\n        if (!isSubscribed) {\n          return;\n        }\n\n        isSubscribed = false;\n\n        ensureCanMutateNextEventHandlers(eventHandlers);\n        var index = eventHandlers.nextHandlers.indexOf(listener);\n        eventHandlers.nextHandlers.splice(index, 1);\n\n        if (eventHandlers.nextHandlers.length === 0) {\n          // All event handlers have been removed, so we want to remove the event\n          // listener from the target node.\n\n          if (_this.target) {\n            // There can be a race condition where the target may no longer exist\n            // when this function is called, e.g. when a React component is\n            // unmounting. Guarding against this prevents the following error:\n            //\n            //   Cannot read property 'removeEventListener' of undefined\n            _this.target.removeEventListener(eventName, eventHandlers.handleEvent, options);\n          }\n\n          eventHandlers.handleEvent = undefined;\n        }\n      }\n\n      return unsubscribe;\n    }();\n    return unsubscribe;\n  }\n\n  return add;\n}();\n\nvar EVENT_HANDLERS_KEY = '__consolidated_events_handlers__';\n\n// eslint-disable-next-line import/prefer-default-export\nfunction addEventListener(target, eventName, listener, options) {\n  if (!target[EVENT_HANDLERS_KEY]) {\n    // eslint-disable-next-line no-param-reassign\n    target[EVENT_HANDLERS_KEY] = new TargetEventHandlers(target);\n  }\n  var normalizedEventOptions = normalizeEventOptions(options);\n  return target[EVENT_HANDLERS_KEY].add(eventName, listener, normalizedEventOptions);\n}\n\nexport { addEventListener };\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.6.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,r=b?Symbol.for(\"react.memo\"):\n60115,t=b?Symbol.for(\"react.lazy\"):60116;function u(a){if(\"object\"===typeof a&&null!==a){var q=a.$$typeof;switch(q){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return q}}case d:return q}}}function v(a){return u(a)===m}exports.typeOf=u;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;\nexports.Profiler=g;exports.Portal=d;exports.StrictMode=f;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||u(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return u(a)===k};exports.isContextProvider=function(a){return u(a)===h};\nexports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return u(a)===n};exports.isFragment=function(a){return u(a)===e};exports.isProfiler=function(a){return u(a)===g};exports.isPortal=function(a){return u(a)===d};exports.isStrictMode=function(a){return u(a)===f};\n","var emoji = require('emoji-regex')\n\nmodule.exports = BananaSlug\n\nfunction BananaSlug () {\n  var self = this\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  maintainCase = maintainCase === true\n  var self = this\n  var slug = slugger(value, maintainCase)\n  var occurrences = self.occurrences[slug]\n\n  if (self.occurrences.hasOwnProperty(slug)) {\n    occurrences++\n  } else {\n    occurrences = 0\n  }\n\n  self.occurrences[slug] = occurrences\n\n  if (occurrences) {\n    slug = slug + '-' + occurrences\n  }\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = {}\n}\n\nvar whitespace = /\\s/g\n\nfunction lower (string) {\n  return string.toLowerCase()\n}\n\nfunction slugger (string, maintainCase) {\n  var re = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g\n  var replacement = '-'\n\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.replace(/[A-Z]+/g, lower)\n  return string.trim()\n    .replace(re, '')\n    .replace(emoji(), '')\n    .replace(whitespace, replacement)\n}\n","module.exports = function() {\n\treturn /[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uD83C\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uD83C\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uD83C\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF8\\uDDFE\\uDDFF]|\\uD83C\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uD83C\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uD83C\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uD83C\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uD83C\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uD83C\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uD83C\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uD83C\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uD83C\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uD83C\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uD83C\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uD83C\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uD83C\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uD83C\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|[#\\*0-9]\\u20E3/g;\n};\n","'use strict'\n\nvar html = require('property-information/html')\nvar svg = require('property-information/svg')\nvar find = require('property-information/find')\nvar spaces = require('space-separated-tokens')\nvar commas = require('comma-separated-tokens')\nvar style = require('style-to-object')\nvar ns = require('web-namespaces')\nvar is = require('unist-util-is')\n\nvar dashes = /-([a-z])/g\n\nmodule.exports = wrapper\n\nfunction wrapper(h, node, options) {\n  var settings = options || {}\n  var prefix\n  var r\n  var v\n\n  if (typeof h !== 'function') {\n    throw new Error('h is not a function')\n  }\n\n  if (typeof settings === 'string' || typeof settings === 'boolean') {\n    prefix = settings\n    settings = {}\n  } else {\n    prefix = settings.prefix\n  }\n\n  r = react(h)\n  v = vdom(h)\n\n  if (prefix === null || prefix === undefined) {\n    prefix = r === true || v === true ? 'h-' : false\n  }\n\n  if (is('root', node)) {\n    if (node.children.length === 1 && is('element', node.children[0])) {\n      node = node.children[0]\n    } else {\n      node = {\n        type: 'element',\n        tagName: 'div',\n        properties: {},\n        children: node.children\n      }\n    }\n  } else if (!is('element', node)) {\n    throw new Error(\n      'Expected root or element, not `' + ((node && node.type) || node) + '`'\n    )\n  }\n\n  return toH(h, node, {\n    schema: settings.space === 'svg' ? svg : html,\n    prefix: prefix,\n    key: 0,\n    react: r,\n    vdom: v,\n    hyperscript: hyperscript(h)\n  })\n}\n\n// Transform a HAST node through a hyperscript interface\n// to *anything*!\nfunction toH(h, node, ctx) {\n  var parentSchema = ctx.schema\n  var schema = parentSchema\n  var name = node.tagName\n  var properties\n  var attributes\n  var children\n  var property\n  var elements\n  var length\n  var index\n  var value\n  var result\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    ctx.schema = schema\n  }\n\n  if (ctx.vdom === true && schema.space === 'html') {\n    name = name.toUpperCase()\n  }\n\n  properties = node.properties\n  attributes = {}\n\n  for (property in properties) {\n    addAttribute(attributes, property, properties[property], ctx)\n  }\n\n  if (\n    typeof attributes.style === 'string' &&\n    (ctx.vdom === true || ctx.react === true)\n  ) {\n    // VDOM and React accept `style` as object.\n    attributes.style = parseStyle(attributes.style, name)\n  }\n\n  if (ctx.prefix) {\n    ctx.key++\n    attributes.key = ctx.prefix + ctx.key\n  }\n\n  if (ctx.vdom && schema.space !== 'html') {\n    attributes.namespace = ns[schema.space]\n  }\n\n  elements = []\n  children = node.children\n  length = children ? children.length : 0\n  index = -1\n\n  while (++index < length) {\n    value = children[index]\n\n    if (is('element', value)) {\n      elements.push(toH(h, value, ctx))\n    } else if (is('text', value)) {\n      elements.push(value.value)\n    }\n  }\n\n  // Ensure no React warnings are triggered for\n  // void elements having children passed in.\n  result =\n    elements.length === 0 ? h(name, attributes) : h(name, attributes, elements)\n\n  // Restore parent schema.\n  ctx.schema = parentSchema\n\n  return result\n}\n\nfunction addAttribute(props, prop, value, ctx) {\n  var schema = ctx.schema\n  var info = find(schema, prop)\n  var subprop\n\n  // Ignore nully, `false`, `NaN`, and falsey known booleans.\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    value !== value ||\n    (info.boolean && !value)\n  ) {\n    return\n  }\n\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    // Accept `array`.  Most props are space-separater.\n    value = (info.commaSeparated ? commas : spaces).stringify(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && ctx.hyperscript === true) {\n    value = ''\n  }\n\n  if (!info.mustUseProperty) {\n    if (ctx.vdom === true) {\n      subprop = 'attributes'\n    } else if (ctx.hyperscript === true) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    if (props[subprop] === undefined) {\n      props[subprop] = {}\n    }\n\n    props[subprop][info.attribute] = value\n  } else {\n    props[ctx.react && info.space ? info.property : info.attribute] = value\n  }\n}\n\n// Check if `h` is `react.createElement`.\nfunction react(h) {\n  var node = h && h('div')\n  return Boolean(\n    node && ('_owner' in node || '_store' in node) && node.key === null\n  )\n}\n\n// Check if `h` is `hyperscript`.\nfunction hyperscript(h) {\n  return Boolean(h && h.context && h.cleanup)\n}\n\n// Check if `h` is `virtual-dom/h`.\nfunction vdom(h) {\n  return h && h('div').type === 'VirtualNode'\n}\n\nfunction parseStyle(value, tagName) {\n  var result = {}\n\n  try {\n    style(value, iterator)\n  } catch (error) {\n    error.message =\n      tagName + '[style]' + error.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n\n  function iterator(name, value) {\n    result[styleCase(name)] = value\n  }\n}\n\nfunction styleCase(val) {\n  if (val.slice(0, 4) === '-ms-') {\n    val = 'ms-' + val.slice(4)\n  }\n\n  return val.replace(dashes, styleReplacer)\n}\n\nfunction styleReplacer($0, $1) {\n  return $1.toUpperCase()\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nvar boolean = types.boolean\nvar overloadedBoolean = types.overloadedBoolean\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\n\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: spaceSeparated,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar svg = require('./lib/svg')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, svg])\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseSensitiveTransform = require('./util/case-sensitive-transform')\n\nvar boolean = types.boolean\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\nvar commaOrSpaceSeparated = types.commaOrSpaceSeparated\n\nmodule.exports = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","var parse = require('css/lib/parse');\n\n/**\n * Parses inline style.\n *\n * Example: 'color:red' => { color: 'red' }\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nmodule.exports = function parseInlineStyle(style, iterator) {\n  if (!style || typeof style !== 'string') return null;\n\n  // make sure to wrap declarations in placeholder\n  var declarations = parse('p{' + style + '}').stylesheet.rules[0].declarations;\n  var declaration, property, value;\n\n  var output = null;\n  var hasIterator = typeof iterator === 'function';\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   */\n\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node){\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node\n   */\n\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string\n   */\n\n  Position.prototype.content = css;\n\n  /**\n   * Error `msg`.\n   */\n\n  var errorsList = [];\n\n  function error(msg) {\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    var rulesList = rules();\n\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        source: options.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) != '}' && (node = atrule() || rule())) {\n      if (node !== false) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css.charAt(0) || '*' != css.charAt(1)) return;\n\n    var i = 2;\n    while (\"\" != css.charAt(i) && ('*' != css.charAt(i) || '/' != css.charAt(i + 1))) ++i;\n    i += 2;\n\n    if (\"\" === css.charAt(i-1)) {\n      return error('End of comment missing');\n    }\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    /* @fix Remove all comments from selectors\n     * http://ostermiller.org/findcomment.html */\n    return trim(m[0])\n      .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n      .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n        return m.replace(/,/g, '\\u200C');\n      })\n      .split(/\\s*(?![^(]*\\)),\\s*/)\n      .map(function(s) {\n        return s.replace(/\\u200C/g, ',');\n      });\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!prop) return;\n    prop = trim(prop[0]);\n\n    // :\n    if (!match(/^:\\s*/)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop.replace(commentre, ''),\n      value: val ? trim(val[0]).replace(commentre, '') : ''\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return error(\"missing '{'\");\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    if (!close()) return error(\"missing '}'\");\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return error(\"@keyframes missing name\");\n    var name = m[1];\n\n    if (!open()) return error(\"@keyframes missing '{'\");\n\n    var frame;\n    var frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) return error(\"@keyframes missing '}'\");\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = trim(m[1]);\n\n    if (!open()) return error(\"@supports missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@supports missing '}'\");\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse host.\n   */\n\n  function athost() {\n    var pos = position();\n    var m = match(/^@host\\s*/);\n\n    if (!m) return;\n\n    if (!open()) return error(\"@host missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@host missing '}'\");\n\n    return pos({\n      type: 'host',\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = trim(m[1]);\n\n    if (!open()) return error(\"@media missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@media missing '}'\");\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n\n  /**\n   * Parse custom-media.\n   */\n\n  function atcustommedia() {\n    var pos = position();\n    var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) return;\n\n    return pos({\n      type: 'custom-media',\n      name: trim(m[1]),\n      media: trim(m[2])\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n\n    if (!open()) return error(\"@page missing '{'\");\n    var decls = comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@page missing '}'\");\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = trim(m[1]);\n    var doc = trim(m[2]);\n\n    if (!open()) return error(\"@document missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@document missing '}'\");\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse font-face.\n   */\n\n  function atfontface() {\n    var pos = position();\n    var m = match(/^@font-face\\s*/);\n    if (!m) return;\n\n    if (!open()) return error(\"@font-face missing '{'\");\n    var decls = comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@font-face missing '}'\");\n\n    return pos({\n      type: 'font-face',\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  var atimport = _compileAtrule('import');\n\n  /**\n   * Parse charset\n   */\n\n  var atcharset = _compileAtrule('charset');\n\n  /**\n   * Parse namespace\n   */\n\n  var atnamespace = _compileAtrule('namespace');\n\n  /**\n   * Parse non-block at-rules\n   */\n\n\n  function _compileAtrule(name) {\n    var re = new RegExp('^@' + name + '\\\\s*([^;]+);');\n    return function() {\n      var pos = position();\n      var m = match(re);\n      if (!m) return;\n      var ret = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    }\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    if (css[0] != '@') return;\n\n    return atkeyframes()\n      || atmedia()\n      || atcustommedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage()\n      || athost()\n      || atfontface();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return error('selector missing');\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return addParent(stylesheet());\n};\n\n/**\n * Trim `str`.\n */\n\nfunction trim(str) {\n  return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\n}\n\n/**\n * Adds non-enumerable parent node reference to each node.\n */\n\nfunction addParent(obj, parent) {\n  var isNode = obj && typeof obj.type === 'string';\n  var childParent = isNode ? obj : parent;\n\n  for (var k in obj) {\n    var value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach(function(v) { addParent(v, childParent); });\n    } else if (value && typeof value === 'object') {\n      addParent(value, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, 'parent', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n\n  return obj;\n}\n","'use strict'\n\n/* eslint-disable max-params */\n\n/* Expose. */\nmodule.exports = is\n\n/* Assert if `test` passes for `node`.\n * When a `parent` node is known the `index` of node */\nfunction is(test, node, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index or child node')\n  }\n\n  if (hasParent && (!is(null, parent) || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return Boolean(check.call(context, node, index, parent))\n}\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n/* Utility assert each property in `test` is represented\n * in `node`, and each values are strictly equal. */\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/* Utility to convert a string into a function which checks\n * a given node’s type for said string. */\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n/* Utility to return true. */\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar refractor = require('./core.js')\n\nmodule.exports = refractor\n\nrefractor.register(require('./lang/abap.js'))\nrefractor.register(require('./lang/actionscript.js'))\nrefractor.register(require('./lang/ada.js'))\nrefractor.register(require('./lang/apacheconf.js'))\nrefractor.register(require('./lang/apl.js'))\nrefractor.register(require('./lang/applescript.js'))\nrefractor.register(require('./lang/arduino.js'))\nrefractor.register(require('./lang/arff.js'))\nrefractor.register(require('./lang/asciidoc.js'))\nrefractor.register(require('./lang/asm6502.js'))\nrefractor.register(require('./lang/aspnet.js'))\nrefractor.register(require('./lang/autohotkey.js'))\nrefractor.register(require('./lang/autoit.js'))\nrefractor.register(require('./lang/bash.js'))\nrefractor.register(require('./lang/basic.js'))\nrefractor.register(require('./lang/batch.js'))\nrefractor.register(require('./lang/bison.js'))\nrefractor.register(require('./lang/brainfuck.js'))\nrefractor.register(require('./lang/bro.js'))\nrefractor.register(require('./lang/c.js'))\nrefractor.register(require('./lang/clojure.js'))\nrefractor.register(require('./lang/coffeescript.js'))\nrefractor.register(require('./lang/cpp.js'))\nrefractor.register(require('./lang/crystal.js'))\nrefractor.register(require('./lang/csharp.js'))\nrefractor.register(require('./lang/csp.js'))\nrefractor.register(require('./lang/css-extras.js'))\nrefractor.register(require('./lang/d.js'))\nrefractor.register(require('./lang/dart.js'))\nrefractor.register(require('./lang/diff.js'))\nrefractor.register(require('./lang/django.js'))\nrefractor.register(require('./lang/docker.js'))\nrefractor.register(require('./lang/eiffel.js'))\nrefractor.register(require('./lang/elixir.js'))\nrefractor.register(require('./lang/elm.js'))\nrefractor.register(require('./lang/erb.js'))\nrefractor.register(require('./lang/erlang.js'))\nrefractor.register(require('./lang/flow.js'))\nrefractor.register(require('./lang/fortran.js'))\nrefractor.register(require('./lang/fsharp.js'))\nrefractor.register(require('./lang/gedcom.js'))\nrefractor.register(require('./lang/gherkin.js'))\nrefractor.register(require('./lang/git.js'))\nrefractor.register(require('./lang/glsl.js'))\nrefractor.register(require('./lang/go.js'))\nrefractor.register(require('./lang/graphql.js'))\nrefractor.register(require('./lang/groovy.js'))\nrefractor.register(require('./lang/haml.js'))\nrefractor.register(require('./lang/handlebars.js'))\nrefractor.register(require('./lang/haskell.js'))\nrefractor.register(require('./lang/haxe.js'))\nrefractor.register(require('./lang/hpkp.js'))\nrefractor.register(require('./lang/hsts.js'))\nrefractor.register(require('./lang/http.js'))\nrefractor.register(require('./lang/ichigojam.js'))\nrefractor.register(require('./lang/icon.js'))\nrefractor.register(require('./lang/inform7.js'))\nrefractor.register(require('./lang/ini.js'))\nrefractor.register(require('./lang/io.js'))\nrefractor.register(require('./lang/j.js'))\nrefractor.register(require('./lang/java.js'))\nrefractor.register(require('./lang/jolie.js'))\nrefractor.register(require('./lang/json.js'))\nrefractor.register(require('./lang/jsx.js'))\nrefractor.register(require('./lang/julia.js'))\nrefractor.register(require('./lang/keyman.js'))\nrefractor.register(require('./lang/kotlin.js'))\nrefractor.register(require('./lang/latex.js'))\nrefractor.register(require('./lang/less.js'))\nrefractor.register(require('./lang/liquid.js'))\nrefractor.register(require('./lang/lisp.js'))\nrefractor.register(require('./lang/livescript.js'))\nrefractor.register(require('./lang/lolcode.js'))\nrefractor.register(require('./lang/lua.js'))\nrefractor.register(require('./lang/makefile.js'))\nrefractor.register(require('./lang/markdown.js'))\nrefractor.register(require('./lang/markup-templating.js'))\nrefractor.register(require('./lang/matlab.js'))\nrefractor.register(require('./lang/mel.js'))\nrefractor.register(require('./lang/mizar.js'))\nrefractor.register(require('./lang/monkey.js'))\nrefractor.register(require('./lang/n4js.js'))\nrefractor.register(require('./lang/nasm.js'))\nrefractor.register(require('./lang/nginx.js'))\nrefractor.register(require('./lang/nim.js'))\nrefractor.register(require('./lang/nix.js'))\nrefractor.register(require('./lang/nsis.js'))\nrefractor.register(require('./lang/objectivec.js'))\nrefractor.register(require('./lang/ocaml.js'))\nrefractor.register(require('./lang/opencl.js'))\nrefractor.register(require('./lang/oz.js'))\nrefractor.register(require('./lang/parigp.js'))\nrefractor.register(require('./lang/parser.js'))\nrefractor.register(require('./lang/pascal.js'))\nrefractor.register(require('./lang/perl.js'))\nrefractor.register(require('./lang/php-extras.js'))\nrefractor.register(require('./lang/php.js'))\nrefractor.register(require('./lang/plsql.js'))\nrefractor.register(require('./lang/powershell.js'))\nrefractor.register(require('./lang/processing.js'))\nrefractor.register(require('./lang/prolog.js'))\nrefractor.register(require('./lang/properties.js'))\nrefractor.register(require('./lang/protobuf.js'))\nrefractor.register(require('./lang/pug.js'))\nrefractor.register(require('./lang/puppet.js'))\nrefractor.register(require('./lang/pure.js'))\nrefractor.register(require('./lang/python.js'))\nrefractor.register(require('./lang/q.js'))\nrefractor.register(require('./lang/qore.js'))\nrefractor.register(require('./lang/r.js'))\nrefractor.register(require('./lang/reason.js'))\nrefractor.register(require('./lang/renpy.js'))\nrefractor.register(require('./lang/rest.js'))\nrefractor.register(require('./lang/rip.js'))\nrefractor.register(require('./lang/roboconf.js'))\nrefractor.register(require('./lang/ruby.js'))\nrefractor.register(require('./lang/rust.js'))\nrefractor.register(require('./lang/sas.js'))\nrefractor.register(require('./lang/sass.js'))\nrefractor.register(require('./lang/scala.js'))\nrefractor.register(require('./lang/scheme.js'))\nrefractor.register(require('./lang/scss.js'))\nrefractor.register(require('./lang/smalltalk.js'))\nrefractor.register(require('./lang/smarty.js'))\nrefractor.register(require('./lang/soy.js'))\nrefractor.register(require('./lang/sql.js'))\nrefractor.register(require('./lang/stylus.js'))\nrefractor.register(require('./lang/swift.js'))\nrefractor.register(require('./lang/tap.js'))\nrefractor.register(require('./lang/tcl.js'))\nrefractor.register(require('./lang/textile.js'))\nrefractor.register(require('./lang/tsx.js'))\nrefractor.register(require('./lang/tt2.js'))\nrefractor.register(require('./lang/twig.js'))\nrefractor.register(require('./lang/typescript.js'))\nrefractor.register(require('./lang/vbnet.js'))\nrefractor.register(require('./lang/velocity.js'))\nrefractor.register(require('./lang/verilog.js'))\nrefractor.register(require('./lang/vhdl.js'))\nrefractor.register(require('./lang/vim.js'))\nrefractor.register(require('./lang/visual-basic.js'))\nrefractor.register(require('./lang/wasm.js'))\nrefractor.register(require('./lang/wiki.js'))\nrefractor.register(require('./lang/xeora.js'))\nrefractor.register(require('./lang/xojo.js'))\nrefractor.register(require('./lang/xquery.js'))\nrefractor.register(require('./lang/yaml.js'))\n","'use strict'\n\n/* global window, self */\n\nvar restore = capture()\n\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx =\n  typeof window === 'undefined'\n    ? typeof self === 'undefined'\n      ? {}\n      : self\n    : window\n\nctx.Prism = {manual: true, disableWorkerMessageHandler: true}\n\n/* Load all stuff in `prism.js` itself, except for\n * `prism-file-highlight.js`.\n * The wrapped non-leaky grammars are loaded instead of\n * Prism’s originals. */\nvar h = require('hastscript')\nvar decode = require('parse-entities')\nvar Prism = require('prismjs/components/prism-core')\nvar markup = require('./lang/markup')\nvar css = require('./lang/css')\nvar clike = require('./lang/clike')\nvar js = require('./lang/javascript')\n\nrestore()\n\nvar own = {}.hasOwnProperty\n\n/* Inherit. */\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n/* Construct. */\nvar refract = new Refractor()\n\n/* Expose. */\nmodule.exports = refract\n\n/* Create. */\nrefract.highlight = highlight\nrefract.register = register\nrefract.registered = registered\n\n/* Register bundled grammars. */\nregister(markup)\nregister(css)\nregister(clike)\nregister(js)\n\nrefract.util.encode = encode\nrefract.Token.stringify = stringify\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`')\n  }\n\n  /* Do not duplicate registrations. */\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract)\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight\n  var grammar\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  /* `name` is a grammar object */\n  if (refract.util.type(name) === 'Object') {\n    grammar = name\n    name = null\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return sup.call(this, value, grammar, name)\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`')\n  }\n\n  return own.call(refract.languages, language)\n}\n\nfunction stringify(value, language, parent) {\n  var env\n\n  if (typeof value === 'string') {\n    return {type: 'text', value: value}\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language)\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  }\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias)\n  }\n\n  refract.hooks.run('wrap', env)\n\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\nfunction stringifyAll(values, language) {\n  var result = []\n  var length = values.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = values[index]\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value)\n    }\n  }\n\n  index = -1\n  length = result.length\n\n  while (++index < length) {\n    value = result[index]\n    result[index] = refract.Token.stringify(value, language, result)\n  }\n\n  return result\n}\n\nfunction encode(tokens) {\n  return tokens\n}\n\nfunction attributes(attrs) {\n  var key\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key])\n  }\n\n  return attrs\n}\n\nfunction capture() {\n  var defined = 'Prism' in global\n  /* istanbul ignore next */\n  var current = defined ? global.Prism : undefined\n\n  return restore\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      global.Prism = current\n    } else {\n      delete global.Prism\n    }\n\n    defined = undefined\n    current = undefined\n  }\n}\n","'use strict'\n\nmodule.exports = require('./html')\n","'use strict'\n\nvar schema = require('property-information/html')\nvar factory = require('./factory')\n\nvar html = factory(schema, 'div')\nhtml.displayName = 'html'\n\nmodule.exports = html\n","'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nfunction factory(schema, defaultTagName) {\n  return h\n\n  /* Hyperscript compatible DSL for creating virtual HAST trees. */\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var property\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    /* Ignore nully and NaN values. */\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    /* Handle list values. */\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    /* Accept `object` on style. */\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    /* Class-names (which can be added both on the `selector` and here). */\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n/* Parse a (list of) primitives. */\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n/* Parse a single primitives. */\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    /* Accept `boolean` and `string`. */\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar dot = '.'.charCodeAt(0)\nvar hash = '#'.charCodeAt(0)\n\n/* Parse a simple CSS selector into a HAST node. */\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var index = -1\n  var length = value.length\n  var className\n  var type\n  var code\n  var subvalue\n  var lastIndex\n\n  while (++index <= length) {\n    code = value.charCodeAt(index)\n\n    if (!code || code === dot || code === hash) {\n      subvalue = value.slice(lastIndex, index)\n\n      if (subvalue) {\n        if (type === dot) {\n          if (className) {\n            className.push(subvalue)\n          } else {\n            className = [subvalue]\n            props.className = className\n          }\n        } else if (type === hash) {\n          props.id = subvalue\n        } else {\n          name = subvalue\n        }\n      }\n\n      lastIndex = index + 1\n      type = code\n    }\n  }\n\n  return {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: []\n  }\n}\n","'use strict'\n\nvar legacy = require('character-entities-legacy')\nvar invalid = require('character-reference-invalid')\nvar decimal = require('is-decimal')\nvar hexadecimal = require('is-hexadecimal')\nvar alphanumerical = require('is-alphanumerical')\nvar decodeEntity = require('./decode-entity')\n\nmodule.exports = parseEntities\n\nvar own = {}.hasOwnProperty\nvar fromCharCode = String.fromCharCode\nvar noop = Function.prototype\n\n/* Default settings. */\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}\n\n/* Reference types. */\nvar NAMED = 'named'\nvar HEXADECIMAL = 'hexadecimal'\nvar DECIMAL = 'decimal'\n\n/* Map of bases. */\nvar BASE = {}\n\nBASE[HEXADECIMAL] = 16\nBASE[DECIMAL] = 10\n\n/* Map of types to tests. Each type of character reference\n * accepts different characters. This test is used to\n * detect whether a reference has ended (as the semicolon\n * is not strictly needed). */\nvar TESTS = {}\n\nTESTS[NAMED] = alphanumerical\nTESTS[DECIMAL] = decimal\nTESTS[HEXADECIMAL] = hexadecimal\n\n/* Warning messages. */\nvar NAMED_NOT_TERMINATED = 1\nvar NUMERIC_NOT_TERMINATED = 2\nvar NAMED_EMPTY = 3\nvar NUMERIC_EMPTY = 4\nvar NAMED_UNKNOWN = 5\nvar NUMERIC_DISALLOWED = 6\nvar NUMERIC_PROHIBITED = 7\n\nvar MESSAGES = {}\n\nMESSAGES[NAMED_NOT_TERMINATED] =\n  'Named character references must be terminated by a semicolon'\nMESSAGES[NUMERIC_NOT_TERMINATED] =\n  'Numeric character references must be terminated by a semicolon'\nMESSAGES[NAMED_EMPTY] = 'Named character references cannot be empty'\nMESSAGES[NUMERIC_EMPTY] = 'Numeric character references cannot be empty'\nMESSAGES[NAMED_UNKNOWN] = 'Named character references must be known'\nMESSAGES[NUMERIC_DISALLOWED] =\n  'Numeric character references cannot be disallowed'\nMESSAGES[NUMERIC_PROHIBITED] =\n  'Numeric character references cannot be outside the permissible Unicode range'\n\n/* Wrap to ensure clean parameters are given to `parse`. */\nfunction parseEntities(value, options) {\n  var settings = {}\n  var option\n  var key\n\n  if (!options) {\n    options = {}\n  }\n\n  for (key in defaults) {\n    option = options[key]\n    settings[key] =\n      option === null || option === undefined ? defaults[key] : option\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || []\n    settings.position = settings.position.start\n  }\n\n  return parse(value, settings)\n}\n\n/* Parse entities. */\nfunction parse(value, settings) {\n  var additional = settings.additional\n  var nonTerminated = settings.nonTerminated\n  var handleText = settings.text\n  var handleReference = settings.reference\n  var handleWarning = settings.warning\n  var textContext = settings.textContext\n  var referenceContext = settings.referenceContext\n  var warningContext = settings.warningContext\n  var pos = settings.position\n  var indent = settings.indent || []\n  var length = value.length\n  var index = 0\n  var lines = -1\n  var column = pos.column || 1\n  var line = pos.line || 1\n  var queue = ''\n  var result = []\n  var entityCharacters\n  var namedEntity\n  var terminated\n  var characters\n  var character\n  var reference\n  var following\n  var warning\n  var reason\n  var output\n  var entity\n  var begin\n  var start\n  var type\n  var test\n  var prev\n  var next\n  var diff\n  var end\n\n  /* Cache the current point. */\n  prev = now()\n\n  /* Wrap `handleWarning`. */\n  warning = handleWarning ? parseError : noop\n\n  /* Ensure the algorithm walks over the first character\n   * and the end (inclusive). */\n  index--\n  length++\n\n  while (++index < length) {\n    /* If the previous character was a newline. */\n    if (character === '\\n') {\n      column = indent[lines] || 1\n    }\n\n    character = at(index)\n\n    /* Handle anything other than an ampersand,\n     * including newlines and EOF. */\n    if (character !== '&') {\n      if (character === '\\n') {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (character) {\n        queue += character\n        column++\n      } else {\n        flush()\n      }\n    } else {\n      following = at(index + 1)\n\n      /* The behaviour depends on the identity of the next\n       * character. */\n      if (\n        following === '\\t' /* Tab */ ||\n        following === '\\n' /* Newline */ ||\n        following === '\\f' /* Form feed */ ||\n        following === ' ' /* Space */ ||\n        following === '<' /* Less-than */ ||\n        following === '&' /* Ampersand */ ||\n        following === '' ||\n        (additional && following === additional)\n      ) {\n        /* Not a character reference. No characters\n         * are consumed, and nothing is returned.\n         * This is not an error, either. */\n        queue += character\n        column++\n\n        continue\n      }\n\n      start = index + 1\n      begin = start\n      end = start\n\n      /* Numerical entity. */\n      if (following !== '#') {\n        type = NAMED\n      } else {\n        end = ++begin\n\n        /* The behaviour further depends on the\n         * character after the U+0023 NUMBER SIGN. */\n        following = at(end)\n\n        if (following === 'x' || following === 'X') {\n          /* ASCII hex digits. */\n          type = HEXADECIMAL\n          end = ++begin\n        } else {\n          /* ASCII digits. */\n          type = DECIMAL\n        }\n      }\n\n      entityCharacters = ''\n      entity = ''\n      characters = ''\n      test = TESTS[type]\n      end--\n\n      while (++end < length) {\n        following = at(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += following\n\n        /* Check if we can match a legacy named\n         * reference.  If so, we cache that as the\n         * last viable named reference.  This\n         * ensures we do not need to walk backwards\n         * later. */\n        if (type === NAMED && own.call(legacy, characters)) {\n          entityCharacters = characters\n          entity = legacy[characters]\n        }\n      }\n\n      terminated = at(end) === ';'\n\n      if (terminated) {\n        end++\n\n        namedEntity = type === NAMED ? decodeEntity(characters) : false\n\n        if (namedEntity) {\n          entityCharacters = characters\n          entity = namedEntity\n        }\n      }\n\n      diff = 1 + end - start\n\n      if (!terminated && !nonTerminated) {\n        /* Empty. */\n      } else if (!characters) {\n        /* An empty (possible) entity is valid, unless\n         * its numeric (thus an ampersand followed by\n         * an octothorp). */\n        if (type !== NAMED) {\n          warning(NUMERIC_EMPTY, diff)\n        }\n      } else if (type === NAMED) {\n        /* An ampersand followed by anything\n         * unknown, and not terminated, is invalid. */\n        if (terminated && !entity) {\n          warning(NAMED_UNKNOWN, 1)\n        } else {\n          /* If theres something after an entity\n           * name which is not known, cap the\n           * reference. */\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          /* If the reference is not terminated,\n           * warn. */\n          if (!terminated) {\n            reason = entityCharacters ? NAMED_NOT_TERMINATED : NAMED_EMPTY\n\n            if (!settings.attribute) {\n              warning(reason, diff)\n            } else {\n              following = at(end)\n\n              if (following === '=') {\n                warning(reason, diff)\n                entity = null\n              } else if (alphanumerical(following)) {\n                entity = null\n              } else {\n                warning(reason, diff)\n              }\n            }\n          }\n        }\n\n        reference = entity\n      } else {\n        if (!terminated) {\n          /* All non-terminated numeric entities are\n           * not rendered, and trigger a warning. */\n          warning(NUMERIC_NOT_TERMINATED, diff)\n        }\n\n        /* When terminated and number, parse as\n         * either hexadecimal or decimal. */\n        reference = parseInt(characters, BASE[type])\n\n        /* Trigger a warning when the parsed number\n         * is prohibited, and replace with\n         * replacement character. */\n        if (prohibited(reference)) {\n          warning(NUMERIC_PROHIBITED, diff)\n          reference = '\\uFFFD'\n        } else if (reference in invalid) {\n          /* Trigger a warning when the parsed number\n           * is disallowed, and replace by an\n           * alternative. */\n          warning(NUMERIC_DISALLOWED, diff)\n          reference = invalid[reference]\n        } else {\n          /* Parse the number. */\n          output = ''\n\n          /* Trigger a warning when the parsed\n           * number should not be used. */\n          if (disallowed(reference)) {\n            warning(NUMERIC_DISALLOWED, diff)\n          }\n\n          /* Stringify the number. */\n          if (reference > 0xffff) {\n            reference -= 0x10000\n            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)\n            reference = 0xdc00 | (reference & 0x3ff)\n          }\n\n          reference = output + fromCharCode(reference)\n        }\n      }\n\n      /* If we could not find a reference, queue the\n       * checked characters (as normal characters),\n       * and move the pointer to their end. This is\n       * possible because we can be certain neither\n       * newlines nor ampersands are included. */\n      if (!reference) {\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      } else {\n        /* Found it! First eat the queued\n         * characters as normal text, then eat\n         * an entity. */\n        flush()\n\n        prev = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        next = now()\n        next.offset++\n\n        if (handleReference) {\n          handleReference.call(\n            referenceContext,\n            reference,\n            {start: prev, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        prev = next\n      }\n    }\n  }\n\n  /* Return the reduced nodes, and any possible warnings. */\n  return result.join('')\n\n  /* Get current position. */\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    }\n  }\n\n  /* “Throw” a parse-error: a warning. */\n  function parseError(code, offset) {\n    var position = now()\n\n    position.column += offset\n    position.offset += offset\n\n    handleWarning.call(warningContext, MESSAGES[code], position, code)\n  }\n\n  /* Get character at position. */\n  function at(position) {\n    return value.charAt(position)\n  }\n\n  /* Flush `queue` (normal text). Macro invoked before\n   * each entity and at the end of `value`.\n   * Does nothing when `queue` is empty. */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (handleText) {\n        handleText.call(textContext, queue, {start: prev, end: now()})\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/* Check if `character` is outside the permissible unicode range. */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/* Check if `character` is disallowed. */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","'use strict'\n\nmodule.exports = hexadecimal\n\n/* Check if the given character code, or the character\n * code at the first character, is hexadecimal. */\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n/* Check if the given character code, or the character\n * code at the first character, is alphanumerical. */\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","'use strict'\n\nmodule.exports = alphabetical\n\n/* Check if the given character code, or the character\n * code at the first character, is alphabetical. */\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (&not - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (&semi;), we can\n  // assume that the matching was incomplete\n  if (char.slice(-1) === ';' && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","var _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o, visited) {\n\t\t\tvar type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = {};\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = [];\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = _.util.clone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tvar Token = _.Token;\n\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n","'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['xml', 'html', 'mathml', 'svg']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /(^|[^\\\\])[\"']/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function(env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Prism.languages.xml = Prism.languages.markup\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n}\n","'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  Prism.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n      inside: {\n        rule: /@[\\w-]+/\n        // See rest below\n      }\n    },\n    url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n    selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n    string: {\n      pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /\\B!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:]/\n  }\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n      style: {\n        pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n        lookbehind: true,\n        inside: Prism.languages.css,\n        alias: 'language-css',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: Prism.languages.markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      },\n      Prism.languages.markup.tag\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = clike\nclike.displayName = 'clike'\nclike.aliases = []\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /[a-z0-9_]+(?=\\()/i,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n    number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n  })\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n      alias: 'function'\n    },\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\${[^}]+}/,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: null // See below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.javascript['template-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.javascript\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n      script: {\n        pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript,\n        alias: 'language-javascript',\n        greedy: true\n      }\n    })\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = abap\nabap.displayName = 'abap'\nabap.aliases = []\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function'\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.markup\n        }\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n    number: [\n      {\n        pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/i,\n    keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = apacheconf\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:\\w,?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number: /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = applescript\napplescript.displayName = 'applescript'\napplescript.aliases = []\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/\n    ],\n    keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    class: {\n      pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n      alias: 'builtin'\n    },\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = arduino\narduino.displayName = 'arduino'\narduino.aliases = []\nfunction arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n    builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n    constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = []\nfunction asciidoc(Prism) {\n  ;(function(Prism) {\n    var attributes = {\n      pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/\n            // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n            // See rest below\n          }\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/\n          // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n          // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n          // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n          // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|TM|R)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }\n    // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    attributes.inside['interpreted'].inside.rest = {\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity']\n    }\n    Prism.languages.asciidoc['passthrough-block'].inside.rest = {\n      macro: Prism.languages.asciidoc['macro']\n    }\n    Prism.languages.asciidoc['literal-block'].inside.rest = {\n      callout: Prism.languages.asciidoc['callout']\n    }\n    Prism.languages.asciidoc['table'].inside.rest = {\n      'comment-block': Prism.languages.asciidoc['comment-block'],\n      'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\n      'literal-block': Prism.languages.asciidoc['literal-block'],\n      'other-block': Prism.languages.asciidoc['other-block'],\n      'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n      'indented-block': Prism.languages.asciidoc['indented-block'],\n      comment: Prism.languages.asciidoc['comment'],\n      title: Prism.languages.asciidoc['title'],\n      'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n      attributes: Prism.languages.asciidoc['attributes'],\n      hr: Prism.languages.asciidoc['hr'],\n      'page-break': Prism.languages.asciidoc['page-break'],\n      admonition: Prism.languages.asciidoc['admonition'],\n      'list-label': Prism.languages.asciidoc['list-label'],\n      callout: Prism.languages.asciidoc['callout'],\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity'],\n      'line-continuation': Prism.languages.asciidoc['line-continuation']\n    }\n    Prism.languages.asciidoc['other-block'].inside.rest = {\n      table: Prism.languages.asciidoc['table'],\n      'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n      'indented-block': Prism.languages.asciidoc['indented-block'],\n      comment: Prism.languages.asciidoc['comment'],\n      'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n      attributes: Prism.languages.asciidoc['attributes'],\n      hr: Prism.languages.asciidoc['hr'],\n      'page-break': Prism.languages.asciidoc['page-break'],\n      admonition: Prism.languages.asciidoc['admonition'],\n      'list-label': Prism.languages.asciidoc['list-label'],\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity'],\n      'line-continuation': Prism.languages.asciidoc['line-continuation']\n    }\n    Prism.languages.asciidoc['title'].inside.rest = {\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity']\n    }\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function(env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'keyword'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    opcode: {\n      pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n      alias: 'property'\n    },\n    hexnumber: {\n      pattern: /#?\\$[\\da-f]{2,4}/i,\n      alias: 'string'\n    },\n    binarynumber: {\n      pattern: /#?%[01]+/,\n      alias: 'string'\n    },\n    decimalnumber: {\n      pattern: /#?\\d+/,\n      alias: 'string'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive tag': {\n      pattern: /<%\\s*@.*%>/i,\n      inside: {\n        'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    'directive tag': {\n      pattern: /<%.*%>/i,\n      inside: {\n        'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n        rest: Prism.languages.csharp\n      }\n    }\n  })\n  // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n  // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      'directive tag': Prism.languages.aspnet['directive tag']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp comment': /<%--[\\s\\S]*?--%>/\n  })\n  // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp script': {\n        pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = autohotkey\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: {\n      pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m, //function - don't use .*\\) in the end bcoz string locks it\n    tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m, //labels\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    punctuation: /[{}[\\]():,]/,\n    boolean: /\\b(?:true|false)\\b/,\n    selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n    builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n    symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n    keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^\\s*)#\\w+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","'use strict'\n\nmodule.exports = bash\nbash.displayName = 'bash'\nbash.aliases = ['shell']\nfunction bash(Prism) {\n  ;(function(Prism) {\n    var insideString = {\n      variable: [\n        // Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // Command Substitution\n        {\n          pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        },\n        /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i\n      ]\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\])#.*/,\n        lookbehind: true\n      },\n      string: [\n        //Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n          greedy: true,\n          inside: insideString\n        }\n      ],\n      variable: insideString.variable,\n      // Originally based on http://ss64.com/bash/\n      function: {\n        pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n        lookbehind: true\n      },\n      operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n    }\n    var inside = insideString.variable[1].inside\n    inside.string = Prism.languages.bash.string\n    inside['function'] = Prism.languages.bash['function']\n    inside.keyword = Prism.languages.bash.keyword\n    inside['boolean'] = Prism.languages.bash['boolean']\n    inside.operator = Prism.languages.bash.operator\n    inside.punctuation = Prism.languages.bash.punctuation\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function(Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"[^\"]*\"/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/i,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","'use strict'\n\nmodule.exports = bro\nbro.displayName = 'bro'\nbro.aliases = []\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:TODO|FIXME|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n      inside: {\n        keyword: /^(?:function|hook|event)/\n      }\n    },\n    variable: {\n      pattern: /(?:global|local) \\w+/i,\n      inside: {\n        keyword: /(?:global|local)/\n      }\n    },\n    builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n    constant: {\n      pattern: /const \\w+/i,\n      inside: {\n        keyword: /const/\n      }\n    },\n    keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: /;+.*/,\n    string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, //used for symbols and keywords\n    keyword: {\n      pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b[0-9A-Fa-f]+\\b/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = []\nfunction coffeescript(Prism) {\n  ;(function(Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/,\n      interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function(Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n    })\n    Prism.languages.insertBefore('crystal', 'string', {\n      attribute: {\n        pattern: /@\\[.+?\\]/,\n        alias: 'attr-name',\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      },\n      expansion: [\n        {\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n        {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }\n      ]\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet']\nfunction csharp(Prism) {\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n    string: [\n      {\n        pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n        greedy: true\n      }\n    ],\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n  })\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'generic-method': {\n      pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n      inside: {\n        function: /^\\w+/,\n        'class-name': {\n          pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        keyword: Prism.languages.csharp.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    },\n    preprocessor: {\n      pattern: /(^\\s*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight preprocessor directives as keywords\n        directive: {\n          pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.dotnet = Prism.languages.csharp\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - CSP Level 1\n   *  - CSP Level 2\n   *  - CSP Level 3\n   */\n  Prism.languages.csp = {\n    directive: {\n      pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  Prism.languages.css.selector = {\n    pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n    inside: {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n      class: /\\.[-:.\\w]+/,\n      id: /#[-:.\\w]+/,\n      attribute: /\\[[^\\]]+\\]/\n    }\n  }\n  Prism.languages.insertBefore('css', 'function', {\n    hexcode: /#[\\da-f]{3,8}/i,\n    entity: /\\\\[\\da-f]{1,8}/i,\n    number: /[\\d%.]+/\n  })\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    string: [\n      // r\"\", x\"\"\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\n      // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\n      // q\"IDENT\n      // ...\n      // IDENT\"\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\n      // q\"//\", q\"||\", etc.\n      /\\bq\"(.)[\\s\\S]*?\\1\"/,\n      // Characters\n      /'(?:\\\\'|\\\\?[^']+)'/,\n      /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/\n    ],\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,\n      {\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n        lookbehind: true\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n    operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.d.comment = [\n    // Shebang\n    /^\\s*#!.+/,\n    // /+ +/\n    {\n      // Allow one level of nesting\n      pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n      lookbehind: true\n    }\n  ].concat(Prism.languages.d.comment)\n  Prism.languages.insertBefore('d', 'comment', {\n    'token-string': {\n      // Allow one level of nesting\n      pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n      alias: 'string'\n    }\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  Prism.languages.dart = Prism.languages.extend('clike', {\n    string: [\n      {\n        pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true\n      },\n      {\n        pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword: [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ],\n    operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n  })\n  Prism.languages.insertBefore('dart', 'function', {\n    metadata: {\n      pattern: /@\\w+/,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  Prism.languages.diff = {\n    coord: [\n      // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n      /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n      // Match \"@@ ... @@\" coord lines in unified diff.\n      /^@@.*@@$/m,\n      // Match coord lines in normal diff (starts with a number).\n      /^\\d+.*$/m\n    ],\n    // Match inserted and deleted lines. Support both +/- and >/< styles.\n    deleted: /^[-<].*$/m,\n    inserted: /^[+>].*$/m,\n    // Match \"different\" lines (prefixed with \"!\") in context diff.\n    diff: {\n      pattern: /^!(?!!).+$/m,\n      alias: 'important'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  var _django_template = {\n    property: {\n      pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n      greedy: true,\n      inside: {\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n        operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n        function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n        important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n        variable: /\\b\\w+?\\b/,\n        punctuation: /[[\\];(),.:]/\n      }\n    }\n  }\n  Prism.languages.django = Prism.languages.extend('markup', {\n    comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n  })\n  // Updated html tag pattern to allow template tags inside html tags\n  Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i\n  Prism.languages.insertBefore('django', 'entity', _django_template)\n  Prism.languages.insertBefore(\n    'inside',\n    'tag',\n    _django_template,\n    Prism.languages.django.tag\n  )\n  if (Prism.languages.javascript) {\n    // Combine js code and template tags painting inside <script> blocks\n    Prism.languages.insertBefore(\n      'inside',\n      'string',\n      _django_template,\n      Prism.languages.django.script\n    )\n    Prism.languages.django.script.inside.string.inside = _django_template\n  }\n  if (Prism.languages.css) {\n    // Combine css code and template tags painting inside <style> blocks\n    Prism.languages.insertBefore(\n      'inside',\n      'atrule',\n      {tag: _django_template.property},\n      Prism.languages.django.style\n    )\n    Prism.languages.django.style.inside.string.inside = _django_template\n  }\n  // Add an Jinja2 alias\n  Prism.languages.jinja2 = Prism.languages.django\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  Prism.languages.docker = {\n    keyword: {\n      pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n      lookbehind: true\n    },\n    string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n    comment: /#.*/,\n    punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n  }\n  Prism.languages.dockerfile = Prism.languages.docker\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': {\n      pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n      alias: 'builtin'\n    },\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    comment: {\n      pattern: /#.*/m,\n      lookbehind: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\w+:(?!:)/,\n    capture: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function(o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|{-[\\s\\S]*?-}/,\n    char: {\n      pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n        greedy: true\n      }\n    ],\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      inside: {\n        keyword: /\\b(?:import|as|exposing)\\b/\n      }\n    },\n    keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  ;(function(Prism) {\n    Prism.languages.erb = Prism.languages.extend('ruby', {})\n    Prism.languages.insertBefore('erb', 'comment', {\n      delimiter: {\n        pattern: /^<%=?|%>$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.hooks.add('before-tokenize', function(env) {\n      var erbPattern = /<%=?[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function(Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow[\n      'function-variable'\n    ].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (Prism.util.type(Prism.languages.flow.keyword) !== 'Array') {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n      greedy: true\n    },\n    number: [\n      /\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n      /\\b0b[01]+(?:y|uy)?\\b/,\n      /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n    ]\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /^[^\\r\\n\\S]*#.*/m,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^\\s*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  Prism.languages.gherkin = {\n    pystring: {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n      alias: 'string'\n    },\n    comment: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n      lookbehind: true\n    },\n    feature: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n      lookbehind: true,\n      inside: {\n        important: {\n          pattern: /(:)[^\\r\\n]+/,\n          lookbehind: true\n        },\n        keyword: /[^:\\r\\n]+:/\n      }\n    },\n    scenario: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\n      lookbehind: true,\n      inside: {\n        important: {\n          pattern: /(:)[^\\r\\n]*/,\n          lookbehind: true\n        },\n        keyword: /[^:\\r\\n]+:/\n      }\n    },\n    'table-body': {\n      // Look-behind is used to skip the table head, which has the same format as any table row\n      pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n      lookbehind: true,\n      inside: {\n        outline: {\n          pattern: /<[^>]+?>/,\n          alias: 'variable'\n        },\n        td: {\n          pattern: /\\s*[^\\s|][^|]*/,\n          alias: 'string'\n        },\n        punctuation: /\\|/\n      }\n    },\n    'table-head': {\n      pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n      inside: {\n        th: {\n          pattern: /\\s*[^\\s|][^|]*/,\n          alias: 'variable'\n        },\n        punctuation: /\\|/\n      }\n    },\n    atrule: {\n      pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n      inside: {\n        outline: {\n          pattern: /<[^>]+?>/,\n          alias: 'variable'\n        }\n      }\n    },\n    outline: {\n      pattern: /<[^>]+?>/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/m\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    commit_sha1: /^commit \\w{40}$/m\n  }\n}\n","'use strict'\n\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.languages.glsl = Prism.languages.extend('clike', {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n    number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n    keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n  })\n  Prism.languages.insertBefore('glsl', 'comment', {\n    preprocessor: {\n      pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n      lookbehind: true,\n      alias: 'builtin'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n    boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n    operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n    string: {\n      pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n    keyword: [\n      {\n        pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n        lookbehind: true\n      },\n      /\\b(?:query|fragment|mutation)\\b/\n    ],\n    operator: /!|=|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/\n  }\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    string: [\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n        greedy: true\n      },\n      {\n        pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    }\n  })\n  // Handle string interpolation\n  Prism.hooks.add('wrap', function(env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        }\n        // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function(Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        },\n        {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.markup\n        }\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n              lookbehind: true,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.ruby\n        }\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.ruby\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {filter: 'coffee', language: 'coffeescript'},\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string' ? {filter: filter, language: filter} : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', filter.filter)\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = []\nfunction handlebars(Prism) {\n  ;(function(Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:true|false)\\b/,\n      block: {\n        pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function(env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = []\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n      lookbehind: true\n    },\n    char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n      greedy: true\n    },\n    keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|qualified|as|hiding)\\b/\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n    constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    // Strings can be multi-line\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n          lookbehind: true,\n          inside: {\n            interpolation: {\n              pattern: /^\\$\\w*/,\n              alias: 'variable'\n              // See rest below\n            }\n          }\n        }\n      }\n    },\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n    operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#\\w+/,\n      alias: 'builtin'\n    },\n    metadata: {\n      pattern: /@:?\\w+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'variable'\n    }\n  })\n  Prism.languages.haxe['string'].inside['interpolation'].inside.rest =\n    Prism.languages.haxe\n  delete Prism.languages.haxe['class-name']\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\d{7,}/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\d{0,6}/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\d{8,}/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\d{0,7}/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  Prism.languages.http = {\n    'request-line': {\n      pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,\n      inside: {\n        // HTTP Verb\n        property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n        // Path or query argument\n        'attr-name': /:\\w+/\n      }\n    },\n    'response-status': {\n      pattern: /^HTTP\\/1.[01] \\d+.*/m,\n      inside: {\n        // Status, e.g. 200 OK\n        property: {\n          pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n          lookbehind: true\n        }\n      }\n    },\n    // HTTP header name\n    'header-name': {\n      pattern: /^[\\w-]+:(?=.)/m,\n      alias: 'keyword'\n    }\n  }\n  // Create a mapping of Content-Type headers to language definitions\n  var httpLanguages = {\n    'application/json': Prism.languages.javascript,\n    'application/xml': Prism.languages.markup,\n    'text/xml': Prism.languages.markup,\n    'text/html': Prism.languages.markup\n  }\n  // Insert each content type parser that has its associated language\n  // currently loaded.\n  for (var contentType in httpLanguages) {\n    if (httpLanguages[contentType]) {\n      var options = {}\n      options[contentType] = {\n        pattern: new RegExp(\n          '(content-type:\\\\s*' +\n            contentType +\n            '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*',\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          rest: httpLanguages[contentType]\n        }\n      }\n      Prism.languages.insertBefore('http', 'header-name', options)\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@[^\\s]+)/i,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n              // See rest below\n            }\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7\n  // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    comment: /^[ \\t]*;.*$/m,\n    selector: /^[ \\t]*\\[.*?\\]/m,\n    constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n    'attr-value': {\n      pattern: /=.*/,\n      inside: {\n        punctuation: /^[=]/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: /\\bNB\\..*/,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n    builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n    symbol: /[|;@]/,\n    punctuation: /[,.]/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.jolie['class-name']\n  delete Prism.languages.jolie['function']\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    function: {\n      pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n      lookbehind: true\n    },\n    aggregates: {\n      pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        withExtension: {\n          pattern: /\\bwith\\s+\\w+/,\n          inside: {\n            keyword: /\\bwith\\b/\n          }\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        punctuation: {\n          pattern: /,/\n        }\n      }\n    },\n    redirects: {\n      pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: {\n          pattern: /,/\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        symbol: {\n          pattern: /=>/\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['jsonp']\nfunction json(Prism) {\n  Prism.languages.json = {\n    property: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      greedy: true\n    },\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    punctuation: /[{}[\\]);,]/,\n    operator: /:/g,\n    boolean: /\\b(?:true|false)\\b/i,\n    null: /\\bnull\\b/i\n  }\n  Prism.languages.jsonp = Prism.languages.json\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n    keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n    operator: /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: /\\bc\\s.*/i,\n    function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i, // virtual key\n    string: /(\"|').*?\\1/,\n    bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,\n      /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i\n    ],\n    keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i, // rule keywords\n    atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i, // structural keywords\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers\n    operator: /[+>\\\\,()]/,\n    tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = []\nfunction kotlin(Prism) {\n  ;(function(Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        /\\w+(?=\\s*\\()/,\n        {\n          pattern: /(\\.)\\w+(?=\\s*\\{)/,\n          lookbehind: true\n        }\n      ],\n      number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    Prism.languages.insertBefore('kotlin', 'string', {\n      'raw-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        alias: 'string'\n        // See interpolation below\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\w+@|@\\w+/,\n        alias: 'symbol'\n      }\n    })\n    var interpolation = [\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      },\n      {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }\n    ]\n    Prism.languages.kotlin['string'].inside = Prism.languages.kotlin[\n      'raw-string'\n    ].inside = {\n      interpolation: interpolation\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = []\nfunction latex(Prism) {\n  ;(function(Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      insideEqu = {\n        'equation-command': {\n          pattern: funcPattern,\n          alias: 'regex'\n        }\n      }\n    Prism.languages.latex = {\n      comment: /%.*/m,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n    punctuation: /[{}();:,]/,\n    operator: /[+\\-*\\/]/\n  })\n  // Invert function and punctuation positions\n  Prism.languages.insertBefore('less', 'punctuation', {\n    function: Prism.languages.less.function\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n      // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.languages.liquid = {\n    keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n    number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n      lookbehind: true\n    },\n    function: {\n      pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function(Prism) {\n    // Functions to construct regular expressions\n    // simple form\n    // e.g. (interactive ... or (interactive)\n    function simple_form(name) {\n      return new RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])')\n    }\n    // booleans and numbers\n    function primitive(pattern) {\n      return new RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])')\n    }\n    // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = '[-+*/_~!@$%^=<>{}\\\\w]+'\n    // symbol starting with & used in function arguments\n    var marker = '&' + symbol\n    // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))'\n    // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]*|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: new RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: new RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: new RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: new RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: new RegExp(\n            par +\n              '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: new RegExp(\n            par +\n              '(?:for|do|collect|return|finally|append|concat|in|by)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form('declare'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form('interactive'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive('(?:t|nil)'),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: new RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: new RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: new RegExp(\n          par +\n            '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' +\n            symbol +\n            '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: new RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: new RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n        lookbehind: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: new RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': new RegExp(marker),\n      rest: {\n        argument: {\n          pattern: new RegExp(symbol),\n          alias: 'variable'\n        },\n        varform: {\n          pattern: new RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n          lookbehind: true,\n          inside: {\n            string: language.string,\n            boolean: language.boolean,\n            number: language.number,\n            symbol: language.symbol,\n            punctuation: /[()]/\n          }\n        }\n      }\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: new RegExp(par + '[\\\\s\\\\S]*' + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: new RegExp('&(?:rest|body)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: new RegExp('&(?:optional|aux)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: new RegExp(\n            '&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'\n          ),\n          inside: arg\n        },\n        argument: {\n          pattern: new RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n              // See rest below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\"])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n      // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }\n    ],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markdown\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = []\nfunction markdown(Prism) {\n  Prism.languages.markdown = Prism.languages.extend('markup', {})\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    blockquote: {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    code: [\n      {\n        // Prefixed by 4 spaces or 1 tab\n        pattern: /^(?: {4}|\\t).+/m,\n        alias: 'keyword'\n      },\n      {\n        // `code`\n        // ``code``\n        pattern: /``.+?``|`[^`\\n]+`/,\n        alias: 'keyword'\n      }\n    ],\n    title: [\n      {\n        // title 1\n        // =======\n        // title 2\n        // -------\n        pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n        alias: 'important',\n        inside: {\n          punctuation: /==+$|--+$/\n        }\n      },\n      {\n        // # title 1\n        // ###### title 6\n        pattern: /(^\\s*)#+.+/m,\n        lookbehind: true,\n        alias: 'important',\n        inside: {\n          punctuation: /^#+|#+$/\n        }\n      }\n    ],\n    hr: {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    list: {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        variable: {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        punctuation: /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    bold: {\n      // **strong**\n      // __strong__\n      // Allow only one line break\n      pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n      }\n    },\n    italic: {\n      // *em*\n      // _em_\n      // Allow only one line break\n      pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[*_]|[*_]$/\n      }\n    },\n    url: {\n      // [example](http://example.com \"Optional title\")\n      // [example] [id]\n      pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n      inside: {\n        variable: {\n          pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        string: {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  })\n  Prism.languages.markdown['bold'].inside['url'] =\n    Prism.languages.markdown['url']\n  Prism.languages.markdown['italic'].inside['url'] =\n    Prism.languages.markdown['url']\n  Prism.languages.markdown['bold'].inside['italic'] =\n    Prism.languages.markdown['italic']\n  Prism.languages.markdown['italic'].inside['bold'] =\n    Prism.languages.markdown['bold']\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  Prism.languages['markup-templating'] = {}\n  Object.defineProperties(Prism.languages['markup-templating'], {\n    buildPlaceholders: {\n      // Tokenize all inline templating expressions matching placeholderPattern\n      // If the replaceFilter function is provided, it will be called with every match.\n      // If it returns false, the match will not be replaced.\n      value: function(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return\n        }\n        env.tokenStack = []\n        env.code = env.code.replace(placeholderPattern, function(match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match\n          }\n          var i = env.tokenStack.length\n          // Check for existing strings\n          while (\n            env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1\n          )\n            ++i\n          // Create a sparse array\n          env.tokenStack[i] = match\n          return '___' + language.toUpperCase() + i + '___'\n        })\n        // Switch the grammar to markup\n        env.grammar = Prism.languages.markup\n      }\n    },\n    tokenizePlaceholders: {\n      // Replace placeholders with proper tokens after tokenizing\n      value: function(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return\n        }\n        // Switch the grammar back\n        env.grammar = Prism.languages[language]\n        var j = 0\n        var keys = Object.keys(env.tokenStack)\n        var walkTokens = function(tokens) {\n          if (j >= keys.length) {\n            return\n          }\n          for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i]\n            if (\n              typeof token === 'string' ||\n              (token.content && typeof token.content === 'string')\n            ) {\n              var k = keys[j]\n              var t = env.tokenStack[k]\n              var s = typeof token === 'string' ? token : token.content\n              var index = s.indexOf('___' + language.toUpperCase() + k + '___')\n              if (index > -1) {\n                ++j\n                var before = s.substring(0, index)\n                var middle = new Prism.Token(\n                  language,\n                  Prism.tokenize(t, env.grammar, language),\n                  'language-' + language,\n                  t\n                )\n                var after = s.substring(\n                  index + ('___' + language.toUpperCase() + k + '___').length\n                )\n                var replacement\n                if (before || after) {\n                  replacement = [before, middle, after].filter(function(v) {\n                    return !!v\n                  })\n                  walkTokens(replacement)\n                } else {\n                  replacement = middle\n                }\n                if (typeof token === 'string') {\n                  Array.prototype.splice.apply(\n                    tokens,\n                    [i, 1].concat(replacement)\n                  )\n                } else {\n                  token.content = replacement\n                }\n                if (j >= keys.length) {\n                  break\n                }\n              }\n            } else if (token.content && typeof token.content !== 'string') {\n              walkTokens(token.content)\n            }\n          }\n        }\n        walkTokens(env.tokens)\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n          // See rest below\n        }\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    string: /\"[^\"\\r\\n]*\"/,\n    comment: [\n      {\n        pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n        greedy: true\n      },\n      {\n        pattern: /'.+/,\n        greedy: true\n      }\n    ],\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    function: /\\w+(?=\\()/,\n    'type-char': {\n      pattern: /(\\w)[?%#$]/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: {\n      pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n    operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = []\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|FLOAT|DEFAULT).*$/m\n    ],\n    register: {\n      pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  Prism.languages.nginx = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n  })\n  Prism.languages.insertBefore('nginx', 'keyword', {\n    variable: /\\$[a-z_]+/i\n  })\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: /#.*/,\n    // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n    // Character literals are handled specifically to prevent issues with numeric type suffixes\n    string: {\n      pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n      greedy: true\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    function: {\n      pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators inside backticks\n    ignore: {\n      pattern: /`[^`\\r\\n]+`/,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable'\n              // See rest below\n            }\n          }\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside.rest =\n    Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.02\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n      lookbehind: true\n    },\n    property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n    constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n    variable: /\\$\\w+/i,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = objectivec\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = []\nfunction objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n}\n","'use strict'\n\nmodule.exports = ocaml\nocaml.displayName = 'ocaml'\nocaml.aliases = []\nfunction ocaml(Prism) {\n  Prism.languages.ocaml = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: [\n      {\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n        greedy: true\n      }\n    ],\n    number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n    type: {\n      pattern: /\\B['`]\\w*/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'function'\n    },\n    keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    // Custom operators are allowed\n    operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n    punctuation: /[(){}\\[\\]|_.,:;]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nvar refractorCpp = require('./cpp.js')\nmodule.exports = opencl\nopencl.displayName = 'opencl'\nopencl.aliases = []\nfunction opencl(Prism) {\n  Prism.register(refractorC)\n  Prism.register(refractorCpp)\n  ;(function(Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n      'function-opencl-kernel': {\n        pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n        alias: 'function'\n      },\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      'constant-opencl-kernel': {\n        pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n        alias: 'constant'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes)\n    // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n    attributes['type-opencl-host-c++'] = {\n      pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n      alias: 'keyword'\n    }\n    // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    Prism.languages.insertBefore('cpp', 'keyword', attributes)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n        lookbehind: true\n      }\n    ],\n    number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\w+(?=:)/,\n    operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function() {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function(keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\w[\\w ]*?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  Prism.languages.parser = Prism.languages.extend('markup', {\n    keyword: {\n      pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.|:+/\n      }\n    },\n    function: {\n      pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /(^@)(?:GET_|SET_)/,\n          lookbehind: true\n        },\n        punctuation: /\\.|:+/\n      }\n    },\n    escape: {\n      pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n      alias: 'builtin'\n    },\n    punctuation: /[\\[\\](){};]/\n  })\n  Prism.languages.insertBefore('parser', 'keyword', {\n    'parser-comment': {\n      pattern: /(\\s)#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    expression: {\n      // Allow for 3 levels of depth\n      pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        string: {\n          pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n          lookbehind: true\n        },\n        keyword: Prism.languages.parser.keyword,\n        variable: Prism.languages.parser.variable,\n        function: Prism.languages.parser.function,\n        boolean: /\\b(?:true|false)\\b/,\n        number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n        escape: Prism.languages.parser.escape,\n        operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n        punctuation: Prism.languages.parser.punctuation\n      }\n    }\n  })\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      expression: Prism.languages.parser.expression,\n      keyword: Prism.languages.parser.keyword,\n      variable: Prism.languages.parser.variable,\n      function: Prism.languages.parser.function,\n      escape: Prism.languages.parser.escape,\n      'parser-punctuation': {\n        pattern: Prism.languages.parser.punctuation,\n        alias: 'punctuation'\n      }\n    },\n    Prism.languages.parser['tag'].inside['attr-value']\n  )\n}\n","'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\n      {\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  Prism.languages.perl = {\n    comment: [\n      {\n        // POD\n        pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true\n      }\n    ],\n    // TODO Could be nice to handle Heredoc too.\n    string: [\n      // q/.../\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n      // q a...a\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n      // q(...)\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true\n      },\n      // q{...}\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n        greedy: true\n      },\n      // q[...]\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true\n      },\n      // q<...>\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true\n      },\n      // \"...\", `...`\n      {\n        pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n      // '...'\n      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n      {\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n        greedy: true\n      }\n    ],\n    regex: [\n      // m/.../\n      {\n        pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n      // m a...a\n      {\n        pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n      // m(...)\n      {\n        pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n        greedy: true\n      },\n      // m{...}\n      {\n        pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n        greedy: true\n      },\n      // m[...]\n      {\n        pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n        greedy: true\n      },\n      // m<...>\n      {\n        pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n        greedy: true\n      },\n      // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // s a...a...a\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // s(...)(...)\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // s{...}{...}\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // s[...][...]\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // s<...><...>\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }\n    ],\n    // FIXME Not sure about the handling of ::, ', and #\n    variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/,\n      // $^V\n      /[&*$@%]\\^[A-Z_]/,\n      // ${...}\n      /[&*$@%]#?(?=\\{)/,\n      // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n      // $1\n      /[&*$@%]\\d+/,\n      // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n    ],\n    filehandle: {\n      // <>, <FOO>, _\n      pattern: /<(?![<=])\\S*>|\\b_\\b/,\n      alias: 'symbol'\n    },\n    vstring: {\n      // v1.2, 1.2.3\n      pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n      alias: 'string'\n    },\n    function: {\n      pattern: /sub [a-z0-9_]+/i,\n      inside: {\n        keyword: /sub/\n      }\n    },\n    keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n    number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n    operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nmodule.exports = phpExtras\nphpExtras.displayName = 'phpExtras'\nphpExtras.aliases = []\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: /\\$this\\b/,\n    global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /static|self|parent/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = plsql\nplsql.displayName = 'plsql'\nplsql.aliases = []\nfunction plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n  })\n  if (Prism.util.type(Prism.languages.plsql['keyword']) !== 'Array') {\n    Prism.languages.plsql['keyword'] = [Prism.languages.plsql['keyword']]\n  }\n  Prism.languages.plsql['keyword'].unshift(\n    /\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i\n  )\n  if (Prism.util.type(Prism.languages.plsql['operator']) !== 'Array') {\n    Prism.languages.plsql['operator'] = [Prism.languages.plsql['operator']]\n  }\n  Prism.languages.plsql['operator'].unshift(/:=/)\n}\n","'use strict'\n\nmodule.exports = powershell\npowershell.displayName = 'powershell'\npowershell.aliases = []\nfunction powershell(Prism) {\n  Prism.languages.powershell = {\n    comment: [\n      {\n        pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^`])#.*/,\n        lookbehind: true\n      }\n    ],\n    string: [\n      {\n        pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n        greedy: true,\n        inside: {\n          function: {\n            // Allow for one level of nesting\n            pattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n            lookbehind: true,\n            // Populated at end of file\n            inside: {}\n          }\n        }\n      },\n      {\n        pattern: /'(?:[^']|'')*'/,\n        greedy: true\n      }\n    ],\n    // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n    // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n    namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n    boolean: /\\$(?:true|false)\\b/i,\n    variable: /\\$\\w+\\b/i,\n    // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n    // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n    // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n    function: [\n      /\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,\n      /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n    ],\n    // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n    keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n    operator: {\n      pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n      lookbehind: true\n    },\n    punctuation: /[|{}[\\];(),.]/\n  }\n  // Variable interpolation inside strings, and nested expressions\n  Prism.languages.powershell.string[0].inside.boolean =\n    Prism.languages.powershell.boolean\n  Prism.languages.powershell.string[0].inside.variable =\n    Prism.languages.powershell.variable\n  Prism.languages.powershell.string[0].inside.function.inside =\n    Prism.languages.powershell\n}\n","'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  })\n  // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/\n  // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n","'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    variable: /\\b[A-Z_]\\w*/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+\\.?\\d*/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = properties\nproperties.displayName = 'properties'\nproperties.aliases = []\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n    punctuation: /[=:]/\n  }\n}\n","'use strict'\n\nmodule.exports = protobuf\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\nfunction protobuf(Prism) {\n  Prism.languages.protobuf = Prism.languages.extend('clike', {\n    keyword: /\\b(?:package|import|message|enum)\\b/,\n    builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n    primitive: {\n      pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = pug\npug.displayName = 'pug'\npug.aliases = []\nfunction pug(Prism) {\n  ;(function(Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.javascript\n        }\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      'multiline-plain-text': {\n        pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.markup\n        }\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        },\n        // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.javascript\n        }\n      },\n      'plain-text': {\n        pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: {\n                rest: Prism.languages.javascript\n              }\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: {\n                    rest: Prism.languages.javascript\n                  }\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      '(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {filter: 'atpl', language: 'twig'},\n      {filter: 'coffee', language: 'coffeescript'},\n      'ejs',\n      'handlebars',\n      'hogan',\n      'less',\n      'livescript',\n      'markdown',\n      'mustache',\n      'plates',\n      {filter: 'sass', language: 'scss'},\n      'stylus',\n      'swig'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string' ? {filter: filter, language: filter} : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', filter.filter),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function(Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n            // See interpolation below\n          }\n        },\n        // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        },\n        // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      // Includes words reserved for future use\n      keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = pure\npure.displayName = 'pure'\npure.aliases = []\nfunction pure(Prism) {\n  Prism.register(refractorC)\n  ;(function(Prism) {\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {lang: 'c++', alias: 'cpp'},\n      'fortran',\n      'ats',\n      'dsp'\n    ]\n    var inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>'\n    inlineLanguages.forEach(function(lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '{lang}',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    })\n    // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = []\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    'triple-quoted-string': {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:True|False|None)\\b/,\n    number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/,\n    keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:TRUE|FALSE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:NaN|Inf)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  })\n  // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = []\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    // TODO Write tests.\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n      greedy: true\n    },\n    function: /[a-z_]\\w*(?=\\()/i,\n    property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n    tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n    keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n    boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n    number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( +)[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^\\s*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      },\n      // Underlined only\n      {\n        pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: /#.*/,\n    keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n    regex: {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*)[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","'use strict'\n\nmodule.exports = rust\nrust.displayName = 'rust'\nrust.aliases = []\nfunction rust(Prism) {\n  /* TODO\nAdd support for Markdown notation inside doc comments\nAdd support for nested block comments...\nMatch closure params even when not followed by dash or brace\nAdd better support for macro definition\n*/\n  Prism.languages.rust = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    string: [\n      {\n        pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n        greedy: true\n      },\n      {\n        pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }\n    ],\n    char: {\n      pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n      alias: 'string'\n    },\n    'lifetime-annotation': {\n      pattern: /'[^\\s>']+/,\n      alias: 'symbol'\n    },\n    keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n    attribute: {\n      pattern: /#!?\\[.+?\\]/,\n      greedy: true,\n      alias: 'attr-name'\n    },\n    function: [\n      /\\w+(?=\\s*\\()/,\n      // Macros can use parens or brackets\n      /\\w+!(?=\\s*\\(|\\[)/\n    ],\n    'macro-rules': {\n      pattern: /\\w+!/,\n      alias: 'function'\n    },\n    // Hex, oct, bin, dec numbers with visual separators and type suffix\n    number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n    // Closure params should not be confused with bitwise OR |\n    'closure-params': {\n      pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n      inside: {\n        punctuation: /[|:,]/,\n        operator: /[&*]/\n      }\n    },\n    punctuation: /[{}[\\];(),:]|\\.+|->/,\n    operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n  }\n}\n","'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  Prism.languages.sas = {\n    datalines: {\n      pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n      alias: 'string',\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n          lookbehind: true\n        },\n        punctuation: /;/\n      }\n    },\n    comment: [\n      {\n        pattern: /(^\\s*|;\\s*)\\*.*;/m,\n        lookbehind: true\n      },\n      /\\/\\*[\\s\\S]+?\\*\\//\n    ],\n    datetime: {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: /'[^']+'(?:dt?|t)\\b/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: true\n    },\n    keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n    operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n    punctuation: /[$%@.(){}\\[\\];,\\\\]/\n  }\n}\n","'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function(Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/m\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,\n      {\n        pattern: /(\\s+)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important\n    // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    delete Prism.languages.sass.selector\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    string: [\n      {\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  Prism.languages.scheme = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n      lookbehind: true\n    },\n    builtin: {\n      pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n      lookbehind: true\n    },\n    number: {\n      pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n      lookbehind: true\n    },\n    boolean: /#[tf]/,\n    operator: {\n      pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n      lookbehind: true\n    },\n    function: {\n      pattern: /(\\()[^\\s()]*(?=\\s)/,\n      lookbehind: true\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/\n        // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)*url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n      {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.scss.property = {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: /\\bnull\\b/,\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: /\"(?:\"\"|[^\"])+\"/,\n    string: /'(?:''|[^'])+'/,\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n    character: {\n      pattern: /\\$./,\n      alias: 'string'\n    },\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  /* TODO\nAdd support for variables inside double quoted strings\nAdd support for {php}\n*/\n  ;(function(Prism) {\n    Prism.languages.smarty = {\n      comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n      delimiter: {\n        pattern: /^\\{|\\}$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: [\n        {\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /^\\/?(?!\\d)\\w+/,\n        /(?!\\d)\\w+(?=\\()/\n      ],\n      'attr-name': {\n        // Value is made optional because it may have already been tokenized\n        pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n        inside: {\n          variable: {\n            pattern: /(=\\s*)(?!\\d)\\w+/,\n            lookbehind: true\n          },\n          operator: /=/\n        }\n      },\n      punctuation: [/[\\[\\]().,:`]|->/],\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n      ],\n      keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n    }\n    // Comments are inserted at top so that they can\n    // surround markup\n    Prism.languages.insertBefore('smarty', 'tag', {\n      'smarty-comment': {\n        pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n        alias: ['smarty', 'comment']\n      }\n    })\n    // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g\n      var smartyLitteralStart = '{literal}'\n      var smartyLitteralEnd = '{/literal}'\n      var smartyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function(match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false\n          }\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  ;(function(Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^{+\\/?|\\/?}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    }\n    // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function(match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function(Prism) {\n    var inside = {\n      url: /url\\(([\"']?).*?\\1\\)/i,\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null, // See below\n      func: null, // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      number: /\\b\\d+(?:\\.\\d+)?%?/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^{|}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      'atrule-declaration': {\n        pattern: /(^\\s*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  // issues: nested multiline comments\n  Prism.languages.swift = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\\\\\(|\\)$/,\n              alias: 'variable'\n              // See rest below\n            }\n          }\n        }\n      }\n    },\n    keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n    number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n    builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n  })\n  Prism.languages.swift['string'].inside['interpolation'].inside.rest =\n    Prism.languages.swift\n}\n","'use strict'\n\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$){[^}]+}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:elseif|else)\\b/\n    ],\n    scope: {\n      pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function(Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+'\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^)]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n            inside: {\n              modifier: {\n                pattern: RegExp(\n                  '(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n            inside: {\n              modifier: {\n                pattern: RegExp('(^[*#]+)' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: RegExp(\n              '^(?:(?:' +\n                modifierRegex +\n                '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' +\n                modifierRegex +\n                '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|',\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: RegExp(\n                  '(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' +\n                    modifierRegex +\n                    '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            pattern: RegExp(\n              '(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'\n            ),\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                pattern: RegExp(\n                  '(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'\n                ),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                pattern: RegExp(\n                  '(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp(\n                  '(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            pattern: RegExp(\n              '\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'\n            ),\n            inside: {\n              text: {\n                pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp('(^\")' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: RegExp(\n              '!(?:' +\n                modifierRegex +\n                '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'\n            ),\n            inside: {\n              source: {\n                pattern: RegExp(\n                  '(^!(?:' +\n                    modifierRegex +\n                    '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^)]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    })\n    var nestedPatterns = {\n      inline: Prism.languages.textile['phrase'].inside['inline'],\n      link: Prism.languages.textile['phrase'].inside['link'],\n      image: Prism.languages.textile['phrase'].inside['image'],\n      footnote: Prism.languages.textile['phrase'].inside['footnote'],\n      acronym: Prism.languages.textile['phrase'].inside['acronym'],\n      mark: Prism.languages.textile['phrase'].inside['mark']\n    }\n    // Only allow alpha-numeric HTML tags, not XML tags\n    Prism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n    // Allow some nesting\n    Prism.languages.textile['phrase'].inside['inline'].inside[\n      'bold'\n    ].inside = nestedPatterns\n    Prism.languages.textile['phrase'].inside['inline'].inside[\n      'italic'\n    ].inside = nestedPatterns\n    Prism.languages.textile['phrase'].inside['inline'].inside[\n      'inserted'\n    ].inside = nestedPatterns\n    Prism.languages.textile['phrase'].inside['inline'].inside[\n      'deleted'\n    ].inside = nestedPatterns\n    Prism.languages.textile['phrase'].inside['inline'].inside[\n      'span'\n    ].inside = nestedPatterns\n    // Allow some styles inside table cells\n    Prism.languages.textile['phrase'].inside['table'].inside['inline'] =\n      nestedPatterns['inline']\n    Prism.languages.textile['phrase'].inside['table'].inside['link'] =\n      nestedPatterns['link']\n    Prism.languages.textile['phrase'].inside['table'].inside['image'] =\n      nestedPatterns['image']\n    Prism.languages.textile['phrase'].inside['table'].inside['footnote'] =\n      nestedPatterns['footnote']\n    Prism.languages.textile['phrase'].inside['table'].inside['acronym'] =\n      nestedPatterns['acronym']\n    Prism.languages.textile['phrase'].inside['table'].inside['mark'] =\n      nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  var typescript = Prism.util.clone(Prism.languages.typescript)\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript)\n}\n","'use strict'\n\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  ;(function(Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    delete Prism.languages.tt2['operator']\n    delete Prism.languages.tt2['variable']\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n      variable: {\n        pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n      }\n    })\n    delete Prism.languages.tt2['delimiter']\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    })\n    // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function(env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.*/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n          {\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          },\n          /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  }\n}\n","'use strict'\nvar refractorBasic = require('./basic.js')\nmodule.exports = vbnet\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true\n      }\n    ]\n  })\n}\n","'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function(Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|]]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    // support for any kernel function (ex: $display())\n    property: /\\B\\$\\w+\\b/,\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n    // support for time ticks, vectors, and real numbers\n    number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vhdl\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:use|library)\\b/i,\n    // support for predefined attributes included\n    keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vim\nvim.displayName = 'vim'\nvim.aliases = []\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\w+(?=\\()/,\n    keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = visualBasic\nvisualBasic.displayName = 'visualBasic'\nvisualBasic.aliases = []\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b).*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n      alias: 'builtin'\n    },\n    number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n    boolean: /\\b(?:True|False|Nothing)\\b/i,\n    keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: [\n      /[+\\-*/\\\\^<=>&#@$%!]/,\n      {\n        pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n}\n","'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n    number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = wiki\nwiki.displayName = 'wiki'\nwiki.aliases = []\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+).+?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/,\n      // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function(Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      inside: {\n        keyword: /^Rem/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n    keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = xquery\nxquery.displayName = 'xquery'\nxquery.aliases = []\nfunction xquery(Prism) {\n  ;(function(Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[\\w-:]+/,\n      axis: {\n        pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n    Prism.languages.xquery['tag'].inside[\n      'attr-value'\n    ].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i\n    Prism.languages.xquery['tag'].inside['attr-value'].inside[\n      'punctuation'\n    ] = /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n      inside: {\n        rest: Prism.languages.xquery\n      },\n      alias: 'language-xquery'\n    }\n    // The following will handle plain text inside tags\n    var stringifyToken = function(token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function(tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' &&\n            // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function(env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = []\nfunction yaml(Prism) {\n  Prism.languages.yaml = {\n    scalar: {\n      pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    comment: /#.*/,\n    key: {\n      pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    directive: {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    datetime: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    boolean: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true,\n      alias: 'important'\n    },\n    null: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true,\n      alias: 'important'\n    },\n    string: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n      lookbehind: true,\n      greedy: true\n    },\n    number: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true\n    },\n    tag: /![^\\s]+/,\n    important: /[&*][\\w]+/,\n    punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = decorate;\nexports.decorateFragment = decorateFragment;\nexports.reduceNodes = reduceNodes;\nexports.parseComment = parseComment;\nexports.COMMENT = void 0;\n\nvar _get_props = _interopRequireDefault(require(\"./get_props\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar COMMENT = /^\\s*{\\s*(.*?)\\s*}\\s*$/;\n/**\n * Decorates.\n */\n\nexports.COMMENT = COMMENT;\n\nfunction decorate(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Nothing to do for leaf nodes\n  if (!root.children) return root; // Work and recurse\n\n  var children = decorateFragment(root.children, options);\n  return _objectSpread({}, root, {\n    children: children\n  });\n}\n/**\n * Decorates a list of nodes.\n */\n\n\nfunction decorateFragment(list) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return list.map(function (c) {\n    return decorate(c, options);\n  }).reduce(reduceNodes, []);\n}\n/**\n * Reduces a list of nodes. (lol)\n */\n\n\nfunction reduceNodes(list, node) {\n  var commentProps = parseComment(node); // Pass-thru for non-comments\n\n  if (!commentProps) return _toConsumableArray(list).concat([node]); // Replace the last\n\n  var head = trimEnd(list);\n  var tail = last(list); // This only happens when list.length === 0\n\n  if (!tail) return [];\n  return _toConsumableArray(head).concat([applyProps(tail, commentProps)]);\n}\n/**\n * Returns information about a comment node.\n *\n * @example\n *     comment = { type: 'comment', value: '{.hello.world}' }\n *     parseComment(comment)\n *     // => { className: ['hello', 'world']\n */\n\n\nfunction parseComment(node) {\n  if (node.type !== 'comment') return;\n  var m = node.value.match(COMMENT);\n  if (!m) return;\n  return (0, _get_props.default)(m[1]);\n}\n/**\n * Applies properties into a HAST node.\n */\n\n\nfunction applyProps(node, props) {\n  // Reject text nodes\n  if (node.type !== 'element') return node;\n  var prevProps = node.properties || {};\n\n  var className = _toConsumableArray(prevProps.className || []).concat(_toConsumableArray(props.className || []));\n\n  var result = _objectSpread({}, node, {\n    properties: _objectSpread({}, prevProps, props, {\n      className: className.length ? className : undefined\n    })\n  });\n\n  return result;\n}\n/**\n * Returns the last item in a list.\n * @private\n *\n * @example\n *     last([1, 2, 3, 4, 5])\n *     => 5\n\n *     last([])\n *     => undefined\n */\n\n\nfunction last(list) {\n  if (!list.length) return;\n  return list[list.length - 1];\n}\n/**\n * Trims `n` items off the end of an array.\n * @private\n *\n * @example\n *     trimEnd(['a', 'b', 'c', 'd', 'e'], 1)\n *     => ['a', 'b', 'c', 'd']\n *\n *     trimEnd(['a', 'b', 'c', 'd', 'e'], 2)\n *     => ['a', 'b', 'c']\n */\n\n\nfunction trimEnd(list) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var result = list.slice(0, list.length - n);\n  return result;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getProps;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Gets props from a directive.\n *\n * @example\n *     getProps('.hello .hi #world')\n *     // => { className: ['hello', 'hi'], id: 'world' }\n\n *     getProps('.hello')\n *     // => { className: ['hello'] }\n */\nfunction getProps(input) {\n  return reduce(input, {}, function (state, input) {\n    var m;\n\n    var _match = match(input, /^\\s*\\.([a-zA-Z0-9\\-_]+)/);\n\n    var _match2 = _slicedToArray(_match, 2);\n\n    m = _match2[0];\n    input = _match2[1];\n    if (m) return [addClassName(state, m[1]), input];\n\n    var _match3 = match(input, /^\\s*#([a-zA-Z0-9\\-_]+)/);\n\n    var _match4 = _slicedToArray(_match3, 2);\n\n    m = _match4[0];\n    input = _match4[1];\n    if (m) return [_objectSpread({}, state, {\n      id: m[1]\n    }), input];\n\n    var _match5 = match(input, /^\\s*([a-zA-Z0-9\\-_]+)=\"([^\"]*)\"/);\n\n    var _match6 = _slicedToArray(_match5, 2);\n\n    m = _match6[0];\n    input = _match6[1];\n    if (m) return [_objectSpread({}, state, _defineProperty({}, m[1], m[2])), input];\n\n    var _match7 = match(input, /^\\s*([a-zA-Z0-9\\-_]+)='([^']*)'/);\n\n    var _match8 = _slicedToArray(_match7, 2);\n\n    m = _match8[0];\n    input = _match8[1];\n    if (m) return [_objectSpread({}, state, _defineProperty({}, m[1], m[2])), input];\n\n    var _match9 = match(input, /^\\s*([a-zA-Z0-9\\-_]+)=([^ ]*)/);\n\n    var _match10 = _slicedToArray(_match9, 2);\n\n    m = _match10[0];\n    input = _match10[1];\n    if (m) return [_objectSpread({}, state, _defineProperty({}, m[1], m[2])), input];\n\n    var _match11 = match(input, /^\\s*([a-zA-Z0-9\\-_]+)/);\n\n    var _match12 = _slicedToArray(_match11, 2);\n\n    m = _match12[0];\n    input = _match12[1];\n    if (m) return [_objectSpread({}, state, _defineProperty({}, m[1], true)), input];\n\n    var _match13 = match(input, /^\\s+/);\n\n    var _match14 = _slicedToArray(_match13, 2);\n\n    m = _match14[0];\n    input = _match14[1];\n    if (m) return [state, input]; // Terminate the loop\n\n    return [state, ''];\n  });\n}\n/**\n * Matches a string to a regexp. Returns a tuple of the result and the rest.\n * @private\n *\n * @example\n *      match('abc123456', /^abc/)\n *      => [ ['abc'], '123456' ]\n *\n *      match('abc123456', /^XYZ/)\n *      => [ null, 'abc123456' ]\n */\n\n\nfunction match(str, re) {\n  var m = str.match(re);\n\n  if (m) {\n    var rest = str.substr(m[0].length);\n    return [m, rest];\n  } else {\n    return [null, str];\n  }\n}\n/**\n * Keep running `fn(state, input) => [state, input]` until input is exhausted.\n * @private\n */\n\n\nfunction reduce(input, state, fn) {\n  if (!input || input.length === 0) return state;\n\n  var _fn = fn(state, input);\n\n  var _fn2 = _slicedToArray(_fn, 2);\n\n  state = _fn2[0];\n  input = _fn2[1];\n  return reduce(input, state, fn);\n}\n/**\n * Adds a class name to properties.\n * @private\n */\n\n\nfunction addClassName(state, className) {\n  return _objectSpread({}, state, {\n    className: _toConsumableArray(state.className || []).concat([className])\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.wrapH2 = wrapH2;\nexports.wrapH3 = wrapH3;\nObject.defineProperty(exports, \"wrapHeadings\", {\n  enumerable: true,\n  get: function get() {\n    return _wrap_headings.default;\n  }\n});\n\nvar _hast_helpers = require(\"./hast_helpers\");\n\nvar _wrap_headings = _interopRequireDefault(require(\"./wrap_headings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*::\n  export type WrapOptions = {\n    sectionClass: string[],\n    bodyClass: string[]\n  }\n\n  export type Options = {\n    h2: WrapOptions,\n    h3: WrapOptions\n  }\n*/\n\n/** Default settings for `wrapH2()` and `wrapH3()`.\n */\nvar DEFAULTS = {\n  h2: {\n    sectionTag: 'div',\n    sectionClass: ['h2-section'],\n    bodyTag: 'div',\n    bodyClass: ['body', 'h3-section-list']\n  },\n  h3: {\n    sectionTag: 'div',\n    sectionClass: ['h3-section'],\n    bodyTag: 'div',\n    bodyClass: ['body']\n  }\n  /**\n   * Wrap everything with the default settings used by devhints.io.\n   *\n   * @example\n   * This wraps with default settings:\n   *\n   *     hast = wrap(hast)\n   *\n   * @example\n   * You can also specify class names like so:\n   *\n   *     hast = wrap(hast, {\n   *       h2: {\n   *         sectionClass: ['h2-section'],\n   *         bodyClass: ['body']\n   *       },\n   *       h3: {\n   *         sectionClass: ['h3-section'],\n   *         bodyClass: ['body']\n   *       }\n   *     })\n   */\n\n};\n\nfunction _default(root)\n/*: Options */\n{\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  root = wrapH2(root, options.h2);\n  root = (0, _hast_helpers.updateChildren)(root, function (children) {\n    return (children || []).map(function (section) {\n      return (0, _hast_helpers.updateLastChild)(section, function (body) {\n        return wrapH3(body, options.h3);\n      });\n    });\n  });\n  return root;\n}\n/**\n * Wrap H2 headings.\n */\n\n\nfunction wrapH2(root, options\n/*: WrapOptions */\n) {\n  var _DEFAULTS$h2$options = _objectSpread({}, DEFAULTS.h2, options),\n      sectionClass = _DEFAULTS$h2$options.sectionClass,\n      bodyClass = _DEFAULTS$h2$options.bodyClass;\n\n  return (0, _wrap_headings.default)(root, _objectSpread({}, options, {\n    tagName: 'h2',\n    sectionClass: (0, _hast_helpers.toClassList)(sectionClass),\n    bodyClass: (0, _hast_helpers.toClassList)(bodyClass)\n  }));\n}\n/**\n * Wraps H3 headings.\n */\n\n\nfunction wrapH3(root, options\n/*: WrapOptions */\n) {\n  var _DEFAULTS$h3$options = _objectSpread({}, DEFAULTS.h3, options),\n      sectionClass = _DEFAULTS$h3$options.sectionClass,\n      bodyClass = _DEFAULTS$h3$options.bodyClass;\n\n  return (0, _wrap_headings.default)(root, _objectSpread({}, options, {\n    tagName: 'h3',\n    sectionClass: (0, _hast_helpers.toClassList)(sectionClass),\n    bodyClass: (0, _hast_helpers.toClassList)(bodyClass)\n  }));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = wrapHeadings;\n\nvar _hast_helpers = require(\"./hast_helpers\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Wraps headings.\n *\n *     hast = wrapHeadings(hast, {\n *       tagName: 'h2',\n *       sectionClass: ['h2-section'],\n *       bodyClass: ['body']\n *     })\n */\nfunction wrapHeadings(root) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$tagName = _ref.tagName,\n      tagName = _ref$tagName === void 0 ? 'h2' : _ref$tagName,\n      _ref$sectionTag = _ref.sectionTag,\n      sectionTag = _ref$sectionTag === void 0 ? 'div' : _ref$sectionTag,\n      _ref$sectionClass = _ref.sectionClass,\n      sectionClass = _ref$sectionClass === void 0 ? ['h2-section'] : _ref$sectionClass,\n      _ref$bodyTag = _ref.bodyTag,\n      bodyTag = _ref$bodyTag === void 0 ? 'div' : _ref$bodyTag,\n      _ref$bodyClass = _ref.bodyClass,\n      bodyClass = _ref$bodyClass === void 0 ? ['body'] : _ref$bodyClass;\n\n  var children = root.children.reduce(function (list, node) {\n    if (node.tagName === tagName) {\n      // H2 heading - create a new `.h2-section`.\n      var extraClass = (0, _hast_helpers.getClassName)(node);\n      var body = wrapper(bodyTag, _toConsumableArray(bodyClass).concat([extraClass]), []);\n      return _toConsumableArray(list).concat([wrapper(sectionTag, _toConsumableArray(sectionClass).concat([extraClass]), [node, body])]);\n    } else if (list.length) {\n      // Not prelude\n      return (0, _hast_helpers.updateLast)(list, function (last) {\n        return _objectSpread({}, last, {\n          children: (0, _hast_helpers.updateLast)(last.children, function (body) {\n            return (0, _hast_helpers.appendChild)(body, node);\n          })\n        });\n      });\n    } else {\n      // Prelude\n      var _body = wrapper(bodyTag, bodyClass, [node]);\n\n      return [wrapper(sectionTag, sectionClass, [_body])];\n    }\n  }, []);\n  return _objectSpread({}, root, {\n    children: children\n  });\n}\n/**\n * Creates a wrapper element.\n */\n\n\nfunction wrapper(tag, className, children) {\n  return {\n    type: 'element',\n    tagName: tag,\n    properties: {\n      className: className\n    },\n    children: children\n  };\n}","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n"],"sourceRoot":""}