{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PostTitleSnip.js","webpack:///./src/components/PostContent.js","webpack:///./src/components/BlogPostTitle.js","webpack:///./src/components/BlogPostContent.js","webpack:///./src/components/NextBlock.js","webpack:///./src/components/H2Section.js","webpack:///./src/components/H3Section.js","webpack:///./src/components/MainHeading.js"],"names":["_gatsby","__webpack_require__","_react","_interopRequireDefault","_reactHelmet","_BlogPostContent","_rehypeDecorate","_rehypeSectionizeHeadings","_Layout","_MainHeading","render","ast","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","_post$frontmatter","frontmatter","date","slug","fields","sections","htmlAst","default","h2","sectionTag","h3","children","titleBody","createElement","location","meta","name","content","MainHeading","body","slice","Link","to","rel","React","Component","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Fragment","lang","_","_reactOverdrive","_PostTitleSnipScoped","varClass","variant","className","__hash","id","_style","styleId","css","_rehypeReact","_NextBlock","_H2Section","_H3Section","toReact","RehypeReact","components","next-block","NextBlock","h2-section","H2Section","h3-section","H3Section","Compiler","map","_BlogPostTitleScoped","_PostContent","_BlogPostTitle","_NextBlockScoped","_reactWaypoint","_H2SectionScoped","state","entered","onEnter","_this","setState","onLeave","join","topOffset","bottomOffset","_H3SectionGlobal","_MainHeadingScoped","_PostTitleSnip","PostTitleSnip"],"mappings":"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","file":"component---src-templates-blog-post-js-46fa14e367024dbf77e7.js","sourcesContent":["// @flow\n\nimport { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport BlogPostContent from '../components/BlogPostContent'\nimport BlogPostTitle from '../components/BlogPostTitle'\nimport decorate from 'rehype-decorate'\nimport sectionize from 'rehype-sectionize-headings'\nimport Layout from '../components/Layout'\nimport { MainHeading } from '../components/MainHeading'\nimport { type PageNode, type HastNode } from '../types'\n\nexport type Props = {\n  location: string,\n  pageContext: {\n    previous: PageNode,\n    next: PageNode\n  },\n  data: {\n    markdownRemark: PageNode & {\n      htmlAst: HastNode\n    },\n    site: { siteMetadata: { title: string } }\n  }\n}\n\nclass BlogPostTemplate extends React.Component<Props> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n    const { title, date } = post.frontmatter\n    const { slug } = post.fields\n    const htmlAst = transformHtmlAst(post.htmlAst)\n    const sections = htmlAst.children || []\n\n    // The first part of the excerpt that will be promoted to the title card\n    const titleBody = (sections[0] && sections[0].children) || []\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${title} | ${siteTitle}`}\n        />\n        <MainHeading {...{ title, slug }} />\n        <BlogPostContent\n          {...{ title, date, titleBody, body: sections.slice(1) }}\n        />\n\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </Layout>\n    )\n  }\n}\n\nfunction transformHtmlAst(ast: HastNode): HastNode {\n  ast = decorate(ast)\n  ast = sectionize(ast, {\n    h2: { sectionTag: 'h2-section' },\n    h3: { sectionTag: 'h3-section' }\n  })\n  return ast\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={title}\n            meta={[\n              { name: 'description', content: 'Sample' },\n              { name: 'keywords', content: 'sample, something' },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","// @flow\n\nimport Overdrive from 'react-overdrive'\nimport React from 'react'\nimport style from './PostTitleSnip.scoped.css'\n\nexport type Props = {\n  slug: string,\n  title: string,\n  variant?: '-small' | null\n}\n\nexport const PostTitleSnip = ({ slug, title, variant }: Props) => {\n  const varClass = variant || ''\n\n  return (\n    <span className={`post-title-snip-c ${varClass}`}>\n      <Overdrive id={`post-${slug}`}>\n        <strong className={`post-title-snip ${varClass}`}>{title}</strong>\n      </Overdrive>\n\n      <style jsx>{style}</style>\n    </span>\n  )\n}\n","/*\n * PostContent\n * ===========\n *\n * Renders a Remark HAST as React nodes.\n *\n * @flow\n */\n\nimport * as React from 'react'\nimport RehypeReact from 'rehype-react'\nimport NextBlock from './NextBlock'\nimport H2Section from './H2Section'\nimport H3Section from './H3Section'\nimport { type HastNode } from '../types'\n\nexport type Props = {\n  body: HastNode[],\n}\n\nconst PostContent = ({ body }: Props): React.Node => {\n  const toReact = new RehypeReact({\n    createElement: React.createElement,\n    components: {\n      'next-block': NextBlock,\n      'h2-section': H2Section,\n      'h3-section': H3Section,\n    },\n  }).Compiler\n\n  return body.map(toReact)\n}\n\nexport default PostContent\n","import React from 'react'\nimport style from './BlogPostTitle.scoped.css'\nimport PostContent from './PostContent'\n\n// For MarkdownBody\nimport './BlogPostContent.css'\n\nconst BlogPostTitle = ({ title, date, body }) => {\n  return (\n    <div className=\"blog-post-title\">\n      <h1>\n        {title} <span className=\"blinker\" />\n      </h1>\n      <p className=\"byline\">Written by Rico Sta. Cruz / {date}</p>\n\n      {/* <hr /> */}\n      <div className=\"MarkdownBody\">\n        <PostContent body={body} />\n      </div>\n\n      <style jsx>{style}</style>\n    </div>\n  )\n}\n\nexport default BlogPostTitle\n","/*\n * BlogPostContent\n * ===============\n *\n * Blog post content\n *\n * @flow\n */\n\nimport React from 'react'\nimport PostContent from './PostContent'\nimport Overdrive from 'react-overdrive'\nimport './BlogPostContent.css'\nimport { type HastNode } from '../types'\nimport BlogPostTitle from './BlogPostTitle'\n\nexport type Props = {\n  body: HastNode[],\n  title: string,\n  date: string,\n  titleBody: HastNode[]\n}\n\n/**\n * Blog post content.\n *\n * @example\n *     <BlogPostContent htmlAst={htmlAst} />\n */\n\nconst BlogPostContent = ({ body, titleBody, title, date }: Props) => {\n  return (\n    <div className=\"blog-post-content\">\n      <BlogPostTitle {...{ title, date, body: titleBody }} />\n      <PostContent {...{ body }} />\n    </div>\n  )\n}\n\nexport default BlogPostContent\n","/*\n * NextBlock\n * =========\n *\n * The \"Next: ...\" block at the end of every h2 section.\n */\n\nimport React from 'react'\nimport style from './NextBlock.scoped.css'\n\nconst NextBlock = ({ title }) => {\n  return (\n    <blockquote className=\"next-block\">\n      <strong>Next:</strong> {title}\n      <style jsx>{style}</style>\n    </blockquote>\n  )\n}\n\nexport default NextBlock\n","import React from 'react'\nimport Waypoint from 'react-waypoint'\nimport style from './H2Section.scoped.css'\n\nclass H2Section extends React.Component {\n  state = {\n    entered: false\n  }\n\n  onEnter = () => {\n    this.setState({ entered: true })\n  }\n\n  onLeave = () => {\n    this.setState({ entered: false })\n  }\n\n  render() {\n    const className = [\n      this.props.className,\n      this.state.entered ? '-active' : '-inactive'\n    ].join(' ')\n\n    const { children } = this.props\n\n    return (\n      <Waypoint\n        onEnter={this.onEnter}\n        onLeave={this.onLeave}\n        topOffset=\"60%\"\n        bottomOffset=\"40%\"\n      >\n        <section className={className}>\n          {children}\n          <style jsx>{style}</style>\n        </section>\n      </Waypoint>\n    )\n  }\n}\n\nexport default H2Section\n","import React from 'react'\nimport style from './H3Section.global.css'\n\nconst H3Section = ({ children, className }) => (\n  <section className={className}>\n    {children}\n    <style jsx>{style}</style>\n  </section>\n)\n\nexport default H3Section\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport Overdrive from 'react-overdrive'\nimport style from './MainHeading.scoped.css'\nimport { PostTitleSnip } from './PostTitleSnip'\n\nexport const MainHeading = ({ title, slug }) => {\n  return (\n    <div className=\"main-heading\">\n      <span className=\"left\">\n        <Link to=\"/\" className=\"brand-link\" />\n      </span>\n      <span className=\"right\">\n        <span className=\"prefix\">\n          <Link to=\"/\" className=\"home-link\">\n            TIL\n          </Link>\n          {' / '}\n        </span>\n        <PostTitleSnip {...{ slug, title }} variant=\"-small\" />\n      </span>\n\n      <style jsx>{style}</style>\n    </div>\n  )\n}\n"],"sourceRoot":""}