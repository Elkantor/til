{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/PostTitleSnip.js","webpack:///./src/components/PostContent.js","webpack:///./src/components/BlogPostTitle.js","webpack:///./src/components/BlogPostContent.js","webpack:///./src/components/NextBlock.js","webpack:///./src/components/H2Section.js","webpack:///./src/components/H3Section.js","webpack:///./src/components/MainHeading.js","webpack:///./src/components/BlogNav.js","webpack:///./src/components/PostPagination.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactHelmet","_BlogPostContent","_rehypeDecorate","_rehypeSectionizeHeadings","_Layout","_MainHeading","_BlogNav","_PostPagination","render","ast","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","_post$frontmatter","frontmatter","date","slug","fields","sections","htmlAst","default","h2","sectionTag","h3","children","titleBody","createElement","location","meta","name","content","MainHeading","BlogNav","body","slice","PostPagination","React","Component","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","_gatsby","_ref","Fragment","lang","_","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","_reactOverdrive","varClass","variant","className","id","_rehypeReact","_NextBlock","_H2Section","_H3Section","toReact","RehypeReact","components","next-block","NextBlock","h2-section","H2Section","h3-section","H3Section","Compiler","map","index","key","_PostContent","_BlogPostTitle","_reactWaypoint","_this","_React$Component","call","onEnter","setState","entered","console","log","onLeave","state","join","onPositionChange","args","topOffset","bottomOffset","_PostTitleSnip","Link","to","PostTitleSnip","rel"],"mappings":"gKAGAA,EAAAC,EAAAC,EAAA,IACAC,EAAAF,EAAAC,EAAA,MACAE,EAAAH,EAAAC,EAAA,MAEAG,GADAJ,EAAAC,EAAA,MACAD,EAAAC,EAAA,OACAI,EAAAL,EAAAC,EAAA,MACAK,EAAAN,EAAAC,EAAA,MACAM,EAAAN,EAAA,KAEAO,EAAAP,EAAA,KACAQ,EAAAR,EAAA,8GAiBES,kBACE,IAgCsBC,EAhChBC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAC9CC,EAAkBT,EAAKU,QAHtBC,EAIoBV,KAAKC,MAAMU,YAA9BC,EAJDF,EAICE,SAAUC,EAJXH,EAIWG,KAJXC,EAKiBf,EAAKgB,YAArBR,EALDO,EAKCP,MAAOS,EALRF,EAKQE,KACPC,EAASlB,EAAKmB,OAAdD,KAEFE,GAyBgBrB,EA1BWC,EAAKqB,QA2BxCtB,GAAM,EAAAP,EAAA8B,SAASvB,GACfA,GAAM,EAAAN,EAAA6B,SAAWvB,EAAK,CACpBwB,GAAI,CAAEC,WAAY,cAClBC,GAAI,CAAED,WAAY,iBA7BOE,UAAY,GAG/BC,EAAaP,EAAS,IAAMA,EAAS,GAAGM,UAAa,GAE3D,OACEvC,EAAAmC,QAAAM,cAAClC,EAAA4B,QAAD,CAAQO,SAAU5B,KAAKC,MAAM2B,UAC3B1C,EAAAmC,QAAAM,cAACtC,EAAAgC,QAAD,CACEQ,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASvB,IACvCD,MAAUA,EAAL,MAAgBH,IAEvBlB,EAAAmC,QAAAM,cAACjC,EAAAsC,YAAgB,CAAEzB,QAAOU,SAC1B/B,EAAAmC,QAAAM,cAAA,WACEzC,EAAAmC,QAAAM,cAAChC,EAAAsC,QAAY,CAAE1B,QAAOU,SACtB/B,EAAAmC,QAAAM,cAACrC,EAAA+B,QACK,CAAEd,QAAOS,OAAMU,YAAWQ,KAAMf,EAASgB,MAAM,MAIvDjD,EAAAmC,QAAAM,cAAC/B,EAAAwC,eAAmB,CAAExB,WAAUC,cA5BTwB,UAAMC,mCA6Cf,kGCpCtB,WACE,MAAM,IAAIC,MACR,2XAxCJ,IAAArD,EAAAC,EAAAC,EAAA,IACAoD,EAAArD,EAAAC,EAAA,IACAqD,EAAAC,EAAAtD,EAAA,mIAOA,IAAAuD,EAAAxD,EAAAC,EAAA,+BACA,IAAAwD,EAAAzD,EAAAC,EAAA,2BAEA,IAAMyD,EAAqBR,UAAMS,cAAc,2BAE/C,IAAMC,EAAc,SAAA9C,GAAK,OACvBf,EAAAmC,QAAAM,cAACkB,EAAmBG,SAApB,KACG,SAAAC,GACC,OACEhD,EAAMC,MACL+C,EAAgBhD,EAAMiD,QAAUD,EAAgBhD,EAAMiD,OAAOhD,MAEtDD,EAAMJ,QAAUI,EAAMwB,UAC5BxB,EAAMC,KAAOD,EAAMC,KAAKA,KAAO+C,EAAgBhD,EAAMiD,OAAOhD,MAGvDhB,EAAAmC,QAAAM,cAAA,uDAMfoB,EAAYI,UAAY,CACtBjD,KAAMkD,UAAUC,OAChBH,MAAOE,UAAUE,OAAOC,WACxB1D,OAAQuD,UAAUI,KAClB/B,SAAU2B,UAAUI,oGCnCtBtE,EAAAC,EAAAC,EAAA,IACAC,EAAAF,EAAAC,EAAA,MACAqE,EAAArE,EAAA,KAEAA,EAAA,KACAA,EAAA,KAEA,MAAe,SAAAsE,GAAA,IAAGjC,EAAHiC,EAAGjC,SAAH,OACbvC,EAAAmC,QAAAM,cAAC8B,EAAAV,YAAD,CACEG,MAAK,YASLrD,OAAQ,SAAAK,GAAQ,IACNK,EAAUL,EAAKG,KAAKC,aAApBC,MAER,OACErB,EAAAmC,QAAAM,cAAAzC,EAAAmC,QAAAsC,SAAA,KACEzE,EAAAmC,QAAAM,cAACtC,EAAAgC,QAAD,CACEd,MAAOA,EACPsB,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAG/B7C,EAAAmC,QAAAM,cAAA,QAAMiC,KAAK,QAEb1E,EAAAmC,QAAAM,cAAA,WAAMF,KAxBdvB,KAAA2D,EAAAxC,kHCRF,IAAsByC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEzC,SAAYyC,sFCA/C,IAAA5E,EAAAC,EAAAC,EAAA,IACAoD,EAAArD,EAAAC,EAAA,IAEA8E,EAAA/E,EAAAC,EAAA,KACA+E,EAAAhF,EAAAC,EAAA,KAEMgF,EAAmB,SAAAV,GAAkB,IAAf9B,EAAe8B,EAAf9B,SACpByC,EAAgBC,UAAOC,4BAA4B3C,EAAS4C,UAClE,OAAOnC,UAAMV,cAAc8C,UAApBC,OAAAC,OAAA,CACL/C,WACAyC,iBACGA,EAAcO,QAIrBR,EAAiBjB,UAAY,CAC3BvB,SAAUwB,UAAUyB,MAAM,CACxBL,SAAUpB,UAAUE,OAAOC,aAC1BA,kBAGUa,wHCnBf,IAAAU,EAAA3F,EAAAC,EAAA,MACAF,EAAAC,EAAAC,EAAA,IACAA,EAAA,qBAQ6B,SAAAsE,GAAqC,IAAlCzC,EAAkCyC,EAAlCzC,KAAMV,EAA4BmD,EAA5BnD,MAC9BwE,EAD0DrB,EAArBsB,SACf,GAE5B,OACE9F,EAAAmC,QAAAM,cAAA,QAAMsD,UAAS,qBAAuBF,GACpC7F,EAAAmC,QAAAM,cAACmD,EAAAzD,QAAD,CAAW6D,GAAE,QAAUjE,GACrB/B,EAAAmC,QAAAM,cAAA,UAAQsD,UAAS,mBAAqBF,GAAaxE,kHCT3D,IAAA8B,EAAAK,EAAAtD,EAAA,IACA+F,EAAAhG,EAAAC,EAAA,MACAgG,EAAAjG,EAAAC,EAAA,MACAiG,EAAAlG,EAAAC,EAAA,MACAkG,EAAAnG,EAAAC,EAAA,QAOoB,SAAAsE,GAAiC,IAA9BxB,EAA8BwB,EAA9BxB,KACfqD,EAAU,IAAIC,UAAY,CAC9B7D,cAAeU,EAAMV,cACrB8D,WAAY,CACVC,aAAcC,UACdC,aAAcC,UACdC,aAAcC,aAEfC,SAEH,OAAO9D,EAAK+D,IAAI,SAACnG,EAAKoG,GACpB,OAAO7D,EAAAV,cAACU,EAAMsB,SAAP,CAAgBwC,IAAKD,GAAQX,EAAQzF,uHC/BhD,IAAAZ,EAAAC,EAAAC,EAAA,IACAgH,EAAAjH,EAAAC,EAAA,MACAA,EAAA,KACAA,EAAA,KAEA,MAAsB,SAAAsE,GAA2B,IAAxBnD,EAAwBmD,EAAxBnD,MAAOS,EAAiB0C,EAAjB1C,KAAMkB,EAAWwB,EAAXxB,KACpC,OACEhD,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,mBACb/F,EAAAmC,QAAAM,cAAA,UACGpB,EADH,IACUrB,EAAAmC,QAAAM,cAAA,QAAMsD,UAAU,aAE1B/F,EAAAmC,QAAAM,cAAA,KAAGsD,UAAU,UAAb,+BAAmDjE,GAGnD9B,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,gBACb/F,EAAAmC,QAAAM,cAACyE,EAAA/E,QAAD,CAAaa,KAAMA,iGCN3B,IAAAhD,EAAAC,EAAAC,EAAA,IACAgH,EAAAjH,EAAAC,EAAA,MACAD,EAAAC,EAAA,MACAA,EAAA,KAEA,IAAAiH,EAAAlH,EAAAC,EAAA,QAgBwB,SAAAsE,GAA6C,IAA1CxB,EAA0CwB,EAA1CxB,KAAMR,EAAoCgC,EAApChC,UAAWnB,EAAyBmD,EAAzBnD,MAAOS,EAAkB0C,EAAlB1C,KACjD,OACE9B,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,qBACb/F,EAAAmC,QAAAM,cAAC0E,EAAAhF,QAAkB,CAAEd,QAAOS,OAAMkB,KAAMR,IACxCxC,EAAAmC,QAAAM,cAACyE,EAAA/E,QAAgB,CAAEa,qGC3BzB,IAAAhD,EAAAC,EAAAC,EAAA,IACAA,EAAA,KAEA,MAAkB,SAAAsE,GAAe,IAAZnD,EAAYmD,EAAZnD,MACnB,OACErB,EAAAmC,QAAAM,cAAA,cAAYsD,UAAU,cACpB/F,EAAAmC,QAAAM,cAAA,uBADF,IAC0BpB,kICb9BrB,EAAAC,EAAAC,EAAA,IACAkH,EAAAnH,EAAAC,EAAA,MACAA,EAAA,uBAGE,SAAAyG,EAAY5F,GAAO,IAAAsG,EAAA,OACjBA,EAAAC,EAAAC,KAAAzG,KAAMC,IAAND,MAOF0G,QAAU,WACRH,EAAKI,SAAS,CAAEC,SAAS,IACzBC,QAAQC,IAAI,YAVKP,EAanBQ,QAAU,WACRR,EAAKI,SAAS,CAAEC,SAAS,IACzBC,QAAQC,IAAI,YAbZP,EAAKS,MAAQ,CACXJ,SAAS,GAEXC,QAAQC,IAAI,QALKP,uCAkBnB1G,kBACE,IAAMoF,EAAY,CAChBjF,KAAKC,MAAMgF,UACXjF,KAAKgH,MAAMJ,QAAU,UAAY,aACjCK,KAAK,KAECxF,EAAazB,KAAKC,MAAlBwB,SAER,OACEvC,EAAAmC,QAAAM,cAAC2E,EAAAjF,QAAD,CACEqF,QAAS1G,KAAK0G,QACdK,QAAS/G,KAAK+G,QACdG,iBAAkB,SAAAC,GAChBN,QAAQC,IAAI,mBAAoBK,IAElCC,UAAU,MACVC,aAAa,OAEbnI,EAAAmC,QAAAM,cAAA,WAASsD,UAAWA,GAAYxD,QArChBY,UAAMC,2HCJ9B,IAAApD,EAAAC,EAAAC,EAAA,IACAA,EAAA,KAEA,MAAkB,SAAAsE,GAA6B,IAA1BjC,EAA0BiC,EAA1BjC,SAAUwD,EAAgBvB,EAAhBuB,UAC7B,OAAO/F,EAAAmC,QAAAM,cAAA,WAASsD,UAAWA,GAAYxD,oJCJzC,IAAAgC,EAAArE,EAAA,KACAF,EAAAC,EAAAC,EAAA,IACAD,EAAAC,EAAA,MACAA,EAAA,KACA,IAAAkI,EAAAlI,EAAA,mBAE2B,SAAAsE,GAAqB,IAAlBnD,EAAkBmD,EAAlBnD,MAAOU,EAAWyC,EAAXzC,KACnC,OACE/B,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,gBACb/F,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,QACb/F,EAAAmC,QAAAM,cAAC8B,EAAA8D,KAAD,CAAMC,GAAG,IAAIvC,UAAU,eAEzB/F,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,SACb/F,EAAAmC,QAAAM,cAAA,QAAMsD,UAAU,SAChB/F,EAAAmC,QAAAM,cAAA,WACAzC,EAAAmC,QAAAM,cAAC2F,EAAAG,cAAD/C,OAAAC,OAAmB,CAAE1D,OAAMV,SAA3B,CAAoCyE,QAAQ,mHCfpD,IAAA9F,EAAAC,EAAAC,EAAA,IACAA,EAAA,KACAA,EAAA,eAEuB,SAAAsE,GAAqB,IAAlBnD,EAAkBmD,EAAlBnD,MAAkBmD,EAAXzC,KAC/B,OACE/B,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,YACb/F,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,QACb/F,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,OACb/F,EAAAmC,QAAAM,cAAA,qBACAzC,EAAAmC,QAAAM,cAAA,YAAOpB,kHCVjB,IAAArB,EAAAC,EAAAC,EAAA,IACAqE,EAAArE,EAAA,KACAA,EAAA,sBAE8B,SAAAsE,GAAwB,IAArB9C,EAAqB8C,EAArB9C,SAAUC,EAAW6C,EAAX7C,KACzC,OACE3B,EAAAmC,QAAAM,cAAA,OAAKsD,UAAU,mBACZrE,GACC1B,EAAAmC,QAAAM,cAAC8B,EAAA8D,KAAD,CAAMC,GAAI5G,EAASM,OAAOD,KAAMyG,IAAI,QAApC,KACK9G,EAASG,YAAYR,OAG3BM,GACC3B,EAAAmC,QAAAM,cAAC8B,EAAA8D,KAAD,CAAMC,GAAI3G,EAAKK,OAAOD,KAAMyG,IAAI,QAC7B7G,EAAKE,YAAYR,MADpB","file":"component---src-templates-blog-post-js-87ccdbff726727556b6a.js","sourcesContent":["// @flow\n\nimport { graphql } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport BlogPostContent from '../components/BlogPostContent'\nimport BlogPostTitle from '../components/BlogPostTitle'\nimport decorate from 'rehype-decorate'\nimport sectionize from 'rehype-sectionize-headings'\nimport Layout from '../components/Layout'\nimport { MainHeading } from '../components/MainHeading'\nimport { type PageNode, type HastNode } from '../types'\nimport { BlogNav } from '../components/BlogNav'\nimport { PostPagination } from '../components/PostPagination'\n\nexport type Props = {\n  location: string,\n  pageContext: {\n    previous: PageNode,\n    next: PageNode\n  },\n  data: {\n    markdownRemark: PageNode & {\n      htmlAst: HastNode\n    },\n    site: { siteMetadata: { title: string } }\n  }\n}\n\nclass BlogPostTemplate extends React.Component<Props> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n    const { title, date } = post.frontmatter\n    const { slug } = post.fields\n    const htmlAst = transformHtmlAst(post.htmlAst)\n    const sections = htmlAst.children || []\n\n    // The first part of the excerpt that will be promoted to the title card\n    const titleBody = (sections[0] && sections[0].children) || []\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${title} | ${siteTitle}`}\n        />\n        <MainHeading {...{ title, slug }} />\n        <div>\n          <BlogNav {...{ title, slug }} />\n          <BlogPostContent\n            {...{ title, date, titleBody, body: sections.slice(1) }}\n          />\n        </div>\n\n        <PostPagination {...{ previous, next }} />\n      </Layout>\n    )\n  }\n}\n\nfunction transformHtmlAst(ast: HastNode): HastNode {\n  ast = decorate(ast)\n  ast = sectionize(ast, {\n    h2: { sectionTag: 'h2-section' },\n    h3: { sectionTag: 'h3-section' }\n  })\n  return ast\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={title}\n            meta={[\n              { name: 'description', content: 'Sample' },\n              { name: 'keywords', content: 'sample, something' },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\n\nimport Overdrive from 'react-overdrive'\nimport React from 'react'\nimport './PostTitleSnip.css'\n\nexport type Props = {\n  slug: string,\n  title: string,\n  variant?: '-small' | null\n}\n\nexport const PostTitleSnip = ({ slug, title, variant }: Props) => {\n  const varClass = variant || ''\n\n  return (\n    <span className={`post-title-snip-c ${varClass}`}>\n      <Overdrive id={`post-${slug}`}>\n        <strong className={`post-title-snip ${varClass}`}>{title}</strong>\n      </Overdrive>\n    </span>\n  )\n}\n","/*\n * PostContent\n * ===========\n *\n * Renders a Remark HAST as React nodes.\n *\n * @flow\n */\n\nimport * as React from 'react'\nimport RehypeReact from 'rehype-react'\nimport NextBlock from './NextBlock'\nimport H2Section from './H2Section'\nimport H3Section from './H3Section'\nimport { type HastNode } from '../types'\n\nexport type Props = {\n  body: HastNode[]\n}\n\nconst PostContent = ({ body }: Props): React.Node => {\n  const toReact = new RehypeReact({\n    createElement: React.createElement,\n    components: {\n      'next-block': NextBlock,\n      'h2-section': H2Section,\n      'h3-section': H3Section\n    }\n  }).Compiler\n\n  return body.map((ast, index) => {\n    return <React.Fragment key={index}>{toReact(ast)}</React.Fragment>\n  })\n}\n\nexport default PostContent\n","import React from 'react'\nimport PostContent from './PostContent'\nimport './BlogPostTitle.css'\nimport './BlogPostContent.css'\n\nconst BlogPostTitle = ({ title, date, body }) => {\n  return (\n    <div className=\"blog-post-title\">\n      <h1>\n        {title} <span className=\"blinker\" />\n      </h1>\n      <p className=\"byline\">Written by Rico Sta. Cruz / {date}</p>\n\n      {/* <hr /> */}\n      <div className=\"MarkdownBody\">\n        <PostContent body={body} />\n      </div>\n    </div>\n  )\n}\n\nexport default BlogPostTitle\n","/*\n * BlogPostContent\n * ===============\n *\n * Blog post content\n *\n * @flow\n */\n\nimport React from 'react'\nimport PostContent from './PostContent'\nimport Overdrive from 'react-overdrive'\nimport './BlogPostContent.css'\nimport { type HastNode } from '../types'\nimport BlogPostTitle from './BlogPostTitle'\n\nexport type Props = {\n  body: HastNode[],\n  title: string,\n  date: string,\n  titleBody: HastNode[]\n}\n\n/**\n * Blog post content.\n *\n * @example\n *     <BlogPostContent htmlAst={htmlAst} />\n */\n\nconst BlogPostContent = ({ body, titleBody, title, date }: Props) => {\n  return (\n    <div className=\"blog-post-content\">\n      <BlogPostTitle {...{ title, date, body: titleBody }} />\n      <PostContent {...{ body }} />\n    </div>\n  )\n}\n\nexport default BlogPostContent\n","/*\n * NextBlock\n * =========\n *\n * The \"Next: ...\" block at the end of every h2 section.\n */\n\nimport React from 'react'\nimport './NextBlock.css'\n\nconst NextBlock = ({ title }) => {\n  return (\n    <blockquote className=\"next-block\">\n      <strong>Next:</strong> {title}\n    </blockquote>\n  )\n}\n\nexport default NextBlock\n","import React from 'react'\nimport Waypoint from 'react-waypoint'\nimport './H2Section.css'\n\nclass H2Section extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      entered: false\n    }\n    console.log('ctor')\n  }\n\n  onEnter = () => {\n    this.setState({ entered: true })\n    console.log('onEnter')\n  }\n\n  onLeave = () => {\n    this.setState({ entered: false })\n    console.log('onLeave')\n  }\n\n  render() {\n    const className = [\n      this.props.className,\n      this.state.entered ? '-active' : '-inactive'\n    ].join(' ')\n\n    const { children } = this.props\n\n    return (\n      <Waypoint\n        onEnter={this.onEnter}\n        onLeave={this.onLeave}\n        onPositionChange={args => {\n          console.log('onPositionChange', args)\n        }}\n        topOffset=\"60%\"\n        bottomOffset=\"30%\"\n      >\n        <section className={className}>{children}</section>\n      </Waypoint>\n    )\n  }\n}\n\nexport default H2Section\n","import React from 'react'\nimport './H3Section.css'\n\nconst H3Section = ({ children, className }) => {\n  return <section className={className}>{children}</section>\n}\n\nexport default H3Section\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport Overdrive from 'react-overdrive'\nimport './MainHeading.css'\nimport { PostTitleSnip } from './PostTitleSnip'\n\nexport const MainHeading = ({ title, slug }) => {\n  return (\n    <div className=\"main-heading\">\n      <div className=\"left\">\n        <Link to=\"/\" className=\"brandlink\" />\n      </div>\n      <div className=\"right\">\n        <span className=\"line\" />\n        <br />\n        <PostTitleSnip {...{ slug, title }} variant=\"-small\" />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './BlogNav.css'\n\nexport const BlogNav = ({ title, slug }) => {\n  return (\n    <div className=\"blog-nav\">\n      <div className=\"area\">\n        <div className=\"bar\">\n          <strong>TIL</strong>\n          <span>{title}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './PostPagination.css'\n\nexport const PostPagination = ({ previous, next }) => {\n  return (\n    <div className=\"post-pagination\">\n      {previous && (\n        <Link to={previous.fields.slug} rel=\"prev\">\n          ← {previous.frontmatter.title}\n        </Link>\n      )}\n      {next && (\n        <Link to={next.fields.slug} rel=\"next\">\n          {next.frontmatter.title} →\n        </Link>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}