{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/PostTitleSnip.js","webpack:///./src/components/PostContent.js","webpack:///./src/components/CardWaypoint.js","webpack:///./src/components/BlogPostContent.js","webpack:///./src/components/NextBlock.js","webpack:///./src/components/H2Section.js","webpack:///./src/components/H3Section.js","webpack:///./src/components/BlogPostTitle.js","webpack:///./src/components/MainHeading.js","webpack:///./src/components/BlogNav.js","webpack:///./src/components/PostPagination.js","webpack:///./src/components/ColophonSection.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactHelmet","_BlogPostContent","_rehypeDecorate","_rehypeSectionizeHeadings","_Layout","_MainHeading","_BlogNav","_PostPagination","_ColophonSection","render","ast","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","_post$frontmatter","frontmatter","date","slug","fields","sections","htmlAst","default","h2","sectionTag","h3","children","titleBody","createElement","location","meta","name","content","MainHeading","BlogNav","body","slice","PostPagination","ColophonSection","React","Component","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","_gatsby","_ref","Fragment","lang","_","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","_reactOverdrive","varClass","variant","className","id","_rehypeReact","_NextBlock","_H2Section","_H3Section","toReact","RehypeReact","components","next-block","NextBlock","h2-section","H2Section","h3-section","H3Section","Compiler","map","index","key","_reactWaypoint","CardWaypoint","_this","_React$Component","call","onEnter","setState","entered","dirty","onLeave","state","componentDidMount","topOffset","bottomOffset","_PostContent","_BlogPostTitle","_CardWaypoint","_ref2","Array","isArray","join","sectionClass","_PostTitleSnip","Link","to","PostTitleSnip","rel"],"mappings":"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","file":"component---src-templates-blog-post-js-3327ffdf3cf87215dcfb.js","sourcesContent":["// @flow\n\nimport { graphql } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport BlogPostContent from '../components/BlogPostContent'\nimport decorate from 'rehype-decorate'\nimport sectionize from 'rehype-sectionize-headings'\nimport Layout from '../components/Layout'\nimport { MainHeading } from '../components/MainHeading'\nimport { type PageNode, type HastNode } from '../types'\nimport { BlogNav } from '../components/BlogNav'\nimport { PostPagination } from '../components/PostPagination'\nimport { ColophonSection } from '../components/ColophonSection'\n\nexport type Props = {\n  location: string,\n  pageContext: {\n    previous: PageNode,\n    next: PageNode\n  },\n  data: {\n    markdownRemark: PageNode & {\n      htmlAst: HastNode\n    },\n    site: { siteMetadata: { title: string } }\n  }\n}\n\nclass BlogPostTemplate extends React.Component<Props> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n    const { title, date } = post.frontmatter\n    const { slug } = post.fields\n    const htmlAst = transformHtmlAst(post.htmlAst)\n    const sections = htmlAst.children || []\n\n    // The first part of the excerpt that will be promoted to the title card\n    const titleBody = (sections[0] && sections[0].children) || []\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${title} | ${siteTitle}`}\n        />\n        <MainHeading {...{ title, slug }} />\n        <div>\n          <BlogNav {...{ title, slug }} />\n          <BlogPostContent\n            {...{ title, date, titleBody, body: sections.slice(1) }}\n          />\n        </div>\n\n        <PostPagination {...{ previous, next }} />\n        <ColophonSection />\n      </Layout>\n    )\n  }\n}\n\nfunction transformHtmlAst(ast: HastNode): HastNode {\n  ast = decorate(ast)\n  ast = sectionize(ast, {\n    h2: { sectionTag: 'h2-section' },\n    h3: { sectionTag: 'h3-section' }\n  })\n  return ast\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={title}\n            meta={[\n              { name: 'description', content: 'Sample' },\n              { name: 'keywords', content: 'sample, something' },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\n\nimport Overdrive from 'react-overdrive'\nimport React from 'react'\nimport './PostTitleSnip.css'\n\nexport type Props = {\n  slug: string,\n  title: string,\n  variant?: '-small' | null\n}\n\nexport const PostTitleSnip = ({ slug, title, variant }: Props) => {\n  const varClass = variant || ''\n\n  return (\n    <span className={`post-title-snip-c ${varClass}`}>\n      <Overdrive id={`post-${slug}`}>\n        <strong className={`post-title-snip ${varClass}`}>{title}</strong>\n      </Overdrive>\n    </span>\n  )\n}\n","/*\n * PostContent\n * ===========\n *\n * Renders a Remark HAST as React nodes.\n *\n * @flow\n */\n\nimport * as React from 'react'\nimport RehypeReact from 'rehype-react'\nimport NextBlock from './NextBlock'\nimport H2Section from './H2Section'\nimport H3Section from './H3Section'\nimport { type HastNode } from '../types'\n\nexport type Props = {\n  body: HastNode[]\n}\n\nconst PostContent = ({ body }: Props): React.Node => {\n  const toReact = new RehypeReact({\n    createElement: React.createElement,\n    components: {\n      'next-block': NextBlock,\n      'h2-section': H2Section,\n      'h3-section': H3Section\n    }\n  }).Compiler\n\n  return body.map((ast, index) => {\n    return <React.Fragment key={index}>{toReact(ast)}</React.Fragment>\n  })\n}\n\nexport default PostContent\n","// @flow\n\nimport * as React from 'react'\nimport Waypoint from 'react-waypoint'\n\nexport type State = {\n  entered: boolean,\n  dirty: boolean\n}\n\nexport type Props = {\n  children: State => React.Node\n}\n\nclass CardWaypoint extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = { entered: true, dirty: false }\n  }\n\n  componentDidMount() {\n    this.setState(\n      (state: State): State => {\n        if (state.dirty) return state\n        return { entered: false, dirty: true }\n      }\n    )\n  }\n\n  onEnter = () => {\n    this.setState({ entered: true, dirty: true })\n  }\n\n  onLeave = () => {\n    this.setState({ entered: false, dirty: true })\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <Waypoint\n        onEnter={this.onEnter}\n        onLeave={this.onLeave}\n        topOffset=\"60%\"\n        bottomOffset=\"30%\"\n      >\n        <span>{children(this.state || {})}</span>\n      </Waypoint>\n    )\n  }\n}\n\nexport default CardWaypoint\n","/*\n * BlogPostContent\n * ===============\n *\n * Blog post content\n *\n * @flow\n */\n\nimport React from 'react'\nimport PostContent from './PostContent'\nimport './BlogPostContent.css'\nimport { type HastNode } from '../types'\nimport BlogPostTitle from './BlogPostTitle'\n\nexport type Props = {\n  body: HastNode[],\n  title: string,\n  date: string,\n  titleBody: HastNode[]\n}\n\n/**\n * Blog post content.\n *\n * @example\n *     <BlogPostContent htmlAst={htmlAst} />\n */\n\nconst BlogPostContent = ({ body, titleBody, title, date }: Props) => {\n  return (\n    <div className=\"blog-post-content\">\n      <BlogPostTitle {...{ title, date, body: titleBody }} />\n      <PostContent {...{ body }} />\n    </div>\n  )\n}\n\nexport default BlogPostContent\n","/*\n * NextBlock\n * =========\n *\n * The \"Next: ...\" block at the end of every h2 section.\n */\n\nimport React from 'react'\nimport './NextBlock.css'\n\nconst NextBlock = ({ title }) => {\n  return (\n    <blockquote className=\"next-block\">\n      <strong>Next:</strong> {title}\n    </blockquote>\n  )\n}\n\nexport default NextBlock\n","import React from 'react'\nimport CardWaypoint from './CardWaypoint'\nimport './H2Section.css'\n\nconst H2Section = ({ children, className }) => {\n  return (\n    <CardWaypoint>\n      {({ entered }) => {\n        if (Array.isArray(className)) className = className.join(' ')\n        const sectionClass = [\n          className,\n          entered ? '-active' : '-inactive'\n        ].join(' ')\n\n        return <section className={sectionClass}>{children}</section>\n      }}\n    </CardWaypoint>\n  )\n}\n\nexport default H2Section\n","import React from 'react'\nimport './H3Section.css'\n\nconst H3Section = ({ children, className }) => {\n  return <section className={className}>{children}</section>\n}\n\nexport default H3Section\n","import React from 'react'\nimport PostContent from './PostContent'\nimport CardWaypoint from './CardWaypoint'\nimport './BlogPostTitle.css'\nimport './BlogPostContent.css'\n\nconst BlogPostTitle = ({ title, date, body }) => {\n  return (\n    <CardWaypoint>\n      {({ entered }) => {\n        return (\n          <div\n            className={`blog-post-title ${entered ? '-active' : '-inactive'}`}\n          >\n            <h1>\n              {title} <span className=\"blinker\" />\n            </h1>\n            <p className=\"byline\">Written by Rico Sta. Cruz / {date}</p>\n\n            {/* <hr /> */}\n            <div className=\"MarkdownBody\">\n              <PostContent body={body} />\n            </div>\n          </div>\n        )\n      }}\n    </CardWaypoint>\n  )\n}\n\nexport default BlogPostTitle\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport './MainHeading.css'\nimport { PostTitleSnip } from './PostTitleSnip'\n\nexport const MainHeading = ({ title, slug }) => {\n  return (\n    <div className=\"main-heading\">\n      <div className=\"left\">\n        <Link to=\"/\" className=\"brandlink\" />\n      </div>\n      <div className=\"right\">\n        <span className=\"line\" />\n        <br />\n        <PostTitleSnip {...{ slug, title }} variant=\"-small\" />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './BlogNav.css'\n\nexport const BlogNav = ({ title }) => {\n  return (\n    <div className=\"blog-nav\">\n      <div className=\"area\">\n        <div className=\"bar\">\n          <strong>TIL</strong>\n          <span>{title}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './PostPagination.css'\n\nexport const PostPagination = ({ previous, next }) => {\n  return (\n    <div className=\"post-pagination\">\n      {previous && (\n        <Link to={previous.fields.slug} rel=\"prev\">\n          ← {previous.frontmatter.title}\n        </Link>\n      )}\n      {next && (\n        <Link to={next.fields.slug} rel=\"next\">\n          {next.frontmatter.title} →\n        </Link>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './ColophonSection.css'\n\nexport const ColophonSection = () => {\n  return (\n    <div className=\"colophon-section\">\n      <Link to=\"/\">←</Link>\n    </div>\n  )\n}\n"],"sourceRoot":""}