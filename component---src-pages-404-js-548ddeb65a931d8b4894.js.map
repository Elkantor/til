{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_Layout","default","createElement","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","_reactHelmet","_gatsby","_ref","_data$site$siteMetada","site","siteMetadata","fullTitle","shortDescription","Fragment","title","meta","name","content","lang","_","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"sIAAA,IAAAA,EAAAC,EAAAC,EAAA,IACAC,EAAAF,EAAAC,EAAA,QAEqB,kBACnBF,EAAAI,QAAAC,cAACF,EAAAC,QAAD,KACEJ,EAAAI,QAAAC,cAAA,uBACAL,EAAAI,QAAAC,cAAA,uKCgCJ,WACE,MAAM,IAAIC,MACR,2XAxCJ,IAAAN,EAAAC,EAAAC,EAAA,IACAK,EAAAN,EAAAC,EAAA,IACAM,EAAAC,EAAAP,EAAA,mIAOA,IAAAQ,EAAAT,EAAAC,EAAA,+BACA,IAAAS,EAAAV,EAAAC,EAAA,2BAEA,IAAMU,EAAqBC,UAAMC,cAAc,2BAE/C,IAAMC,EAAc,SAAAC,GAAK,OACvBhB,EAAAI,QAAAC,cAACO,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDnB,EAAAI,QAAAC,cAAA,uDAMfU,EAAYQ,UAAY,CACtBJ,KAAMK,UAAUC,OAChBL,MAAOI,UAAUE,OAAOC,WACxBN,OAAQG,UAAUI,KAClBN,SAAUE,UAAUI,oGCnCtB5B,EAAAC,EAAAC,EAAA,IACA2B,EAAA5B,EAAAC,EAAA,MACA4B,EAAA5B,EAAA,KAEAA,EAAA,KACAA,EAAA,KAEA,MAAe,SAAA6B,GAAA,IAAGT,EAAHS,EAAGT,SAAH,OACbtB,EAAAI,QAAAC,cAACyB,EAAAf,YAAD,CACEK,MAAK,aAWLC,OAAQ,SAAAF,GAAQ,IAAAa,EAC0Bb,EAAKc,KAAKC,aAA1CC,EADMH,EACNG,UAAWC,EADLJ,EACKI,iBAEnB,OACEpC,EAAAI,QAAAC,cAAAL,EAAAI,QAAAiC,SAAA,KACErC,EAAAI,QAAAC,cAACwB,EAAAzB,QAAD,CACEkC,MAAOH,EACPI,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASL,GAChC,CAAEI,KAAM,SAAUC,QAAS,aAI7BzC,EAAAI,QAAAC,cAAA,QAAMqC,KAAK,QAEb1C,EAAAI,QAAAC,cAAA,WAAMiB,KA3BdH,KAAAwB,EAAAvC,oRCRF,IAAsBwC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAExC,SAAYwC,sFCA/C,IAAA5C,EAAAC,EAAAC,EAAA,IACAK,EAAAN,EAAAC,EAAA,IAEA8C,EAAA/C,EAAAC,EAAA,KACA+C,EAAAhD,EAAAC,EAAA,KAEMgD,EAAmB,SAAAnB,GAAkB,IAAfoB,EAAepB,EAAfoB,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO1C,UAAMR,cAAcmD,UAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB3B,UAAY,CAC3B4B,SAAU3B,UAAUoC,MAAM,CACxBL,SAAU/B,UAAUE,OAAOC,aAC1BA,kBAGUuB","file":"component---src-pages-404-js-548ddeb65a931d8b4894.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            fullTitle\n            shortDescription\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { fullTitle, shortDescription } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={fullTitle}\n            meta={[\n              { name: 'description', content: shortDescription },\n              { name: 'robots', content: 'noindex' }\n              // { name: 'keywords', content: 'sample, something' }\n            ]}\n          >\n            <html lang='en' />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}