{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/GroupedPageList.js","webpack:///./src/components/PageListGroup.js","webpack:///./src/components/PageList.js","webpack:///./src/components/PostLink.js","webpack:///./src/components/PostTitleSnip.js","webpack:///./src/components/PostTitleSnip.module.css","webpack:///./src/components/PostLink.module.css","webpack:///./src/components/PageList.module.css","webpack:///./src/components/PageListGroup.module.css"],"names":["_react","_interopRequireDefault","__webpack_require__","_Layout","_GroupedPageList","props","pages","data","allMarkdownRemark","edges","map","edge","node","key","fields","slug","default","createElement","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","React","createContext","StaticQuery","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","_reactHelmet","_gatsby","_ref","_data$site$siteMetada","site","siteMetadata","fullTitle","shortDescription","Fragment","title","meta","name","content","lang","_","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","_groupBy","_PageListGroup","GroupedPageList","recentCount","groups","_ref2","tags","frontmatter","getFirstTag","categories","keys","sort","a","b","date","getCategoryNames","topPages","slice","cat","defaultProps","_PageList","_PageListGroupModule","className","CSS","root","heading","_PostLink","_PageListModule","_PostTitleSnip","_PostLinkModule","_node$frontmatter","Link","to","link","PostTitleSnip","join","_reactOverdrive","_PostTitleSnipModule","_classnames","variant","varClass","isSmall","id"],"mappings":"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","file":"component---src-pages-index-js-7511af805801ee8d7ab5.js","sourcesContent":["/*\n * Home page\n * =========\n *\n * @flow\n */\n\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport { type PageNode } from '../types'\nimport GroupedPageList from '../components/GroupedPageList'\n\nexport type Props = {\n  data: {\n    site: {\n      siteMetadata: { title: string }\n    },\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageNode\n      }>\n    }\n  }\n}\n\nconst IndexPage = (props: Props) => {\n  const data = props.data\n  const { edges } = data.allMarkdownRemark\n\n  const pages = edges.map((edge: { node: PageNode }) => ({\n    node: edge.node,\n    key: edge.node.fields.slug\n  }))\n\n  return (\n    <Layout>\n      <GroupedPageList pages={pages} />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            fullTitle\n            shortDescription\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { fullTitle, shortDescription } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={fullTitle}\n            meta={[\n              { name: 'description', content: shortDescription },\n              { name: 'robots', content: 'noindex' }\n              // { name: 'keywords', content: 'sample, something' }\n            ]}\n          >\n            <html lang='en' />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\n\nimport React from 'react'\nimport { type PageNode } from '../types'\nimport groupBy from 'group-by'\nimport PageListGroup from './PageListGroup'\n\nexport type Props = {\n  pages: Array<{ node: PageNode, key: string }>,\n  recentCount: number\n}\n\nexport type Groups = {\n  [id: string]: Array<{ node: PageNode, key: string }>\n}\n\nconst GroupedPageList = ({ pages, recentCount }: Props) => {\n  const groups = groupBy(pages, ({ node }) => getFirstTag(node))\n  const categories = getCategoryNames(groups)\n\n  const topPages = pages.slice(0, recentCount)\n\n  return (\n    <>\n      <PageListGroup name={'Recent posts'} pages={topPages} />\n\n      {categories.map((cat: string) => (\n        <PageListGroup key={cat} name={cat} pages={groups[cat]} />\n      ))}\n    </>\n  )\n}\n\nGroupedPageList.defaultProps = {\n  recentCount: 4\n}\n\n/*\n * Returns the first tag of a given page node.\n */\n\nfunction getFirstTag(node: PageNode): ?string {\n  const { tags } = node.frontmatter\n  return tags && tags[0]\n}\n\n/**\n * Returns categories, sorted by their latest post's date (latest first).\n */\n\nfunction getCategoryNames(groups: Groups): string[] {\n  return Object.keys(groups).sort((a, b) => {\n    return (groups[a][0].node.frontmatter.date || '') <\n      (groups[b][0].node.frontmatter.date || '')\n      ? 1\n      : -1\n  })\n}\n\nexport default GroupedPageList\n","import React from 'react'\nimport PageList from './PageList'\nimport CSS from './PageListGroup.module.css'\n\nconst PageListGroup = ({ name, pages }) => {\n  return (\n    <div className={CSS.root} key={name}>\n      <h2 className={CSS.heading}>{name}</h2>\n      <PageList pages={pages} />\n    </div>\n  )\n}\n\nexport default PageListGroup\n","// @flow\n\nimport PostLink from '../components/PostLink'\nimport React from 'react'\nimport { type PageNode } from '../types'\nimport CSS from './PageList.module.css'\n\nexport type Props = {\n  pages: Array<{ node: PageNode, key: string }>\n}\n\nconst PageList = ({ pages }: Props) => {\n  return (\n    <div className={CSS.root}>\n      {pages.map(({ node, key }) => (\n        <PostLink node={node} key={key} />\n      ))}\n    </div>\n  )\n}\n\nexport default PageList\n","// @flow\n\nimport { Link } from 'gatsby'\nimport React from 'react'\nimport { PostTitleSnip } from './PostTitleSnip'\nimport { type PageNode } from '../types'\nimport CSS from './PostLink.module.css'\n\nexport type Props = {\n  node: PageNode\n}\n\nconst PostLink = ({ node }: Props) => {\n  const { slug } = node.fields\n  const { title, date, tags } = node.frontmatter\n  return (\n    <article className={CSS.root}>\n      <Link to={slug} className={CSS.link}>\n        <PostTitleSnip {...{ slug, title }} />\n        <small className={CSS.tags}>{(tags || []).join(' ')}</small>\n        <small className={CSS.date}>{date}</small>\n      </Link>\n    </article>\n  )\n}\n\nexport default PostLink\n","// @flow\n\nimport Overdrive from 'react-overdrive'\nimport React from 'react'\nimport CSS from './PostTitleSnip.module.css'\nimport cn from 'classnames'\n\nexport type Props = {\n  slug: string,\n  title: string,\n  className?: string,\n  variant?: '-small' | null\n}\n\nexport const PostTitleSnip = ({ slug, title, variant, className }: Props) => {\n  const varClass = variant === '-small' ? CSS.isSmall : ''\n\n  return (\n    <span className={cn(CSS.root, varClass)}>\n      <Overdrive id={`post-${slug}`}>\n        <strong className={cn(CSS.title, varClass)}>{title}</strong>\n      </Overdrive>\n    </span>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostTitleSnip-module--root--46GwP\",\"title\":\"PostTitleSnip-module--title--Mw7Fk\",\"isSmall\":\"PostTitleSnip-module--isSmall--1_EFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"PostLink-module--link--gquCT\",\"tags\":\"PostLink-module--tags--25yZF\",\"date\":\"PostLink-module--date--25x_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageList-module--root--3W9AO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageListGroup-module--root--1DPNI\",\"heading\":\"PageListGroup-module--heading--1TaQF\"};"],"sourceRoot":""}