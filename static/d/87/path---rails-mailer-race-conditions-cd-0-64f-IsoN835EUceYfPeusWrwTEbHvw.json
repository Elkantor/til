{"data":{"site":{"siteMetadata":{"title":"TIL"}},"markdownRemark":{"id":"c200b7e1-be30-508c-b928-29098f297bdf","excerpt":"Typical Rails convention will tell you to send email like using the ActiveMailer API using  #deliver_later . This is not a very good ideaâ€¦","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typical Rails convention will tell you to send email like using the ActiveMailer API using "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#deliver_later"}]},{"type":"text","value":". This is not a very good idea, and let me tell you why."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"NotificationMailer.notification(@user, @post).deliver_later\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Sample implementation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This kind of mailer would typically be implemented like so:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"class NotificationMailer < ApplicationMailer\n  def notification(user, post)\n    @user = user\n    @post = post\n\n    mail to: @user.email,\n         subject: \"You've got a notification\"\n  end\nend\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"next-block","properties":{"title":"Let's look at how this can cause problems."},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Race condition!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you follow Rails best practices, you'd be using "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#deliver_later"}]},{"type":"text","value":" to send email in the background. This is great for performance, but that means you have to start thinking asynchronously. The code above is written in a very synchronous style and will fail in certain conditions. Consider this scenario:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A notification is triggered for user Joe, who is "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"joe@example.com"}]},{"type":"text","value":", by creating a new "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Post"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A background job is created."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Before an email could be sent, the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Post"}]},{"type":"text","value":" is deleted."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The mailer now fails because "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@post"}]},{"type":"text","value":" is nil."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"next-block","properties":{"title":"So how can we fix this?"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Think asynchronously"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of passing Rails models or record ID's, pass a fully-loaded "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"plain hash"}]},{"type":"text","value":" of everything the mailer needs to send the email. Consider something like this instead:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"NotificationMailer.notification(\n  user: {\n    email: @user.email\n  },\n  post: {\n    id: @post.id,\n    title: @post.title,\n    url: post_url(@post)\n  }\n).deliver_later\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The mailer will now not need to hit the database to fetch any data, eliminating any race conditions. Even if the post is modified or deleted later on, the email will still send just fine."}]}],"data":{"quirksMode":false}},"fields":{"slug":"/rails-mailer-race-conditions/"},"frontmatter":{"title":"Rails mailer conventions are silly","date":"June 06, 2017","description":null,"attachments":null}}},"pageContext":{"node_id":"c200b7e1-be30-508c-b928-29098f297bdf","nodeType":"post","title":"Rails mailer conventions are silly","slug":"/rails-mailer-race-conditions/","previous":{"id":"27b535eb-7b02-5805-8634-6dba40cfd284","fields":{"slug":"/less-cpu-on-development/"},"frontmatter":{"title":"Use less CPU for Rails"}},"next":{"id":"62480162-a736-5435-823e-8cd5dcd78d97","fields":{"slug":"/redux-side-effects/"},"frontmatter":{"title":"Managing side effects in Redux"}}}}