{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter"}},"markdownRemark":{"id":"c9be4c82-28b5-5ece-a3e2-f2b0cd1c4728","excerpt":"A better \"Hello World\" The \"Hello world\" program is usually the first introduction to any programming language. It looks like this in the Câ€¦","htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"A better \"Hello World\""}]},{"type":"comment","value":" {.-large} "},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The \"Hello world\" program is usually the first introduction to any programming language. It looks like this in the C programming language:"}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-c"]},"children":[{"type":"text","value":"/* hello.c */\n#import <stdio.h>\n\nint main(int argc, char *argv[]) {\n  printf(\"Hello, world!\");\n  return 0;\n}\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It demonstrates the minimum amount you need to write a C program. In more modern languages however, this example isn't as useful anymore. Here's the same example in Python:"}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-py"]},"children":[{"type":"text","value":"# hello.py\nprint \"Hello, world!\"\n"}]}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"A better hello world"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In today's world of more succint programming languages, we need a different \"hello world\" to demonstrate language features better. Here's what I propose:"}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// hello.js\nfunction getGreeting(name) {\n  return `Hello, ${name}!`\n}\n\nconst message = getGreeting('world')\nconsole.log(message)\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This simple example demonstrates a few more things than printing strings:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"How to write a function with an argument"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Returning values from functions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"How to use variables"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The naming convention for functions (camelCase versus snake_case)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"String concatenation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Comments"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"More examples"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've started writing these kinds of programs for languages that I'm learning. Here's how it'd look like in Go, which I've added to my "},{"type":"element","tagName":"a","properties":{"href":"https://ricostacruz.com/cheatsheets/go"},"children":[{"type":"text","value":"Go cheatsheet"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-go"]},"children":[{"type":"text","value":"// hello.go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n  message := getGreeting(\"world\")\n  fmt.Println(message)\n}\n\nfunc getGreeting(name string) (string) {\n  return \"Hello, \" + name + \"!\"\n}\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's an Elixir version, also at the "},{"type":"element","tagName":"a","properties":{"href":"https://ricostacruz.com/cheatsheets/elixir"},"children":[{"type":"text","value":"Elixir cheatsheet"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-elixir"]},"children":[{"type":"text","value":"# hello.exs\ndefmodule Greeter do\n  def get_greeting(name) do\n    \"Hello, \" <> name <> \"!\"\n  end\nend\n\nmessage = Greeter.get_greeting(\"world\")\nIO.puts message\n"}]}]}]},"frontmatter":{"title":"A better Hello World","date":"September 19, 2017"}}},"pageContext":{"node_id":"c9be4c82-28b5-5ece-a3e2-f2b0cd1c4728","nodeType":"post","title":"A better Hello World","slug":"/a-better-hello-world/"}}