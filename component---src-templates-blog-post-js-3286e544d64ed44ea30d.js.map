{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PostTitleSnip.js","webpack:///./src/components/PostContent.js","webpack:///./src/components/BlogPostContent.js","webpack:///./src/components/NextBlock.js","webpack:///./src/components/H2Section.js","webpack:///./src/components/H3Section.js","webpack:///./src/components/BlogPostTitle.js","webpack:///./src/components/MainHeading.js"],"names":["_gatsby","__webpack_require__","_react","_interopRequireDefault","_reactHelmet","_BlogPostContent","_BlogPostTitle","_rehypeDecorate","_rehypeSectionizeHeadings","_Layout","_MainHeading","render","ast","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","_post$frontmatter","frontmatter","date","slug","fields","sections","htmlAst","default","h2","sectionTag","h3","children","titleBody","createElement","location","meta","name","content","MainHeading","body","slice","Link","to","rel","React","Component","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Fragment","lang","_","_reactOverdrive","className","id","_rehypeReact","_NextBlock","_H2Section","_H3Section","toReact","RehypeReact","components","next-block","NextBlock","h2-section","H2Section","h3-section","H3Section","Compiler","map","_PostContent","_reactWaypoint","state","entered","onEnter","_this","setState","onLeave","join","topOffset","bottomOffset","_PostTitleSnip","PostTitleSnip"],"mappings":"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","file":"component---src-templates-blog-post-js-3286e544d64ed44ea30d.js","sourcesContent":["// @flow\n\nimport { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport BlogPostContent from '../components/BlogPostContent'\nimport BlogPostTitle from '../components/BlogPostTitle'\nimport decorate from 'rehype-decorate'\nimport sectionize from 'rehype-sectionize-headings'\nimport Layout from '../components/Layout'\nimport { MainHeading } from '../components/MainHeading'\nimport { type PageNode, type HastNode } from '../types'\n\nexport type Props = {\n  location: string,\n  pageContext: {\n    previous: PageNode,\n    next: PageNode,\n  },\n  data: {\n    markdownRemark: PageNode & {\n      htmlAst: HastNode,\n    },\n    site: { siteMetadata: { title: string } },\n  },\n}\n\nclass BlogPostTemplate extends React.Component<Props> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n    const { title, date } = post.frontmatter\n    const { slug } = post.fields\n    const htmlAst = transformHtmlAst(post.htmlAst)\n    const sections = htmlAst.children || []\n\n    // The first part of the excerpt that will be promoted to the title card\n    const titleBody = (sections[0] && sections[0].children) || []\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${title} | ${siteTitle}`}\n        />\n        <MainHeading {...{ title, slug }} />\n        <BlogPostTitle {...{ title, date, body: titleBody }} />\n        <BlogPostContent {...{ title, date, body: sections.slice(1) }} />\n\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </Layout>\n    )\n  }\n}\n\nfunction transformHtmlAst(ast: HastNode): HastNode {\n  ast = decorate(ast)\n  ast = sectionize(ast, {\n    h2: { sectionTag: 'h2-section' },\n    h3: { sectionTag: 'h3-section' },\n  })\n  return ast\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={title}\n            meta={[\n              { name: 'description', content: 'Sample' },\n              { name: 'keywords', content: 'sample, something' },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","import Overdrive from 'react-overdrive'\nimport React from 'react'\nimport './PostTitleSnip.css'\n\nexport const PostTitleSnip = ({ slug, title }) => {\n  return (\n    <span className=\"post-title-snip-c\">\n      <Overdrive id={`post-${slug}`}>\n        <strong className=\"post-title-snip\">{title}</strong>\n      </Overdrive>\n    </span>\n  )\n}\n","// @flow\nimport React from 'react'\nimport RehypeReact from 'rehype-react'\nimport NextBlock from './NextBlock'\nimport H2Section from './H2Section'\nimport H3Section from './H3Section'\nimport { type HastNode } from '../types'\n\nexport type Props = {\n  body: HastNode[],\n}\n\nconst PostContent = ({ body }: Props) => {\n  const toReact = new RehypeReact({\n    createElement: React.createElement,\n    components: {\n      'next-block': NextBlock,\n      'h2-section': H2Section,\n      'h3-section': H3Section,\n    },\n  }).Compiler\n\n  return body.map(toReact)\n}\n\nexport default PostContent\n","/*\n * BlogPostContent\n * ===============\n *\n * Blog post content\n *\n * @flow\n */\n\nimport React from 'react'\nimport PostContent from './PostContent'\nimport Overdrive from 'react-overdrive'\nimport './BlogPostContent.css'\nimport { type HastNode } from '../types'\n\nexport type Props = {\n  body: HastNode[],\n}\n\n/**\n * Blog post content.\n *\n * @example\n *     <BlogPostContent htmlAst={htmlAst} />\n */\n\nconst BlogPostContent = ({ body }: Props) => {\n  return (\n    <div className=\"blog-post-content\">\n      <PostContent {...{ body }} />\n    </div>\n  )\n}\n\nexport default BlogPostContent\n","/*\n * NextBlock\n * =========\n *\n * The \"Next: ...\" block at the end of every h2 section.\n */\n\nimport React from 'react'\nimport './NextBlock.css'\n\nconst NextBlock = ({ title }) => {\n  return (\n    <blockquote className=\"next-block\">\n      <strong>Next:</strong> {title}\n    </blockquote>\n  )\n}\n\nexport default NextBlock\n","import React from 'react'\nimport Waypoint from 'react-waypoint'\nimport './H2Section.css'\n\nclass H2Section extends React.Component {\n  state = {\n    entered: false,\n  }\n\n  onEnter = () => {\n    this.setState({ entered: true })\n  }\n\n  onLeave = () => {\n    this.setState({ entered: false })\n  }\n\n  render() {\n    const className = [\n      this.props.className,\n      this.state.entered ? '-active' : '-inactive',\n    ].join(' ')\n\n    const { children } = this.props\n\n    return (\n      <Waypoint\n        onEnter={this.onEnter}\n        onLeave={this.onLeave}\n        topOffset=\"60%\"\n        bottomOffset=\"40%\"\n      >\n        <section className={className}>{children}</section>\n      </Waypoint>\n    )\n  }\n}\n\nexport default H2Section\n","import React from 'react'\nimport './H3Section.css'\n\nconst H3Section = ({ children, className }) => (\n  <section className={className}>{children}</section>\n)\n\nexport default H3Section\n","import React from 'react'\nimport './BlogPostTitle.css'\nimport PostContent from './PostContent'\n\n// For MarkdownBody\nimport './BlogPostContent.css'\n\nconst BlogPostTitle = ({ title, date, body }) => {\n  return (\n    <div className=\"blog-post-title\">\n      <h1>\n        {title} <span className=\"blinker\" />\n      </h1>\n      <p className=\"byline\">Written by Rico Sta. Cruz / {date}</p>\n\n      {/* <hr /> */}\n      <div className=\"MarkdownBody\">\n        <PostContent body={body} />\n      </div>\n    </div>\n  )\n}\n\nexport default BlogPostTitle\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport Overdrive from 'react-overdrive'\nimport './MainHeading.css'\nimport { PostTitleSnip } from './PostTitleSnip'\n\nexport const MainHeading = ({ title, slug }) => {\n  return (\n    <div className=\"main-heading\">\n      <span className=\"left\">\n        <Link to=\"/\" className=\"brand\" />\n      </span>\n      <span className=\"right\">\n        <span className=\"prefix\">\n          <Link to=\"/\">TIL</Link>\n          {' / '}\n        </span>\n        <PostTitleSnip {...{ slug, title }} />\n      </span>\n    </div>\n  )\n}\n"],"sourceRoot":""}