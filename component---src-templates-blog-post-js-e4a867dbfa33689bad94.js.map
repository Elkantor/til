{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PostTitleSnip.js","webpack:///./src/components/PostContent.js","webpack:///./src/components/BlogPostTitle.js","webpack:///./src/components/BlogPostContent.js","webpack:///./src/components/NextBlock.js","webpack:///./src/components/H2Section.js","webpack:///./src/components/H3Section.js","webpack:///./src/components/MainHeading.js","webpack:///./src/components/BlogNav.js"],"names":["_gatsby","__webpack_require__","_react","_interopRequireDefault","_reactHelmet","_BlogPostContent","_rehypeDecorate","_rehypeSectionizeHeadings","_Layout","_MainHeading","_BlogNav","render","ast","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","_post$frontmatter","frontmatter","date","slug","fields","sections","htmlAst","default","h2","sectionTag","h3","children","titleBody","createElement","location","meta","name","content","MainHeading","BlogNav","body","slice","Link","to","rel","React","Component","Error","_propTypes","_gatsbyLink","_interopRequireWildcard","_publicPageRenderer","_parsePath","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","_pageRenderer","_loader","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Fragment","lang","_","_reactOverdrive","varClass","variant","className","id","_rehypeReact","_NextBlock","_H2Section","_H3Section","toReact","RehypeReact","components","next-block","NextBlock","h2-section","H2Section","h3-section","H3Section","Compiler","map","index","key","_PostContent","_BlogPostTitle","_reactWaypoint","state","entered","onEnter","_this","setState","onLeave","join","topOffset","bottomOffset","e","then","t","bind","_PostTitleSnip","PostTitleSnip"],"mappings":"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","file":"component---src-templates-blog-post-js-e4a867dbfa33689bad94.js","sourcesContent":["// @flow\n\nimport { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport BlogPostContent from '../components/BlogPostContent'\nimport BlogPostTitle from '../components/BlogPostTitle'\nimport decorate from 'rehype-decorate'\nimport sectionize from 'rehype-sectionize-headings'\nimport Layout from '../components/Layout'\nimport { MainHeading } from '../components/MainHeading'\nimport { type PageNode, type HastNode } from '../types'\nimport { BlogNav } from '../components/BlogNav'\n\nexport type Props = {\n  location: string,\n  pageContext: {\n    previous: PageNode,\n    next: PageNode\n  },\n  data: {\n    markdownRemark: PageNode & {\n      htmlAst: HastNode\n    },\n    site: { siteMetadata: { title: string } }\n  }\n}\n\nclass BlogPostTemplate extends React.Component<Props> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n    const { title, date } = post.frontmatter\n    const { slug } = post.fields\n    const htmlAst = transformHtmlAst(post.htmlAst)\n    const sections = htmlAst.children || []\n\n    // The first part of the excerpt that will be promoted to the title card\n    const titleBody = (sections[0] && sections[0].children) || []\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${title} | ${siteTitle}`}\n        />\n        <MainHeading {...{ title, slug }} />\n        <div>\n          <BlogNav {...{ title, slug }} />\n          <BlogPostContent\n            {...{ title, date, titleBody, body: sections.slice(1) }}\n          />\n        </div>\n\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </Layout>\n    )\n  }\n}\n\nfunction transformHtmlAst(ast: HastNode): HastNode {\n  ast = decorate(ast)\n  ast = sectionize(ast, {\n    h2: { sectionTag: 'h2-section' },\n    h3: { sectionTag: 'h3-section' }\n  })\n  return ast\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'sanitize.css'\nimport './Layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n\n      return (\n        <>\n          <Helmet\n            title={title}\n            meta={[\n              { name: 'description', content: 'Sample' },\n              { name: 'keywords', content: 'sample, something' },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <div>{children}</div>\n        </>\n      )\n    }}\n  />\n)\n\nexport default Layout\n","// @flow\n\nimport Overdrive from 'react-overdrive'\nimport React from 'react'\nimport './PostTitleSnip.css'\n\nexport type Props = {\n  slug: string,\n  title: string,\n  variant?: '-small' | null\n}\n\nexport const PostTitleSnip = ({ slug, title, variant }: Props) => {\n  const varClass = variant || ''\n\n  return (\n    <span className={`post-title-snip-c ${varClass}`}>\n      <Overdrive id={`post-${slug}`}>\n        <strong className={`post-title-snip ${varClass}`}>{title}</strong>\n      </Overdrive>\n    </span>\n  )\n}\n","/*\n * PostContent\n * ===========\n *\n * Renders a Remark HAST as React nodes.\n *\n * @flow\n */\n\nimport * as React from 'react'\nimport RehypeReact from 'rehype-react'\nimport NextBlock from './NextBlock'\nimport H2Section from './H2Section'\nimport H3Section from './H3Section'\nimport { type HastNode } from '../types'\n\nexport type Props = {\n  body: HastNode[]\n}\n\nconst PostContent = ({ body }: Props): React.Node => {\n  const toReact = new RehypeReact({\n    createElement: React.createElement,\n    components: {\n      'next-block': NextBlock,\n      'h2-section': H2Section,\n      'h3-section': H3Section\n    }\n  }).Compiler\n\n  return body.map((ast, index) => {\n    return <React.Fragment key={index}>{toReact(ast)}</React.Fragment>\n  })\n}\n\nexport default PostContent\n","import React from 'react'\nimport PostContent from './PostContent'\nimport './BlogPostTitle.css'\nimport './BlogPostContent.css'\n\nconst BlogPostTitle = ({ title, date, body }) => {\n  return (\n    <div className=\"blog-post-title\">\n      <h1>\n        {title} <span className=\"blinker\" />\n      </h1>\n      <p className=\"byline\">Written by Rico Sta. Cruz / {date}</p>\n\n      {/* <hr /> */}\n      <div className=\"MarkdownBody\">\n        <PostContent body={body} />\n      </div>\n    </div>\n  )\n}\n\nexport default BlogPostTitle\n","/*\n * BlogPostContent\n * ===============\n *\n * Blog post content\n *\n * @flow\n */\n\nimport React from 'react'\nimport PostContent from './PostContent'\nimport Overdrive from 'react-overdrive'\nimport './BlogPostContent.css'\nimport { type HastNode } from '../types'\nimport BlogPostTitle from './BlogPostTitle'\n\nexport type Props = {\n  body: HastNode[],\n  title: string,\n  date: string,\n  titleBody: HastNode[]\n}\n\n/**\n * Blog post content.\n *\n * @example\n *     <BlogPostContent htmlAst={htmlAst} />\n */\n\nconst BlogPostContent = ({ body, titleBody, title, date }: Props) => {\n  return (\n    <div className=\"blog-post-content\">\n      <BlogPostTitle {...{ title, date, body: titleBody }} />\n      <PostContent {...{ body }} />\n    </div>\n  )\n}\n\nexport default BlogPostContent\n","/*\n * NextBlock\n * =========\n *\n * The \"Next: ...\" block at the end of every h2 section.\n */\n\nimport React from 'react'\nimport './NextBlock.css'\n\nconst NextBlock = ({ title }) => {\n  return (\n    <blockquote className=\"next-block\">\n      <strong>Next:</strong> {title}\n    </blockquote>\n  )\n}\n\nexport default NextBlock\n","import React from 'react'\nimport Waypoint from 'react-waypoint'\nimport './H2Section.css'\n\nclass H2Section extends React.Component {\n  state = {\n    entered: false\n  }\n\n  onEnter = () => {\n    this.setState({ entered: true })\n  }\n\n  onLeave = () => {\n    this.setState({ entered: false })\n  }\n\n  render() {\n    const className = [\n      this.props.className,\n      this.state.entered ? '-active' : '-inactive'\n    ].join(' ')\n\n    const { children } = this.props\n\n    return (\n      <Waypoint\n        onEnter={this.onEnter}\n        onLeave={this.onLeave}\n        topOffset=\"60%\"\n        bottomOffset=\"40%\"\n      >\n        <section className={className}>{children}</section>\n      </Waypoint>\n    )\n  }\n}\n\nexport default H2Section\n","import React from 'react'\n\nconst H3Section = ({ children, className }) => {\n  import('./H3Section.css')\n  return <section className={className}>{children}</section>\n}\n\nexport default H3Section\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport Overdrive from 'react-overdrive'\nimport './MainHeading.css'\nimport { PostTitleSnip } from './PostTitleSnip'\n\nexport const MainHeading = ({ title, slug }) => {\n  return (\n    <div className=\"main-heading\">\n      <div className=\"left\">\n        <Link to=\"/\" className=\"brandlink\" />\n      </div>\n      <div className=\"right\">\n        <span className=\"line\" />\n        <br />\n        <PostTitleSnip {...{ slug, title }} variant=\"-small\" />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const BlogNav = ({ title, slug }) => {\n  import('./BlogNav.css')\n  return (\n    <div className=\"blog-nav\">\n      <div className=\"area\">\n        <div className=\"bar\">\n          <strong>TIL</strong>\n          <span>{title}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}